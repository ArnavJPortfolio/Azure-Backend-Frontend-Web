{"id":"node_modules/@azure/keyvault-secrets/dist-esm/keyvault-secrets/src/secretsModels.js","dependencies":[{"name":"C:\\Users\\arnav\\azure-blobs-js-browser\\node_modules\\@azure\\keyvault-secrets\\dist-esm\\keyvault-secrets\\src\\secretsModels.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\arnav\\azure-blobs-js-browser\\package.json","includedInParent":true,"mtime":1623110868383},{"name":"C:\\Users\\arnav\\azure-blobs-js-browser\\node_modules\\@azure\\keyvault-secrets\\package.json","includedInParent":true,"mtime":1623110852540}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LATEST_API_VERSION = void 0;\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The latest supported KeyVault service API version\n */\nconst LATEST_API_VERSION = \"7.1\";\nexports.LATEST_API_VERSION = LATEST_API_VERSION;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":13,"column":0}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":13,"column":6}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":39,"column":31},"generated":{"line":13,"column":24}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":13,"column":27}},{"source":"../../../src/secretsModels.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":13,"column":32}}],"sources":{"../../../src/secretsModels.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { DeletionRecoveryLevel } from \"./generated/models\";\n\n/**\n * @internal\n * @ignore\n * An interface representing the SecretClient. For internal use.\n */\nexport interface SecretClientInterface {\n  /**\n   * Recovers the deleted secret in the specified vault.\n   */\n  recoverDeletedSecret(\n    secretName: string,\n    options?: RecoverDeletedSecretOptions\n  ): Promise<SecretProperties>;\n  /**\n   * The getSecret method is applicable to any secret stored in Azure Key Vault. This operation requires\n   * the secrets/get permission.\n   */\n  getSecret(secretName: string, options?: GetSecretOptions): Promise<KeyVaultSecret>;\n  /**\n   * Deletes a secret stored in Azure Key Vault.\n   */\n  deleteSecret(secretName: string, options?: coreHttp.OperationOptions): Promise<DeletedSecret>;\n  /**\n   * The getDeletedSecret method returns the specified deleted secret along with its properties.\n   * This operation requires the secrets/get permission.\n   */\n  getDeletedSecret(secretName: string, options?: DeleteSecretOptions): Promise<DeletedSecret>;\n}\n\n/**\n * The latest supported KeyVault service API version\n */\nexport const LATEST_API_VERSION = \"7.1\";\n\n/**\n * The optional parameters accepted by the KeyVault's KeyClient\n */\nexport interface SecretClientOptions extends coreHttp.PipelineOptions {\n  /**\n   * The accepted versions of the KeyVault's service API.\n   */\n  serviceVersion?: \"7.0\" | \"7.1\";\n}\n\n/**\n * An interface representing a KeyVault Secret, with its name, value and {@link SecretProperties}.\n */\nexport interface KeyVaultSecret {\n  /**\n   * The properties of the secret.\n   */\n  properties: SecretProperties;\n  /**\n   * The value of the secret.\n   */\n  value?: string;\n  /**\n   * The name of the secret.\n   */\n  name: string;\n}\n\n/**\n * An interface representing the properties of a {@link KeyVaultSecret}.\n */\nexport interface SecretProperties {\n  /**\n   * The base URL to the vault.\n   */\n  vaultUrl: string;\n  /**\n   * The version of the secret. May be undefined.\n   */\n  version?: string;\n  /**\n   * The name of the secret.\n   */\n  name: string;\n  /**\n   * The secret id.\n   */\n  id?: string;\n  /**\n   * The content type of the secret.\n   */\n  contentType?: string;\n  /**\n   * Determines whether the object is enabled.\n   */\n  enabled?: boolean;\n  /**\n   * Not before date in UTC.\n   */\n  readonly notBefore?: Date;\n  /**\n   * Expiry date in UTC.\n   */\n  readonly expiresOn?: Date;\n  /**\n   * Application specific\n   * metadata in the form of key-value pairs.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * If this is a secret backing a KV certificate, then\n   * this field specifies the corresponding key backing the KV certificate.\n   * **NOTE: This property will not be serialized. It can only be populated by\n   * the server.**\n   */\n  readonly keyId?: URL;\n  /**\n   * True if the secret's lifetime is managed by\n   * key vault. If this is a secret backing a certificate, then managed will be\n   * true.\n   * **NOTE: This property will not be serialized. It can only be populated by\n   * the server.**\n   */\n  readonly managed?: boolean;\n  /**\n   * Creation time in UTC.\n   * **NOTE: This property will not be serialized. It can only be populated by\n   * the server.**\n   */\n  readonly createdOn?: Date;\n  /**\n   * Last updated time in UTC.\n   * **NOTE: This property will not be serialized. It can only be populated by\n   * the server.**\n   */\n  readonly updatedOn?: Date;\n  /**\n   * Reflects the deletion\n   * recovery level currently in effect for keys in the current vault. If it\n   * contains 'Purgeable' the key can be permanently deleted by a privileged\n   * user; otherwise, only the system can purge the key, at the end of the\n   * retention interval. Possible values include: 'Purgeable',\n   * 'Recoverable+Purgeable', 'Recoverable',\n   * 'Recoverable+ProtectedSubscription'\n   * **NOTE: This property will not be serialized. It can only be populated by\n   * the server.**\n   */\n  readonly recoveryLevel?: DeletionRecoveryLevel;\n  /**\n   * The retention dates of the softDelete data.\n   * The value should be >=7 and <=90 when softDelete enabled.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  recoverableDays?: number;\n}\n\n/**\n * An interface representing a deleted KeyVault Secret.\n */\nexport interface DeletedSecret {\n  /**\n   * The properties of the secret\n   */\n  properties: SecretProperties & {\n    /**\n     * The url of the recovery object, used to\n     * identify and recover the deleted secret.\n     */\n    recoveryId?: string;\n    /**\n     * The time when the secret is scheduled\n     * to be purged, in UTC\n     * **NOTE: This property will not be serialized. It can only be populated by\n     * the server.**\n     */\n    scheduledPurgeDate?: Date;\n    /**\n     * The time when the secret was deleted, in UTC\n     * **NOTE: This property will not be serialized. It can only be populated by\n     * the server.**\n     */\n    deletedOn?: Date;\n  };\n  /**\n   * The secret value.\n   */\n  value?: string;\n  /**\n   * The name of the secret.\n   */\n  name: string;\n}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link beginDeleteSecret} and {@link beginRecoverDeletedKey}.\n */\nexport interface SecretPollerOptions extends coreHttp.OperationOptions {\n  /**\n   * Time between each polling in milliseconds.\n   */\n  intervalInMs?: number;\n  /**\n   * A serialized poller, used to resume an existing operation\n   */\n  resumeFrom?: string;\n}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link beginDeleteSecret}\n */\nexport interface BeginDeleteSecretOptions extends SecretPollerOptions {}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link beginRecoverDeletedSecret}\n */\nexport interface BeginRecoverDeletedSecretOptions extends SecretPollerOptions {}\n\n/**\n * Options for {@link setSecret}.\n */\nexport interface SetSecretOptions extends coreHttp.OperationOptions {\n  /**\n   * Application specific metadata in the form of key-value pairs.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Type of the secret value such as a password.\n   */\n  contentType?: string;\n  /**\n   * Determines whether the object is enabled.\n   */\n  enabled?: boolean;\n  /**\n   * Not before date in UTC.\n   */\n  readonly notBefore?: Date;\n  /**\n   * Expiry date in UTC.\n   */\n  readonly expiresOn?: Date;\n}\n\n/**\n * Options for {@link updateSecretProperties}.\n */\nexport interface UpdateSecretPropertiesOptions extends coreHttp.OperationOptions {\n  /**\n   * Type of the secret value such as a password.\n   */\n  contentType?: string;\n  /**\n   * Determines whether the object is enabled.\n   */\n  enabled?: boolean;\n  /**\n   * Not before date in UTC.\n   */\n  readonly notBefore?: Date;\n  /**\n   * Expiry date in UTC.\n   */\n  readonly expiresOn?: Date;\n  /**\n   * Application specific metadata in the form of key-value pairs.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Options for {@link getSecret}.\n */\nexport interface GetSecretOptions extends coreHttp.OperationOptions {\n  /**\n   * The version of the secret to retrieve. If not\n   * specified the latest version of the secret will be retrieved.\n   */\n  version?: string;\n}\n\n/**\n * Options for {@link getDeletedSecret}.\n */\nexport interface GetDeletedSecretOptions extends coreHttp.OperationOptions {}\n\n/**\n * Options for {@link purgeDeletedSecret}.\n */\nexport interface PurgeDeletedSecretOptions extends coreHttp.OperationOptions {}\n\n/**\n * Options for {@link backupSecretOptions}.\n */\nexport interface BackupSecretOptions extends coreHttp.OperationOptions {}\n\n/**\n * Options for {@link restoreSecretBackup}.\n */\nexport interface RestoreSecretBackupOptions extends coreHttp.OperationOptions {}\n\n/**\n * @internal\n * @ignore\n * Options for {@link recoverDeletedSecret}.\n */\nexport interface RecoverDeletedSecretOptions extends coreHttp.OperationOptions {}\n\n/**\n * @internal\n * @ignore\n * Options for {@link deleteSecret}.\n */\nexport interface DeleteSecretOptions extends coreHttp.OperationOptions {}\n\n/**\n * Options for {@link listPropertiesOfSecretVersions}.\n */\nexport interface ListPropertiesOfSecretVersionsOptions extends coreHttp.OperationOptions {}\n\n/**\n * Options for {@link listPropertiesOfSecrets}.\n */\nexport interface ListPropertiesOfSecretsOptions extends coreHttp.OperationOptions {}\n\n/**\n * Options for {@link listDeletedSecrets}.\n */\nexport interface ListDeletedSecretsOptions extends coreHttp.OperationOptions {}\n"},"lineCount":null}},"error":null,"hash":"956f3085a617ee95aeaddd9f9538c05d","cacheData":{"env":{}}}