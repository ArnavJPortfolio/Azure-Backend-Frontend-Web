{"id":"node_modules/json-edm-parser/parser.js","dependencies":[{"name":"C:\\Users\\arnav\\azure-blobs-js-browser\\package.json","includedInParent":true,"mtime":1623110868383},{"name":"C:\\Users\\arnav\\azure-blobs-js-browser\\node_modules\\json-edm-parser\\package.json","includedInParent":true,"mtime":1622936787140},{"name":"util","loc":{"line":25,"column":19},"parent":"C:\\Users\\arnav\\azure-blobs-js-browser\\node_modules\\json-edm-parser\\parser.js","resolved":"C:\\Users\\arnav\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\util\\util.js"},{"name":"jsonparse","loc":{"line":26,"column":25},"parent":"C:\\Users\\arnav\\azure-blobs-js-browser\\node_modules\\json-edm-parser\\parser.js","resolved":"C:\\Users\\arnav\\azure-blobs-js-browser\\node_modules\\jsonparse\\jsonparse.js"}],"generated":{"js":"// The MIT License (MIT)\r\n//\r\n// Copyright (c) 2016 Yang Xia\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\n'use strict';\r\n\r\nvar util = require('util');\r\nvar JsonParser = require('jsonparse');\r\n\r\nexports = module.exports;\r\nutil.inherits(Parser, JsonParser);\r\n\r\n/**\r\n* Parser Instructor\r\n*/\r\nfunction Parser() {\r\n  this.internalParser = new JsonParser();\r\n  this.originalOnToken = this.internalParser.onToken;\r\n  this.internalParser.onToken = onToken.bind(this);\r\n  return this.internalParser;\r\n}\r\n\r\n/**\r\n* Handles the EDM types in the JSON object\r\n*   1. Number will be treated as Edm.Int32 by default\r\n*   2. Literal value 1.0 will be treated as Edm.Double\r\n*   3. Others will be handled according to the literal value\r\n*/\r\nvar onToken = function (token, value) {\r\n  var self = this;\r\n  var emitString = false;\r\n  function additionalEmit(additionalKey, additionalValue) {\r\n    var oldKey = self.internalParser.key;\r\n    self.internalParser.key = additionalKey;\r\n    self.internalParser.onValue(additionalValue);\r\n    self.internalParser.key = oldKey;\r\n  }\r\n\r\n  if (token === JsonParser.C.STRING ||\r\n  token === JsonParser.C.NUMBER ||\r\n  token === JsonParser.C.TRUE ||\r\n  token === JsonParser.C.FALSE ||\r\n  token === JsonParser.C.NULL) {\r\n    // Parser will emit value in these cases\r\n    if (typeof value === 'number' && \r\n    this.internalParser.string.indexOf('.') != -1 && \r\n    parseInt(this.internalParser.string) === value &&\r\n    this.internalParser.mode !== JsonParser.C.ARRAY) {\r\n      var typeKey = this.internalParser.key + '@odata.type';\r\n      if (this.internalParser.value) {\r\n        this.internalParser.value[typeKey] = 'Edm.Double';\r\n      }\r\n      additionalEmit(typeKey, 'Edm.Double');\r\n      \r\n      // Determine whether return raw string to avoid losing precision\r\n      emitString = this.internalParser.string !== value.toString();\r\n    }\r\n  }\r\n  if (emitString) {\r\n    this.originalOnToken.call(this.internalParser, token, this.internalParser.string);\r\n  } else {\r\n    this.originalOnToken.call(this.internalParser, token, value);\r\n  }\r\n};\r\n\r\nParser.C = JsonParser.C;\r\nmodule.exports = Parser;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/json-edm-parser/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/json-edm-parser/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"node_modules/json-edm-parser/parser.js":"// The MIT License (MIT)\r\n//\r\n// Copyright (c) 2016 Yang Xia\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\n'use strict';\r\n\r\nvar util = require('util');\r\nvar JsonParser = require('jsonparse');\r\n\r\nexports = module.exports;\r\nutil.inherits(Parser, JsonParser);\r\n\r\n/**\r\n* Parser Instructor\r\n*/\r\nfunction Parser() {\r\n  this.internalParser = new JsonParser();\r\n  this.originalOnToken = this.internalParser.onToken;\r\n  this.internalParser.onToken = onToken.bind(this);\r\n  return this.internalParser;\r\n}\r\n\r\n/**\r\n* Handles the EDM types in the JSON object\r\n*   1. Number will be treated as Edm.Int32 by default\r\n*   2. Literal value 1.0 will be treated as Edm.Double\r\n*   3. Others will be handled according to the literal value\r\n*/\r\nvar onToken = function (token, value) {\r\n  var self = this;\r\n  var emitString = false;\r\n  function additionalEmit(additionalKey, additionalValue) {\r\n    var oldKey = self.internalParser.key;\r\n    self.internalParser.key = additionalKey;\r\n    self.internalParser.onValue(additionalValue);\r\n    self.internalParser.key = oldKey;\r\n  }\r\n\r\n  if (token === JsonParser.C.STRING ||\r\n  token === JsonParser.C.NUMBER ||\r\n  token === JsonParser.C.TRUE ||\r\n  token === JsonParser.C.FALSE ||\r\n  token === JsonParser.C.NULL) {\r\n    // Parser will emit value in these cases\r\n    if (typeof value === 'number' && \r\n    this.internalParser.string.indexOf('.') != -1 && \r\n    parseInt(this.internalParser.string) === value &&\r\n    this.internalParser.mode !== JsonParser.C.ARRAY) {\r\n      var typeKey = this.internalParser.key + '@odata.type';\r\n      if (this.internalParser.value) {\r\n        this.internalParser.value[typeKey] = 'Edm.Double';\r\n      }\r\n      additionalEmit(typeKey, 'Edm.Double');\r\n      \r\n      // Determine whether return raw string to avoid losing precision\r\n      emitString = this.internalParser.string !== value.toString();\r\n    }\r\n  }\r\n  if (emitString) {\r\n    this.originalOnToken.call(this.internalParser, token, this.internalParser.string);\r\n  } else {\r\n    this.originalOnToken.call(this.internalParser, token, value);\r\n  }\r\n};\r\n\r\nParser.C = JsonParser.C;\r\nmodule.exports = Parser;"},"lineCount":85}},"error":null,"hash":"e56bdfe898b295ac43655c584a68378b","cacheData":{"env":{}}}