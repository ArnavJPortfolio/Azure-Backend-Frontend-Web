{"version":3,"sources":["../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/process/browser.js","../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/base64-js/index.js","../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/ieee754/index.js","../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/isarray/index.js","../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/buffer/index.js","azure-storage-blob.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","global","factory","define","amd","self","azblob","getHeaderKey","headerName","toLowerCase","HttpHeaders","rawHeaders","_headersMap","set","headerValue","value","toString","get","header","undefined","contains","remove","result","headerKey","headersArray","headers","headerNames","headerValues","toJson","JSON","stringify","clone","encodeByteArray","str","String","fromCharCode","btoa","decodeString","byteString","atob","arr","Uint8Array","charCodeAt","createCommonjsModule","fn","rngBrowser","getRandomValues","crypto","bind","msCrypto","window","rnds8","whatwgRNG","rnds","mathRNG","r","Math","random","byteToHex","substr","bytesToUuid","buf","offset","bth","join","bytesToUuid_1","v4","options","rng","ii","v4_1","Constants","msRestVersion","HTTP","HTTPS","HTTP_PROXY","HTTPS_PROXY","HttpConstants","HttpVerbs","PUT","GET","DELETE","POST","MERGE","HEAD","PATCH","StatusCodes","TooManyRequests","HeaderConstants","AUTHORIZATION","AUTHORIZATION_SCHEME","RETRY_AFTER","USER_AGENT","isNode","node","stripResponse","response","strippedResponse","body","bodyAsText","status","stripRequest","request","strippedRequest","isValidUuid","uuid","validUuidRegex","RegExp","test","generateUuid","delay","t","Promise","resolve","prepareXMLRootList","obj","elementName","_a","isArray","validateISODuration","isDuration","replaceAll","searchValue","replaceValue","split","isPrimitiveType","Serializer","modelMappers","isXML","validateConstraints","mapper","objectName","failValidation","constraintName","constraintValue","constraints","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","pattern","match","some","item","ar","indexOf","serialize","object","payload","mapperType","type","serializedName","isConstant","defaultValue","required","nullable","serializeBasicTypes","enumMapper","serializeEnumType","allowedValues","serializeDateTypes","serializeByteArrayType","serializeBase64UrlType","serializeSequenceType","serializeDictionaryType","serializeCompositeType","deserialize","responseBody","xmlIsWrapped","deserializeCompositeType","parseFloat","isNaN","Date","unixTimeToDate","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","trimEnd","ch","bufferToBase64Url","buffer","replace","valueOf","splitSerializeName","prop","classes","partialclass","subwords","_i","subwords_1","charAt","dateToUnixTime","d","floor","getTime","n","typeName","objectType","ArrayBuffer","isView","Blob","isPresent","parse","toISOString","substring","toUTCString","serializer","elementType","element","tempArray","valueType","tempDictionary","Object","keys","key","resolveModelProperties","modelProps","modelProperties","className","modelMapper","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","_b","propertyMapper","readOnly","propName","parentObject","xmlName","xmlElementName","paths","pop","_c","paths_1","pathName","childObject","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","serializedValue","xmlIsAttribute","$","additionalPropertiesMapper","additionalProperties","propNames","_loop_1","clientPropName","isAdditionalProperty","every","pn","isSpecialXmlProperty","propertyName","includes","instance","handledPropertyNames","headerCollectionPrefix","dictionary","startsWith","unwrappedProperty","isEmptyWrappedList","propertyInstance","res","_d","paths_2","responsePropName","_e","_f","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","indexDiscriminator","polymorphicMapper","discriminators","getPolymorphicDiscriminatorSafely","strEnum","o","o_1","MapperType","WebResource","url","method","query","streamResponseBody","withCredentials","abortSignal","onUploadProgress","onDownloadProgress","proxySettings","keepAlive","formData","validateRequestProperties","prepare","pathTemplate","validMethods","toUpperCase","pathTemplate_1","pathParameters_1","pathParameters","baseUrl","url_1","endsWith","slice","segments","forEach","pathParamName","pathParam","encodeURIComponent","skipUrlEncoding","queryParameters","queryParams","queryParamName","queryParam","disableClientRequestId","bodyIsStream","serializationMapper","mappers","disableJsonStringifyOnBody","operationSpec","shouldDeserialize","operationResponseGetter","extendStatics","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","s","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","done","then","__generator","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","RestError","_super","message","code","statusCode","_this","REQUEST_SEND_ERROR","REQUEST_ABORTED_ERROR","PARSE_ERROR","XhrHttpClient","sendRequest","xhr","XMLHttpRequest","listener_1","abort","addEventListener","readyState","DONE","removeEventListener","addProgressListener","upload","requestForm_1","FormData","appendFormValue","append","formKey","formValue","j","contentType","open","setRequestHeader","responseType","send","HEADERS_RECEIVED","blobBody","rejectOnTerminalEvent","parseHeaders","responseText","listener","rawEvent","loadedBytes","loaded","responseHeaders","headerLines","getAllResponseHeaders","trim","headerLines_1","line","index","HttpPipelineLogLevel","getPathStringFromParameter","parameter","getPathStringFromParameterPath","parameterPath","isStreamOperation","responses","operationResponse","bodyMapper","Stream","parser","DOMParser","parseXML","dom","parseFromString","throwIfError","domToObject","childNodes","err","errorNS","getElementsByTagName","namespaceURI","ignored","parserErrors","getElementsByTagNameNS","innerHTML","isElement","attributes","asElementWithAttributes","hasAttributes","childNodeCount","firstChildNode","onlyChildTextValue","nodeType","Node","TEXT_NODE","nodeValue","elementWithAttributes","attr","nodeName","child","doc","document","implementation","createDocument","XMLSerializer","stringifyXML","opts","rootName","buildNode","serializeToString","buildAttributes","attrs","createAttribute","elem","createElement","textContent","obj_1","arrayElem","setNamedItem","_g","_h","appendChild","BaseRequestPolicy","_nextPolicy","_options","shouldLog","logLevel","log","RequestPolicyOptions","_logger","OFF","minimumLogLevel","deserializationPolicy","deserializationContentTypes","nextPolicy","DeserializationPolicy","defaultJsonContentTypes","defaultXmlContentTypes","jsonContentTypes","json","xmlContentTypes","xml","deserializeResponseBody","getOperationResponse","parsedResponse","shouldDeserializeResponse","expectedStatusCodes","hasNoExpectedStatusCodes","responseSpec","isExpectedStatusCode","defaultResponseSpec","default","initialErrorMessage","error","parsedErrorResponse","parsedBody","defaultResponseBodyMapper","internalError","valueToDeserialize","Sequence","defaultError","restError","httpMethod","headersMapper","parsedHeaders","errorHandler","msg","errCode","text_1","contentComponents","map","component","catch","exponentialRetryPolicy","retryCount","retryInterval","minRetryInterval","maxRetryInterval","ExponentialRetryPolicy","DEFAULT_CLIENT_RETRY_INTERVAL","DEFAULT_CLIENT_RETRY_COUNT","DEFAULT_CLIENT_MAX_RETRY_INTERVAL","DEFAULT_CLIENT_MIN_RETRY_INTERVAL","isNumber","retry","shouldRetry","policy","retryData","currentCount","updateRetryData","innerError","incrementDelta","pow","boundedRandDelta","min","requestError","isAborted","aborted","generateClientRequestIdPolicy","requestIdHeaderName","GenerateClientRequestIdPolicy","_requestIdHeaderName","getDefaultUserAgentKey","getPlatformSpecificData","navigator","osInfo","oscpu","platform","getRuntimeInfo","msRestRuntime","getUserAgentString","telemetryInfo","keySeparator","valueSeparator","info","getDefaultUserAgentHeaderName","getDefaultUserAgentValue","runtimeInfo","platformSpecificData","userAgent","userAgentPolicy","userAgentData","UserAgentPolicy","addUserAgentHeader","URLQuery","_rawQuery","any","parameterName","parameterValue","newValue","parameterStrings","parameterValue_1","parameterValueElement","text","currentState","currentCharacter","URLBuilder","setScheme","scheme","_scheme","getScheme","setHost","host","_host","getHost","setPort","port","_port","getPort","setPath","path","_path","appendPath","currentPath","getPath","setQuery","_query","setQueryParameter","queryParameterName","queryParameterValue","getQueryParameterValue","getQuery","startState","tokenizer","URLTokenizer","token","current","tokenPath","URLToken","isAlphaNumericCharacter","character","characterCode","_text","state","_textLength","_currentState","_currentIndex","_currentToken","hasCurrentCharacter","nextScheme","nextSchemeOrHost","nextHost","nextPort","nextPath","nextQuery","readRemaining","getCurrentCharacter","nextCharacter","peekCharacters","charactersToPeek","endIndex","readWhile","condition","readWhileLetterOrDigit","readUntilCharacter","terminatingCharacters","schemeOrHost","redirectPolicy","maximumRetries","RedirectPolicy","maxRetries","handleRedirect","currentRetries","locationHeader","builder","rpRegistrationPolicy","retryTimeout","RPRegistrationPolicy","_retryTimeout","registerIfNeeded","rpName","checkRPNotRegisteredError","urlPrefix","extractSubscriptionUrl","registerRP","registrationStatus","getRequestEssentials","originalRequest","reuseUrlToo","reqOptions","matchRes","provider","postUrl","getUrl","getRegistrationStatus","registrationState","signingPolicy","authenticationProvider","SigningPolicy","signRequest","nextRequest","systemErrorRetryPolicy","SystemErrorRetryPolicy","retry$1","shouldRetry$1","updateRetryData$1","QueryCollectionFormat","loadEnvironmentProxyValue","getDefaultProxySettings","proxyUrl","parsedUrl","Number","parseInt","proxyPolicy","ProxyPolicy","throttlingRetryPolicy","ThrottlingRetryPolicy","_handleResponse","_defaultResponseHandler","httpRequest","httpResponse","retryAfterHeader","delayInMs","parseRetryAfterHeader","retryAfterInSeconds","parseDateRetryAfterHeader","now","date","diff","ServiceClient","credentials","_withCredentials","_httpClient","httpClient","_requestPolicyOptions","httpPipelineLogger","requestPolicyFactories","createDefaultRequestPolicyFactories","newRequestPolicyFactories","_requestPolicyFactories","httpPipeline","sendOperationRequest","operationArguments","callback","baseUri","requestUrl","urlParameters","urlParameter","urlParameterValue","getOperationArgumentValueFromParameter","skipEncoding","queryParameter","collectionFormat","Multi","requestContentType","headerParameters","headerParameter","customHeaders","customHeaderName","serializeRequestBody","flattenResponse","cb","_response","serviceClient","requestBody","requestBodyParameterPathString","isStream","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","isRequestPolicyFactory","getValueOrFunctionResult","defaultValueCreator","factories","generateClientRequestIdHeader","clientRequestIdHeaderName","userAgentHeaderName","userAgentHeaderValue","rpRegistrationRetryTimeout","noRetryPolicy","getOperationArgumentValueFromParameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathString","propertyPath","propertyPathString","parent","parameterPathPart","addOperationResponse","defineProperty","readableStreamBody","modelProperties_1","isPageableResponse","k","arrayResponse","freeze","Aborter","onabort","_aborted","children","abortEventListeners","timer","unref","enumerable","configurable","withTimeout","childCancelContext","withValue","getValue","parent_1","cancelTimer","cancelByParent","_type","splice","dispatchEvent","BlobDownloadResponse","KeyInfo","start","expiry","UserDelegationKey","signedOid","signedTid","signedStart","signedExpiry","signedService","signedVersion","StorageError","DataLakeStorageErrorError","DataLakeStorageError","AccessPolicy","permission","BlobProperties","creationTime","lastModified","etag","contentLength","contentEncoding","contentLanguage","contentMD5","contentDisposition","cacheControl","blobSequenceNumber","blobType","leaseStatus","leaseState","leaseDuration","copyId","copyStatus","copySource","copyProgress","copyCompletionTime","copyStatusDescription","serverEncrypted","incrementalCopy","destinationSnapshot","deletedTime","remainingRetentionDays","accessTier","accessTierInferred","archiveStatus","customerProvidedKeySha256","accessTierChangeTime","BlobMetadata","encrypted","BlobItem","deleted","snapshot","properties","metadata","BlobFlatListSegment","blobItems","ListBlobsFlatSegmentResponse","serviceEndpoint","containerName","prefix","maxResults","delimiter","segment","nextMarker","BlobPrefix","BlobHierarchyListSegment","blobPrefixes","ListBlobsHierarchySegmentResponse","Block","size","BlockList","committedBlocks","uncommittedBlocks","BlockLookupList","committed","uncommitted","latest","ContainerProperties","publicAccess","hasImmutabilityPolicy","hasLegalHold","ContainerItem","ListContainersSegmentResponse","containerItems","CorsRule","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","GeoReplication","lastSyncTime","RetentionPolicy","enabled","days","Logging","deleteProperty","read","write","retentionPolicy","Metrics","includeAPIs","PageRange","end","ClearRange","PageList","pageRange","clearRange","SignedIdentifier","id","accessPolicy","StaticWebsite","indexDocument","errorDocument404Path","StorageServiceProperties","logging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","StorageServiceStats","geoReplication","ServiceSetPropertiesHeaders","clientRequestId","requestId","errorCode","ServiceGetPropertiesHeaders","ServiceGetStatisticsHeaders","ServiceListContainersSegmentHeaders","ServiceGetUserDelegationKeyHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","ServiceSubmitBatchHeaders","ContainerCreateHeaders","eTag","ContainerGetPropertiesHeaders","blobPublicAccess","ContainerDeleteHeaders","ContainerSetMetadataHeaders","ContainerGetAccessPolicyHeaders","ContainerSetAccessPolicyHeaders","ContainerAcquireLeaseHeaders","leaseId","ContainerReleaseLeaseHeaders","ContainerRenewLeaseHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerChangeLeaseHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerGetAccountInfoHeaders","BlobDownloadHeaders","contentRange","acceptRanges","blobCommittedBlockCount","isServerEncrypted","encryptionKeySha256","blobContentMD5","contentCrc64","BlobGetPropertiesHeaders","isIncrementalCopy","BlobDeleteHeaders","BlobSetAccessControlHeaders","BlobGetAccessControlHeaders","xMsOwner","xMsGroup","xMsPermissions","xMsAcl","BlobRenameHeaders","PageBlobCreateHeaders","AppendBlobCreateHeaders","BlockBlobUploadHeaders","BlobUndeleteHeaders","BlobSetHTTPHeadersHeaders","BlobSetMetadataHeaders","BlobAcquireLeaseHeaders","BlobReleaseLeaseHeaders","BlobRenewLeaseHeaders","BlobChangeLeaseHeaders","BlobBreakLeaseHeaders","BlobCreateSnapshotHeaders","BlobStartCopyFromURLHeaders","BlobCopyFromURLHeaders","BlobAbortCopyFromURLHeaders","BlobSetTierHeaders","BlobGetAccountInfoHeaders","BlockBlobStageBlockHeaders","xMsContentCrc64","BlockBlobStageBlockFromURLHeaders","BlockBlobCommitBlockListHeaders","BlockBlobGetBlockListHeaders","blobContentLength","PageBlobUploadPagesHeaders","PageBlobClearPagesHeaders","PageBlobUploadPagesFromURLHeaders","PageBlobGetPageRangesHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobResizeHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobCopyIncrementalHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","AppendBlobAppendBlockFromUrlHeaders","Mappers","access","action0","action1","action2","action3","action4","action5","action6","appendPosition","blobCacheControl","blobContentDisposition","blobContentEncoding","blobContentLanguage","blobContentType","blobType0","blobType1","blobType2","blockId","breakPeriod","comp0","comp1","comp10","comp11","comp12","comp13","comp14","comp15","comp16","comp17","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","copyActionAbortConstant","deleteSnapshots","directoryProperties","duration","encryptionAlgorithm","encryptionKey","group","ifMatch","ifModifiedSince","ifNoneMatch","ifSequenceNumberEqualTo","ifSequenceNumberLessThan","ifSequenceNumberLessThanOrEqualTo","ifUnmodifiedSince","include0","include1","Csv","leaseId0","leaseId1","listType","marker0","maxresults","maxSize","multipartContentType","owner","pageWrite0","pageWrite1","pathRenameMode","posixAcl","posixPermissions","posixUmask","prevsnapshot","proposedLeaseId0","proposedLeaseId1","range0","range1","rangeGetContentCRC64","rangeGetContentMD5","rehydratePriority","renameSource","restype0","restype1","restype2","sequenceNumberAction","sourceContentCrc64","sourceContentMD5","sourceIfMatch","sourceIfModifiedSince","sourceIfNoneMatch","sourceIfUnmodifiedSince","sourceLeaseId","sourceRange0","sourceRange1","sourceUrl","tier0","tier1","transactionalContentCrc64","transactionalContentMD5","upn","xMsRequiresSync","Service","client","setProperties","storageServiceProperties","setPropertiesOperationSpec","getProperties","getPropertiesOperationSpec","getStatistics","getStatisticsOperationSpec","listContainersSegment","listContainersSegmentOperationSpec","getUserDelegationKey","keyInfo","getUserDelegationKeyOperationSpec","getAccountInfo","getAccountInfoOperationSpec","submitBatch","submitBatchOperationSpec","serializer$1","Mappers$1","Container","createOperationSpec","getPropertiesOperationSpec$1","deleteMethod","deleteMethodOperationSpec","setMetadata","setMetadataOperationSpec","getAccessPolicy","getAccessPolicyOperationSpec","setAccessPolicy","setAccessPolicyOperationSpec","acquireLease","acquireLeaseOperationSpec","releaseLease","releaseLeaseOperationSpec","renewLease","renewLeaseOperationSpec","breakLease","breakLeaseOperationSpec","changeLease","proposedLeaseId","changeLeaseOperationSpec","listBlobFlatSegment","listBlobFlatSegmentOperationSpec","listBlobHierarchySegment","listBlobHierarchySegmentOperationSpec","getAccountInfoOperationSpec$1","serializer$2","Mappers$2","Blob$1","download","downloadOperationSpec","getPropertiesOperationSpec$2","deleteMethodOperationSpec$1","setAccessControl","setAccessControlOperationSpec","getAccessControl","getAccessControlOperationSpec","rename","renameOperationSpec","undelete","undeleteOperationSpec","setHTTPHeaders","setHTTPHeadersOperationSpec","setMetadataOperationSpec$1","acquireLeaseOperationSpec$1","releaseLeaseOperationSpec$1","renewLeaseOperationSpec$1","changeLeaseOperationSpec$1","breakLeaseOperationSpec$1","createSnapshot","createSnapshotOperationSpec","startCopyFromURL","startCopyFromURLOperationSpec","copyFromURL","copyFromURLOperationSpec","abortCopyFromURL","abortCopyFromURLOperationSpec","setTier","tier","setTierOperationSpec","getAccountInfoOperationSpec$2","serializer$3","Mappers$3","PageBlob","createOperationSpec$1","uploadPages","uploadPagesOperationSpec","clearPages","clearPagesOperationSpec","uploadPagesFromURL","sourceRange","range","uploadPagesFromURLOperationSpec","getPageRanges","getPageRangesOperationSpec","getPageRangesDiff","getPageRangesDiffOperationSpec","resize","resizeOperationSpec","updateSequenceNumber","updateSequenceNumberOperationSpec","copyIncremental","copyIncrementalOperationSpec","serializer$4","Mappers$4","AppendBlob","createOperationSpec$2","appendBlock","appendBlockOperationSpec","appendBlockFromUrl","appendBlockFromUrlOperationSpec","serializer$5","Mappers$5","BlockBlob","uploadOperationSpec","stageBlock","stageBlockOperationSpec","stageBlockFromURL","stageBlockFromURLOperationSpec","commitBlockList","blocks","commitBlockListOperationSpec","getBlockList","getBlockListOperationSpec","serializer$6","rangeToString","iRange","RangeError","count","BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","BLOCK_BLOB_MAX_BLOCKS","DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES","DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS","URLConstants","Parameters","FORCE_BROWSER_NO_CACHE","SIGNATURE","SNAPSHOT","TIMEOUT","HTTPURLConnection","HTTP_ACCEPTED","HTTP_CONFLICT","HTTP_NOT_FOUND","HTTP_PRECON_FAILED","HTTP_RANGE_NOT_SATISFIABLE","CONTENT_ENCODING","CONTENT_ID","CONTENT_LANGUAGE","CONTENT_LENGTH","CONTENT_MD5","CONTENT_TRANSFER_ENCODING","CONTENT_TYPE","COOKIE","DATE","IF_MATCH","IF_MODIFIED_SINCE","IF_NONE_MATCH","IF_UNMODIFIED_SINCE","PREFIX_FOR_STORAGE","RANGE","X_MS_CLIENT_REQUEST_ID","X_MS_DATE","X_MS_ERROR_CODE","X_MS_VERSION","ETagNone","BATCH_MAX_REQUEST","HTTP_LINE_ENDING","HTTP_VERSION_1_1","EncryptionAlgorithmAES25","BlockBlobTier","PremiumPageBlobTier","toAccessTier","ensureCpkIfSpecified","cpk","isHttps","escapeURLPath","urlParsed","escape","appendToURLPath","setURLParameter","getURLParameter","setURLHost","getURLPath","getURLScheme","getURLPathAndQuery","pathString","queryString","truncatedISO8061Date","withMilliseconds","dateString","base64encode","content","Buffer","from","generateBlockID","blockIDPrefix","blockIndex","maxSourceStringLength","maxBlockIndexLength","maxAllowedBlockIDPrefixLength","padStart","delay$1","timeInMs","aborter","abortError","abortHandler","resolveHandler","currentString","targetLength","padString","repeat","iEqual","str1","str2","toLocaleLowerCase","BrowserPolicy","BrowserPolicyFactory","Credential","packageName","packageVersion","StorageClientContext","defaultUserAgent","KeepAlivePolicy","keepAliveOptions","enable","KeepAlivePolicyFactory","DEFAULT_REQUEST_LOG_OPTIONS","logWarningIfTryOverThreshold","LoggingPolicy","loggingOptions","tryCount","operationStartTime","requestStartTime","safeURL","requestEndTime","requestCompletionTime","operationDuration","currentLevel","logMessage","errorString","messageInfo","err_1","INFO","WARNING","ERROR","LoggingPolicyFactory","Pipeline","toServiceClientOptions","HTTPClient","logger","RetryPolicyType","DEFAULT_RETRY_OPTIONS","maxRetryDelayInMs","maxTries","retryDelayInMs","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RETRY_ABORT_ERROR","RetryPolicy","retryOptions","attemptSendRequest","secondaryHas404","attempt","newRequest","isPrimaryRetry","logf","retriableErrors","retriableErrors_1","retriableError","_level","_message","delayTimeInMs","FIXED","RetryPolicyFactory","TelemetryPolicy","telemetry","TelemetryPolicyFactory","userAgentInfo","telemetryString","UniqueRequestIDPolicy","UniqueRequestIDPolicyFactory","CredentialPolicy","AnonymousCredentialPolicy","AnonymousCredential","StorageURL","pipeline","storageClientContext","credential","newPipeline","pipelineOptions","BlobURL","blobContext","fromContainerURL","containerURL","blobName","withPipeline","withSnapshot","blobAccessConditions","modifiedAccessConditions","customerProvidedKey","leaseAccessConditions","progress","rangeGetContentCrc64","cpkInfo","maxRetryRequests","updatedOptions","delete","blobHTTPHeaders","sourceModifiedAccessConditions","syncCopyFromURL","AppendBlobURL","appendBlobContext","fromBlobURL","blobURL","accessConditions","appendPositionAccessConditions","appendBlockFromURL","sourceURL","sourceOffset","MutexLockStatus","Mutex","lock","UNLOCKED","LOCKED","onUnlockEvent","unlock","emitUnlockEvent","handler","handler_1","shift","setImmediate","BatchRequest","batch","batchRequest","InnerBatchRequest","getMultiPartContentType","getMultipartContentType","getHttpRequestBody","getSubRequests","addSubRequestInternal","subRequest","assembleSubRequestFunc","preAddSubRequest","postAddSubRequest","BatchDeleteRequest","addSubRequest","urlOrBlobURL","credentialOrOptions","createPipeline","none","BatchSetTierRequest","credentialOrTier","tierOrOptions","operationCount","tempGuid","boundary","subRequestPrefix","batchRequestEnding","subRequests","Map","isAnonymousCreds","policyFactoryLength","BatchHeaderFilterPolicyFactory","BatchRequestAssemblePolicyFactory","appendSubRequestToBody","BatchRequestAssemblePolicy","dummyResponse","BatchHeaderFilterPolicy","xMsHeaderName","BlockBlobURL","blockBlobContext","ContainerURL","containerContext","fromServiceURL","serviceURL","containerAccessConditions","response_1","identifier","signedIdentifiers","containerAcl","acl","period","TokenCredentialPolicy","tokenCredential","authorizationScheme","TokenCredential","R","Reflect","ReflectApply","target","receiver","Function","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","ProcessEmitWarning","warning","console","warn","NumberIsNaN","EventEmitter","init","events","_events","_eventsCount","_maxListeners","defaultMaxListeners","arg","getPrototypeOf","setMaxListeners","$getMaxListeners","that","getMaxListeners","doError","er","context","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","emitter","onceWrapper","fired","wrapFn","_onceWrap","wrapped","list","position","originalListener","spliceOne","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","copy","ret","events_1","BatchStates","Batch","concurrency","actives","completed","operations","Good","addOperation","operation","error_1","parallelExecute","do","nextOperation","uploadBrowserDataToBlockBlob","browserData","blockBlobURL","browserBlob","UploadSeekableBlobToBlockBlob","blobFactory","numBlocks","blockList","transferProgress","blockSize","maxSingleShotSize","ceil","parallelism","blockID","PageBlobURL","pageBlobContext","sequenceNumberAccessConditions","destOffset","prevSnapshot","sequenceNumber","startCopyIncremental","blobToString","blob","fileReader","FileReader","onloadend","ev","onerror","readAsText","getBodyAsText","batchResponse","utf8ByteLength","HTTP_HEADER_DELIMITER","SPACE_DELIMITER","NOT_FOUND","BatchResponseParser","responseBatchBoundary","perResponsePrefix","batchResponseEnding","parseBatchResponse","responseBodyAsText","subResponses","subResponseCount","deserializedSubResponses","subResponsesSucceededCount","subResponsesFailedCount","subResponse","deserializedSubResponse","responseLines","subRespHeaderStartFound","subRespHeaderEndFound","subRespFailed","contentId","responseLines_1","responseLine","tokens","statusMessage","_request","ServiceURL","serviceContext","userDelegationKey","batchRequestBody","rawBatchResponse","batchResponseParser","responseSummary","Models"],"mappings":"ACAA,ACAA,ACAA;AFCA,ACAA,ACAA,AHDA;ACEA,AGFA,AFEA,ACAA,AHDA,IAAIA,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;ACAA,AGFA,AFEA,ACAA,AHCA;ACAA,AGFA,AFEA,ACAA,AHCA,AKLA;AJKA,AGFA,AFEA,ACAA,AHCA,AKLA;AJKA,AGFA,AFEA,AGJA;AJKA,AGFA,AFEA,AFCA,AKLA,ILKIC,gBAAJ;ACAA,AGFA,AFEA,AFCA,AKLC,ILKGC,OKLOuD,MAAV,EAAkBC,GLKnB,IKLC,EAA2B;AJK5B,AGFA,AFEA,AGJI,SAAO1D,OAAP,KAAmB,QAAnB,IAA+B,OAAOD,MAAP,KAAkB,WAAjD,GAA+D2D,OAAO,CAAC1D,OAAD,CAAtE,GACA,OAAO2D,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcD,OAAd,CAAnD,IACCD,MAAM,GAAGA,MAAM,IAAII,IAAnB,EAAyBH,OAAO,CAACD,MAAM,CAACK,MAAP,GAAgB,EAAjB,CADjC,CADA;AJKJ,AGFA,AFEA,AFCA,AKHC,CAJA,EAIC,IAJD,ELOQ3D,AKHD,UAAUH,MLGlB,CKHQ,ELGoB,AKHD;AJG3B,AGFA,AFEA,AFCI,AKJyB,QLInB,IAAII,GKJa,CAEvB,CLEM,CAAU,iCAAV,CAAN;ACAJ,AGFA,AFEA,AFCC,AKFG;AJEJ,AGFA,AFEA;ADCA,AGFA,AFEA,AFAA,AKFI,SLEKC,mBAAT,GAAgC;ACChC,AGFA,AFEA,AFAI,AKFJ,QLEU,IAAID,KAAJ,CAAU,mCAAV,CAAN;ACCJ,AGFA,AFEA,AFAC,AKFD;AJGA,AGFA,AFEA;ADCA,AGFA,AFEA,AFDC,AKFG,WAAS2D,ELEA,UKFT,CAAsBC,UAAtB,EAAkC;AJItC,AGFA,AFEA,AFDI,AKFI,MLEA,KKFOA,UAAU,CAACC,WAAX,EAAP;AJIR,AGFA,AFEA,AFDQ,AKFH,QLEO,OAAO3D,UAAP,KAAsB,UAA1B,EAAsC;ACE9C,AGFA,AFEA,AFDYL,AKFR,MLEQA,gBAAgB,GAAGK,UAAnB;ACEZ,AGFA,AFEA,AFDS,AKFT,KLAQ,MAEO;ACEf,AGFA,AFEA,AFDYL,AKFZ,MLEYA,gBAAgB,GAAGE,gBAAnB;ACEZ,AGFA,AFEA,AFDS;ACET,AGFA,AFEA,AFDK,GAND,CAME,OAAOI,CAAP,EAAU;ACEhB,AGFA,AFEA,AFDQN,AKJJ,ILIIA,EKJAiE,WAAW,GLIK,GAAG/D,gBAAnB;ACER,AGFA,AFEA,AFDK,AKLiB;AJOtB,AGFA,AFEA,AGPqC,cAAY;AJQjD,AGFA,AFEA,AFFI,AKLI,MLKA,OKLS+D,WAAT,CAAqBC,UAArB,EAAiC;AJQzC,AGFA,AFEA,AFFQ,AKLI,QLKA,GKLKC,ILKE5D,OKLP,GAAmB,ELKnB,AKLA,KLKwB,UAA5B,EAAwC;ACGhD,AGFA,AFEA,AFFYN,MAAAA,kBAAkB,GAAGM,YAArB;ACGZ,AGFA,AFEA,AFFS,AKNG,KLIJ,KKJQ2D,CLMD,SKNH,EAAgB;AJS5B,AGFA,AFEA,AFFYjE,AKNI,MLMJA,OKNS,IAAI8D,OLMK,GAAG3D,AKNjB,IAAuB8D,UAAvB,EAAmC,GLMvC;ACGZ,AGFA,AFEA,AFFS,AKNW,eAAKE,GAAL,CAASL,UAAT,EAAqBG,UAAU,CAACH,UAAD,CAA/B;AJSpB,AGFA,AFEA,AFFK,AKNY,GLAb,CAME,OAAOzD,CAAP,EAAU;ACGhB,AGFA,AFEA,AFFQL,AKNK,ILMLA,kBAAkB,GAAGG,mBAArB;ACGR,AGFA,AFEA,AFFK,AKNI;AJST,AGFA,AFEA,AFFC,AKNO,CLbP,GAAD;ACsBA,AGFA,AFEA,AGRA;AJSA,AGFA,AFEA,AFHA,AKLA,SLKSI,UAAT,CAAoBC,GAApB,EAAyB;ACIzB,AGFA,AFEA,AFHI,AKLJ,MLKQT,gBAAgB,KAAKK,UAAzB,EAAqC;ACIzC,AGFA,AFEA,AFHQ,AKLR;AJSA,AGFA,AFEA,AFHQ,AKLR,WLKeA,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;ACIR,AGFA,AFEA,AFHK,GAJoB,CAKrB;ACGJ,AGFA,AFEA;ADCA,AGFA,AFEA,AGVQwD,IAAAA,WAAW,CAACjC,SAAZ,CAAsBoC,GAAtB,GAA4B,UAAUL,UAAV,EAAsBM,WAAtB,EAAmC;AJWvE,AGFA,AFEA,AFJI,AKNQ,MLMJ,CAACrE,IKNQmE,WAAL,CLMa,AKNIL,KLMC5D,OKNW,CAAC6D,QLMjC,EKNgC,CAA7B,CLMsC,CAAC/D,EKNM,cLMjD,KAAgEK,UAApE,EAAgF;ACKpF,AGFA,AFEA,AFJQL,AKPmDkD,ILOnDlD,IKPmDkD,IAAI,EAAEa,MLOzC,GAAG1D,CKP8B,SLOjD;ACKR,AGFA,AFEA,AFJQ,AKRqEiE,QAAAA,GLQ9DjE,EKRmE,EAAEgE,MLQ3D,CAAC5D,GAAD,CKRsE,CLQhE,AKRiE8D,CLQvE,CAAjB,MKR4E;AJapF,AGFA,AFEA,AFJK,AKToD,OAA7C;AJcZ,AGFA,AFEA,AGbS,KAFD;AJgBR,AGFA,AFEA,AFLI,AKRI,MLQA;ACMR,AGFA,AFEA,AFLQ,AKRR;AJcA,AGFA,AFEA,AFLQ,AKRR,WLQevE,gBAAgB,CAACS,GAAD,EAAM,CAAN,CAAvB;ACMR,AGFA,AFEA,AFLK,AKRL,GLKI,CAGE,OAAMH,CAAN,EAAQ;ACMd,AGFA,AFEA,AFLQ,AKRR,QLQY;ACMZ,AGFA,AFEA,AFLY;ACMZ,AGFA,AFEA,AFLY,aAAON,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;ACMZ,AGFA,AFEA,AFLS,AKVDwD,IAAAA,CLOA,CAGE,OAAM3D,CAAN,CKVS,CLUD,AKVE0B,SAAZ,CAAsBwC,GAAtB,GAA4B,UAAUT,UAAV,EAAsB;AJgB1D,AGFA,AFEA,AFLY,AKVA,UAAIU,MAAM,GAAG,KAAKN,WAAL,CAAiBL,YAAY,CAACC,UAAD,CAA7B,CAAb;AJgBZ,AGFA,AFEA,AFLY,aAAO/D,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;ACMZ,AGFA,AFEA,AFLS,AKXG,aAAO,CAACgE,MAAD,GAAUC,SAAV,GAAsBD,MAAM,CAACH,KAApC;AJiBZ,AGFA,AFEA,AFLK,AKXI,KAHD;AJoBR,AGFA,AFEA,AFHC,AKbO;AJiBR,AGFA,AFEA,AGhBA;AJiBA,AGFA,AFEA,AFJA,AKZA,SLYS3D,eAAT,CAAyBC,MAAzB,EAAiC;ACKjC,AGFA,AFEA,AFJI,MAAIX,kBAAkB,KAAKM,YAA3B,EAAyC;ACK7C,AGFA,AFEA,AFJQ;ACKR,AGFA,AFEA,AFJQ,AKdA0D,IAAAA,OLcO1D,IKdI,CAACyB,OLcO,CAACpB,CKdpB,CAAsB+D,ILcH,CAAnB,GKdA,GAAiC,UAAUZ,UAAV,EAAsB;AJmB/D,AGFA,AFEA,AFJK,AKdO,GLUqB,CAK7B,SKfe,CAAC,CAAC,KAAKI,WAAL,CAAiBL,YAAY,CAACC,UAAD,CAA7B,CAAT;AJmBZ,AGFA,AFEA,AGlBS,KAFD;AJqBR,AGFA,AFEA,AGlBQ;AJmBR,AGFA,AFEA,AFLI,AKbJ,MLaQ,CAAC9D,kBAAkB,KAAKG,mBAAvB,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;ACM7F,AGFA,AFEA,AFLQN,AKbR,ILaQA,kBAAkB,GAAGM,YAArB;ACMR,AGFA,AFEA,AFLQ,AKbR,WLaeA,YAAY,CAACK,MAAD,CAAnB;ACMR,AGFA,AFEA,AFLK,AKbL;AJmBA,AGFA,AFEA;ADCA,AGFA,AFEA,AFNI,MAAI;ACOR,AGFA,AFEA,AFNQ,AKdAqD,IAAAA,WAAW,CAACjC,SAAZ,CAAsB4C,MAAtB,GAA+B,UAAUb,UAAV,EAAsB;AJqB7D,AGFA,AFEA,AFNQ,AKdI,UAAIc,CLcD5E,KKdO,GAAG,KAAK0E,KLcG,CAAC/D,EKdT,CAAcmD,GLcN,CAAzB,MKdiB,CAAb;AJqBZ,AGFA,AFEA,AFNK,AKdO,GLWR,CAGE,OAAOzD,CAAP,CKda,CLcJ,IKdS6D,WAAL,CAAiBL,YAAY,CAACC,UAAD,CAA7B,CAAP;AJqBZ,AGFA,AFEA,AFNQ,AKdI,QLcA,KKdOc,MAAP;AJqBZ,AGFA,AFEA,AFNY,AKdH,KAJD;AJyBR,AGFA,AFEA,AFNY,AKdJ,aLcW5E,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;ACOZ,AGFA,AFEA,AFNS,AKdT,KLWQ,CAGE,OAAON,CAAP,EAAS;ACOnB,AGFA,AJJY,AKdZ;AJqBA,AGFA,AJJY;ACOZ,AGFA,AJJY,aAAOL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;ACOZ,AGFA,AJJS,AKhBDqD,IAAAA,WAAW,CAACjC,SAAZ,CAAsBkC,UAAtB,GAAmC,YAAY;AJuBvD,AGFA,AJJK,AKhBO,UAAIW,MAAM,GAAG,EAAb;AJuBZ,AGFA,AJDC;ACID,AGFA,ACrBY,WAAK,IAAIC,SAAT,IAAsB,KAAKX,WAA3B,EAAwC;AJwBpD,AGFA,AJFA,AKnBgB,ILmBZtD,KAAK,GAAG,AKnBQ4D,ELmBpB,IKnB0B,GAAG,KAAKN,WAAL,CAAiBW,SAAjB,CAAb;AJwBhB,AGFA,AJFA,AKnBgBD,ILmBZ/D,IKnBY+D,ILmBJ,EKnBU,CLmBP,AKnBQJ,KLmBvB,CKnB6B,CAACvB,IAAP,CAAYc,WAAZ,EAAD,CAAN,GAAoCS,MAAM,CAACH,KAA3C;AJwBhB,AGFA,AJFA,AKnBa,ILmBTvD,YAAJ;ACKA,AGFA,AJFA,IAAIC,UAAU,GAAG,CAAC,CAAlB;ACKA,AGFA,ACtBY,aAAO6D,MAAP;AJyBZ,AGFA,AJFA,AKpBS,KAPD,IL2BC5D,eAAT,GAA2B;ACK3B,AGFA,AJFI,AKpBI,MLoBA,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;ACKpC,AGFA,AJFQ,AKpBR;AJyBA,AGFA,AJFK,AKpBL;AJyBA,AGFA;AHGA,AGFA,AJHID,EAAAA,QAAQ,GAAG,KAAX;ACMJ,AGFA,ACxBQmD,IAAAA,WAAW,CAACjC,SAAZ,CAAsB+C,YAAtB,GAAqC,YAAY;AJ2BzD,AGFA,AJJI,AKpBQ,MLoBJhE,IKpBQiE,OAAO,CLoBH,CAAC9D,CKpBK,EAAd,GLoBR,EAAyB;ACO7B,AGFA,AJJQL,IAAAA,KAAK,GAAGE,YAAY,CAACI,MAAb,CAAoBN,KAApB,CAAR;ACOR,AGFA,AJJK,AKrBO,GLmBR,MAEO,EKrBM,IAAIiE,SAAT,IAAsB,KAAKX,WAA3B,EAAwC;AJ4BpD,AGFA,AJJQnD,AKrBQgE,ILqBRhE,IKrBQgE,MLqBE,CKrBK,CAACnD,CLqBH,CAAC,CAAd,CKrBQ,CAAa,KAAKsC,WAAL,CAAiBW,SAAjB,CAAb;AJ4BhB,AGFA,AJJK,AKrBQ;AJ4Bb,AGFA;AHGA,AGFA,AJLI,AKrBQ,MLqBJjE,KAAK,CAACK,CKrBK8D,KLqBf,EAAkB,AKrBV;AJ6BZ,AGFA,AJLQ5D,AKrBC,ILqBDA,CK3BA,SL2BU;ACQlB,AGFA,AJLK,AKrBG;AJ6BR,AGFA,AJLC,AKrBD;AJ6BA,AGFA,AC1BA;AJ6BA,AGFA,AJLA,SAASA,UAAT,GAAsB;ACQtB,AGFA,AJLI,MAAIN,QAAJ,EAAc;ACQlB,AGFA,AJLQ,AKvBAmD,IAAAA,WAAW,CAACjC,SAAZ,CAAsBiD,WAAtB,GAAoC,YAAY;AJ+BxD,AGFA,AJLK,AKvBO,UAAIA,WAAW,GAAG,EAAlB;AJ+BZ,AGFA,AC5BY,UAAID,OAAO,GAAG,KAAKD,YAAL,EAAd;AJ+BZ,AGFA,AJNI,MAAI1D,OAAO,GAAGb,UAAU,CAACS,eAAD,CAAxB;ACSJ,AGFA,AJNIH,AKvBQ,ELuBRA,QAAQ,CKvBK,ELuBF,EKvBMc,CAAC,CLuBlB,EKvBqB,CAAb,EAAgBA,CAAC,GAAGoD,OAAO,CAAC9D,MAA5B,EAAoC,EAAEU,CAAtC,EAAyC;AJgCrD,AGFA,AJLI,AKxBYqD,MLwBR3D,EKxBQ2D,CLwBL,GAAGpE,KAAK,CAACK,CKxBO,CAACW,ILwBxB,AKxBY,CAAiBmD,OAAO,CAACpD,CAAD,CAAP,CAAWsB,IAA5B;AJgChB,AGFA,AC7Ba;AJgCb,AGFA,AJNI,SAAM5B,GAAN,EAAW;ACSf,AGFA,AJNQP,AKxBI,ILwBJA,SKxBWkE,GLwBC,GAAGpE,KAAf,AKxBI;AJiCZ,AGFA,AJNQA,AKxBC,ILwBDA,CK/BA,IL+BK,GAAG,EAAR;ACSR,AGFA,AC9BQ;AJiCR,AGFA,AJPQ,AKvBR,WLuBe,EAAEG,UAAF,GAAeM,GAAtB,EAA2B;ACUnC,AGFA,AJPY,AKvBZ,ULuBgBP,YAAJ,EAAkB;ACU9B,AGFA,AJPgBA,QAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;ACUhB,AGFA,AJPa;ACUb,AGFA,AJPS,AKzBD0C,IAAAA,WAAW,CAACjC,SAAZ,CAAsBkD,YAAtB,GAAqC,YAAY;AJmCzD,AGFA,AChCY,UAAIA,YAAY,GAAG,EAAnB;AJmCZ,AGFA,AJRQlE,AKxBI,ILwBJA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CA,AC3CA;AD4CA,AC3CYC,MAAAA,SAAS,EAAE;AD4CvB,AC3CgBC,QAAAA,GAAG,EAAE,KADE;AD6CvB,AC3CgBC,QAAAA,GAAG,EAAE,KAFE;AD8CvB,AC3CgBC,QAAAA,MAAM,EAAE,QAHD;AD+CvB,AC3CgBC,QAAAA,IAAI,EAAE,MAJC;ADgDvB,AC3CgBC,QAAAA,KAAK,EAAE,OALA;ADiDvB,AC3CgBC,QAAAA,IAAI,EAAE,MANC;ADkDvB,AC3CgBC,QAAAA,KAAK,EAAE;AD4CvB,ACnDuB,OAPA;AD2DvB,AC3CYC,MAAAA,WAAW,EAAE;AD4CzB,AC3CgBC,QAAAA,eAAe,EAAE;AD4CjC,AC7CyB;AD8CzB,AC9DuB,KAnCH;ADkGpB;AACA,AC5CQ;AD6CR,AC5CA;AD6CA,AC5CA;AD6CA,AC5CQC,IAAAA,eAAe,EAAE;AD6CzB,AC5CY;AD6CZ,AC5CA;AD6CA,AC5CA;AD6CA,AC5CA;AD6CA,AC5CA;AD6CA,AC5CA;AD6CA,AC5CYC,MAAAA,aAAa,EAAE,eAPF;ADoDzB,AC5CYC,MAAAA,oBAAoB,EAAE,QART;ADqDzB;AACA,AC7CY;AD8CZ,AC7CA;AD8CA,AC7CA;AD8CA,AC7CA;AD8CA,AC7CA;AD8CA,AC7CA;AD8CA,AC7CA;AD8CA,AC7CA;AD8CA,AC7CYC,MAAAA,WAAW,EAAE,aAjBA;AD+DzB;AACA,AC9CY;AD+CZ,AC9CA;AD+CA,AC9CA;AD+CA,AC9CA;AD+CA,AC9CA;AD+CA,AC9CA;AD+CA,AC9CYC,MAAAA,UAAU,EAAE;AD+CxB,ACvEyB;ADwEzB,AClIoB,GAAhB,CAhPuB,CAsUvB;AD6CJ;AACA,AC7CI;AD8CJ,AC7CA;AD8CA,AC7CA;AD8CA;AACA,AC9CI,MAAIC,MAAM,GAAI,OAAOvJ,OAAP,KAAmB,WAApB,IAAoC,CAAC,CAACA,OAAO,CAACwC,OAA9C,IAAyD,CAAC,CAACxC,OAAO,CAACyC,QAAnE,IAA+E,CAAC,CAACzC,OAAO,CAACyC,QAAR,CAAiB+G,IAA/G;AD+CJ,AC9CI;AD+CJ,AC9CA;AD+CA,AC9CA;AD+CA,AC9CA;AD+CA,AC9CA;AD+CA,AC9CA;AD+C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","file":"azure-storage-blob.dc7c4c36.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*!\n * Azure Storage SDK for JavaScript - Blob, 10.5.0\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = global || self, factory(global.azblob = {}));\n}(this, function (exports) { 'use strict';\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    // Licensed under the MIT License. See License.txt in the project root for license information.\n    /**\n     * A collection of HttpHeaders that can be sent with a HTTP request.\n     */\n    function getHeaderKey(headerName) {\n        return headerName.toLowerCase();\n    }\n    /**\n     * A collection of HTTP header key/value pairs.\n     */\n    var HttpHeaders = /** @class */ (function () {\n        function HttpHeaders(rawHeaders) {\n            this._headersMap = {};\n            if (rawHeaders) {\n                for (var headerName in rawHeaders) {\n                    this.set(headerName, rawHeaders[headerName]);\n                }\n            }\n        }\n        /**\n         * Set a header in this collection with the provided name and value. The name is\n         * case-insensitive.\n         * @param headerName The name of the header to set. This value is case-insensitive.\n         * @param headerValue The value of the header to set.\n         */\n        HttpHeaders.prototype.set = function (headerName, headerValue) {\n            this._headersMap[getHeaderKey(headerName)] = { name: headerName, value: headerValue.toString() };\n        };\n        /**\n         * Get the header value for the provided header name, or undefined if no header exists in this\n         * collection with the provided name.\n         * @param headerName The name of the header.\n         */\n        HttpHeaders.prototype.get = function (headerName) {\n            var header = this._headersMap[getHeaderKey(headerName)];\n            return !header ? undefined : header.value;\n        };\n        /**\n         * Get whether or not this header collection contains a header entry for the provided header name.\n         */\n        HttpHeaders.prototype.contains = function (headerName) {\n            return !!this._headersMap[getHeaderKey(headerName)];\n        };\n        /**\n         * Remove the header with the provided headerName. Return whether or not the header existed and\n         * was removed.\n         * @param headerName The name of the header to remove.\n         */\n        HttpHeaders.prototype.remove = function (headerName) {\n            var result = this.contains(headerName);\n            delete this._headersMap[getHeaderKey(headerName)];\n            return result;\n        };\n        /**\n         * Get the headers that are contained this collection as an object.\n         */\n        HttpHeaders.prototype.rawHeaders = function () {\n            var result = {};\n            for (var headerKey in this._headersMap) {\n                var header = this._headersMap[headerKey];\n                result[header.name.toLowerCase()] = header.value;\n            }\n            return result;\n        };\n        /**\n         * Get the headers that are contained in this collection as an array.\n         */\n        HttpHeaders.prototype.headersArray = function () {\n            var headers = [];\n            for (var headerKey in this._headersMap) {\n                headers.push(this._headersMap[headerKey]);\n            }\n            return headers;\n        };\n        /**\n         * Get the header names that are contained in this collection.\n         */\n        HttpHeaders.prototype.headerNames = function () {\n            var headerNames = [];\n            var headers = this.headersArray();\n            for (var i = 0; i < headers.length; ++i) {\n                headerNames.push(headers[i].name);\n            }\n            return headerNames;\n        };\n        /**\n         * Get the header names that are contained in this collection.\n         */\n        HttpHeaders.prototype.headerValues = function () {\n            var headerValues = [];\n            var headers = this.headersArray();\n            for (var i = 0; i < headers.length; ++i) {\n                headerValues.push(headers[i].value);\n            }\n            return headerValues;\n        };\n        /**\n         * Get the JSON object representation of this HTTP header collection.\n         */\n        HttpHeaders.prototype.toJson = function () {\n            return this.rawHeaders();\n        };\n        /**\n         * Get the string representation of this HTTP header collection.\n         */\n        HttpHeaders.prototype.toString = function () {\n            return JSON.stringify(this.toJson());\n        };\n        /**\n         * Create a deep clone/copy of this HttpHeaders collection.\n         */\n        HttpHeaders.prototype.clone = function () {\n            return new HttpHeaders(this.rawHeaders());\n        };\n        return HttpHeaders;\n    }());\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * Encodes a byte array in base64 format.\n     * @param value the Uint8Aray to encode\n     */\n    function encodeByteArray(value) {\n        var str = \"\";\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return btoa(str);\n    }\n    /**\n     * Decodes a base64 string into a byte array.\n     * @param value the base64 string to decode\n     */\n    function decodeString(value) {\n        var byteString = atob(value);\n        var arr = new Uint8Array(byteString.length);\n        for (var i = 0; i < byteString.length; i++) {\n            arr[i] = byteString.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    function createCommonjsModule(fn, module) {\n    \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n    }\n\n    var rngBrowser = createCommonjsModule(function (module) {\n    // Unique ID creation requires a high quality random # generator.  In the\n    // browser this is a little complicated due to unknown quality of Math.random()\n    // and inconsistent support for the `crypto` API.  We do the best we can via\n    // feature-detection\n\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n    // implementation. Also, find the complete implementation of crypto on IE11.\n    var getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                          (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\n    if (getRandomValues) {\n      // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n      var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n      module.exports = function whatwgRNG() {\n        getRandomValues(rnds8);\n        return rnds8;\n      };\n    } else {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var rnds = new Array(16);\n\n      module.exports = function mathRNG() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n          rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return rnds;\n      };\n    }\n    });\n\n    /**\n     * Convert array of 16 byte values to UUID string format of the form:\n     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n     */\n    var byteToHex = [];\n    for (var i = 0; i < 256; ++i) {\n      byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    }\n\n    function bytesToUuid(buf, offset) {\n      var i = offset || 0;\n      var bth = byteToHex;\n      // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n      return ([bth[buf[i++]], bth[buf[i++]], \n    \tbth[buf[i++]], bth[buf[i++]], '-',\n    \tbth[buf[i++]], bth[buf[i++]], '-',\n    \tbth[buf[i++]], bth[buf[i++]], '-',\n    \tbth[buf[i++]], bth[buf[i++]], '-',\n    \tbth[buf[i++]], bth[buf[i++]],\n    \tbth[buf[i++]], bth[buf[i++]],\n    \tbth[buf[i++]], bth[buf[i++]]]).join('');\n    }\n\n    var bytesToUuid_1 = bytesToUuid;\n\n    function v4(options, buf, offset) {\n      var i = buf && offset || 0;\n\n      if (typeof(options) == 'string') {\n        buf = options === 'binary' ? new Array(16) : null;\n        options = null;\n      }\n      options = options || {};\n\n      var rnds = options.random || (options.rng || rngBrowser)();\n\n      // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n      rnds[6] = (rnds[6] & 0x0f) | 0x40;\n      rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n      // Copy bytes to buffer, if provided\n      if (buf) {\n        for (var ii = 0; ii < 16; ++ii) {\n          buf[i + ii] = rnds[ii];\n        }\n      }\n\n      return buf || bytesToUuid_1(rnds);\n    }\n\n    var v4_1 = v4;\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    // Licensed under the MIT License. See License.txt in the project root for license information.\n    var Constants = {\n        /**\n         * The ms-rest version\n         * @const\n         * @type {string}\n         */\n        msRestVersion: \"2.0.4\",\n        /**\n         * Specifies HTTP.\n         *\n         * @const\n         * @type {string}\n         */\n        HTTP: \"http:\",\n        /**\n         * Specifies HTTPS.\n         *\n         * @const\n         * @type {string}\n         */\n        HTTPS: \"https:\",\n        /**\n         * Specifies HTTP Proxy.\n         *\n         * @const\n         * @type {string}\n         */\n        HTTP_PROXY: \"HTTP_PROXY\",\n        /**\n         * Specifies HTTPS Proxy.\n         *\n         * @const\n         * @type {string}\n         */\n        HTTPS_PROXY: \"HTTPS_PROXY\",\n        HttpConstants: {\n            /**\n             * Http Verbs\n             *\n             * @const\n             * @enum {string}\n             */\n            HttpVerbs: {\n                PUT: \"PUT\",\n                GET: \"GET\",\n                DELETE: \"DELETE\",\n                POST: \"POST\",\n                MERGE: \"MERGE\",\n                HEAD: \"HEAD\",\n                PATCH: \"PATCH\"\n            },\n            StatusCodes: {\n                TooManyRequests: 429\n            }\n        },\n        /**\n         * Defines constants for use with HTTP headers.\n         */\n        HeaderConstants: {\n            /**\n             * The Authorization header.\n             *\n             * @const\n             * @type {string}\n             */\n            AUTHORIZATION: \"authorization\",\n            AUTHORIZATION_SCHEME: \"Bearer\",\n            /**\n             * The Retry-After response-header field can be used with a 503 (Service\n             * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n             * the service is expected to be unavailable to the requesting client.\n             *\n             * @const\n             * @type {string}\n             */\n            RETRY_AFTER: \"Retry-After\",\n            /**\n             * The UserAgent header.\n             *\n             * @const\n             * @type {string}\n             */\n            USER_AGENT: \"User-Agent\"\n        }\n    };\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * A constant that indicates whether the environment is node.js or browser based.\n     */\n    var isNode = (typeof process !== \"undefined\") && !!process.version && !!process.versions && !!process.versions.node;\n    /**\n     * Returns a stripped version of the Http Response which only contains body,\n     * headers and the status.\n     *\n     * @param {HttpOperationResponse} response The Http Response\n     *\n     * @return {object} The stripped version of Http Response.\n     */\n    function stripResponse(response) {\n        var strippedResponse = {};\n        strippedResponse.body = response.bodyAsText;\n        strippedResponse.headers = response.headers;\n        strippedResponse.status = response.status;\n        return strippedResponse;\n    }\n    /**\n     * Returns a stripped version of the Http Request that does not contain the\n     * Authorization header.\n     *\n     * @param {WebResource} request The Http Request object\n     *\n     * @return {WebResource} The stripped version of Http Request.\n     */\n    function stripRequest(request) {\n        var strippedRequest = request.clone();\n        if (strippedRequest.headers) {\n            strippedRequest.headers.remove(\"authorization\");\n        }\n        return strippedRequest;\n    }\n    /**\n     * Validates the given uuid as a string\n     *\n     * @param {string} uuid The uuid as a string that needs to be validated\n     *\n     * @return {boolean} True if the uuid is valid; false otherwise.\n     */\n    function isValidUuid(uuid) {\n        var validUuidRegex = new RegExp(\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\", \"ig\");\n        return validUuidRegex.test(uuid);\n    }\n    /**\n     * Generated UUID\n     *\n     * @return {string} RFC4122 v4 UUID.\n     */\n    function generateUuid() {\n        return v4_1();\n    }\n    /**\n     * A wrapper for setTimeout that resolves a promise after t milliseconds.\n     * @param {number} t The number of milliseconds to be delayed.\n     * @param {T} value The value to be resolved with after a timeout of t milliseconds.\n     * @returns {Promise<T>} Resolved promise\n     */\n    function delay(t, value) {\n        return new Promise(function (resolve) { return setTimeout(function () { return resolve(value); }, t); });\n    }\n    function prepareXMLRootList(obj, elementName) {\n        var _a;\n        if (!Array.isArray(obj)) {\n            obj = [obj];\n        }\n        return _a = {}, _a[elementName] = obj, _a;\n    }\n    var validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n    /**\n     * Indicates whether the given string is in ISO 8601 format.\n     * @param {string} value The value to be validated for ISO 8601 duration format.\n     * @return {boolean} `true` if valid, `false` otherwise.\n     */\n    function isDuration(value) {\n        return validateISODuration.test(value);\n    }\n    /**\n     * Replace all of the instances of searchValue in value with the provided replaceValue.\n     * @param {string | undefined} value The value to search and replace in.\n     * @param {string} searchValue The value to search for in the value argument.\n     * @param {string} replaceValue The value to replace searchValue with in the value argument.\n     * @returns {string | undefined} The value where each instance of searchValue was replaced with replacedValue.\n     */\n    function replaceAll(value, searchValue, replaceValue) {\n        return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n    }\n    /**\n     * Determines whether the given enity is a basic/primitive type\n     * (string, number, boolean, null, undefined).\n     * @param value Any entity\n     * @return boolean - true is it is primitive type, false otherwise.\n     */\n    function isPrimitiveType(value) {\n        return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    var Serializer = /** @class */ (function () {\n        function Serializer(modelMappers, isXML) {\n            if (modelMappers === void 0) { modelMappers = {}; }\n            this.modelMappers = modelMappers;\n            this.isXML = isXML;\n        }\n        Serializer.prototype.validateConstraints = function (mapper, value, objectName) {\n            var failValidation = function (constraintName, constraintValue) {\n                throw new Error(\"\\\"\" + objectName + \"\\\" with value \\\"\" + value + \"\\\" should satisfy the constraint \\\"\" + constraintName + \"\\\": \" + constraintValue + \".\");\n            };\n            if (mapper.constraints && (value != undefined)) {\n                var _a = mapper.constraints, ExclusiveMaximum = _a.ExclusiveMaximum, ExclusiveMinimum = _a.ExclusiveMinimum, InclusiveMaximum = _a.InclusiveMaximum, InclusiveMinimum = _a.InclusiveMinimum, MaxItems = _a.MaxItems, MaxLength = _a.MaxLength, MinItems = _a.MinItems, MinLength = _a.MinLength, MultipleOf = _a.MultipleOf, Pattern = _a.Pattern, UniqueItems = _a.UniqueItems;\n                if (ExclusiveMaximum != undefined && value >= ExclusiveMaximum) {\n                    failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n                }\n                if (ExclusiveMinimum != undefined && value <= ExclusiveMinimum) {\n                    failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n                }\n                if (InclusiveMaximum != undefined && value > InclusiveMaximum) {\n                    failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n                }\n                if (InclusiveMinimum != undefined && value < InclusiveMinimum) {\n                    failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n                }\n                if (MaxItems != undefined && value.length > MaxItems) {\n                    failValidation(\"MaxItems\", MaxItems);\n                }\n                if (MaxLength != undefined && value.length > MaxLength) {\n                    failValidation(\"MaxLength\", MaxLength);\n                }\n                if (MinItems != undefined && value.length < MinItems) {\n                    failValidation(\"MinItems\", MinItems);\n                }\n                if (MinLength != undefined && value.length < MinLength) {\n                    failValidation(\"MinLength\", MinLength);\n                }\n                if (MultipleOf != undefined && value % MultipleOf !== 0) {\n                    failValidation(\"MultipleOf\", MultipleOf);\n                }\n                if (Pattern) {\n                    var pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                    if ((typeof value !== \"string\") || (value.match(pattern) === null)) {\n                        failValidation(\"Pattern\", Pattern);\n                    }\n                }\n                if (UniqueItems && value.some(function (item, i, ar) { return ar.indexOf(item) !== i; })) {\n                    failValidation(\"UniqueItems\", UniqueItems);\n                }\n            }\n        };\n        /**\n         * Serialize the given object based on its metadata defined in the mapper\n         *\n         * @param {Mapper} mapper The mapper which defines the metadata of the serializable object\n         *\n         * @param {object|string|Array|number|boolean|Date|stream} object A valid Javascript object to be serialized\n         *\n         * @param {string} objectName Name of the serialized object\n         *\n         * @returns {object|string|Array|number|boolean|Date|stream} A valid serialized Javascript object\n         */\n        Serializer.prototype.serialize = function (mapper, object, objectName) {\n            var payload = {};\n            var mapperType = mapper.type.name;\n            if (!objectName) {\n                objectName = mapper.serializedName;\n            }\n            if (mapperType.match(/^Sequence$/ig) !== null) {\n                payload = [];\n            }\n            if (mapper.isConstant) {\n                object = mapper.defaultValue;\n            }\n            // This table of allowed values should help explain\n            // the mapper.required and mapper.nullable properties.\n            // X means \"neither undefined or null are allowed\".\n            //           || required\n            //           || true      | false\n            //  nullable || ==========================\n            //      true || null      | undefined/null\n            //     false || X         | undefined\n            // undefined || X         | undefined/null\n            var required = mapper.required, nullable = mapper.nullable;\n            if (required && nullable && object === undefined) {\n                throw new Error(objectName + \" cannot be undefined.\");\n            }\n            if (required && !nullable && object == undefined) {\n                throw new Error(objectName + \" cannot be null or undefined.\");\n            }\n            if (!required && nullable === false && object === null) {\n                throw new Error(objectName + \" cannot be null.\");\n            }\n            if (object == undefined) {\n                payload = object;\n            }\n            else {\n                // Validate Constraints if any\n                this.validateConstraints(mapper, object, objectName);\n                if (mapperType.match(/^any$/ig) !== null) {\n                    payload = object;\n                }\n                else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/ig) !== null) {\n                    payload = serializeBasicTypes(mapperType, objectName, object);\n                }\n                else if (mapperType.match(/^Enum$/ig) !== null) {\n                    var enumMapper = mapper;\n                    payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n                }\n                else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/ig) !== null) {\n                    payload = serializeDateTypes(mapperType, object, objectName);\n                }\n                else if (mapperType.match(/^ByteArray$/ig) !== null) {\n                    payload = serializeByteArrayType(objectName, object);\n                }\n                else if (mapperType.match(/^Base64Url$/ig) !== null) {\n                    payload = serializeBase64UrlType(objectName, object);\n                }\n                else if (mapperType.match(/^Sequence$/ig) !== null) {\n                    payload = serializeSequenceType(this, mapper, object, objectName);\n                }\n                else if (mapperType.match(/^Dictionary$/ig) !== null) {\n                    payload = serializeDictionaryType(this, mapper, object, objectName);\n                }\n                else if (mapperType.match(/^Composite$/ig) !== null) {\n                    payload = serializeCompositeType(this, mapper, object, objectName);\n                }\n            }\n            return payload;\n        };\n        /**\n         * Deserialize the given object based on its metadata defined in the mapper\n         *\n         * @param {object} mapper The mapper which defines the metadata of the serializable object\n         *\n         * @param {object|string|Array|number|boolean|Date|stream} responseBody A valid Javascript entity to be deserialized\n         *\n         * @param {string} objectName Name of the deserialized object\n         *\n         * @returns {object|string|Array|number|boolean|Date|stream} A valid deserialized Javascript object\n         */\n        Serializer.prototype.deserialize = function (mapper, responseBody, objectName) {\n            if (responseBody == undefined) {\n                if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                    // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                    // between the list being empty versus being missing,\n                    // so let's do the more user-friendly thing and return an empty list.\n                    responseBody = [];\n                }\n                // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n                if (mapper.defaultValue !== undefined) {\n                    responseBody = mapper.defaultValue;\n                }\n                return responseBody;\n            }\n            var payload;\n            var mapperType = mapper.type.name;\n            if (!objectName) {\n                objectName = mapper.serializedName;\n            }\n            if (mapperType.match(/^Composite$/ig) !== null) {\n                payload = deserializeCompositeType(this, mapper, responseBody, objectName);\n            }\n            else {\n                if (this.isXML) {\n                    /**\n                     * If the mapper specifies this as a non-composite type value but the responseBody contains\n                     * both header (\"$\") and body (\"_\") properties, then just reduce the responseBody value to\n                     * the body (\"_\") property.\n                     */\n                    if (responseBody[\"$\"] != undefined && responseBody[\"_\"] != undefined) {\n                        responseBody = responseBody[\"_\"];\n                    }\n                }\n                if (mapperType.match(/^Number$/ig) !== null) {\n                    payload = parseFloat(responseBody);\n                    if (isNaN(payload)) {\n                        payload = responseBody;\n                    }\n                }\n                else if (mapperType.match(/^Boolean$/ig) !== null) {\n                    if (responseBody === \"true\") {\n                        payload = true;\n                    }\n                    else if (responseBody === \"false\") {\n                        payload = false;\n                    }\n                    else {\n                        payload = responseBody;\n                    }\n                }\n                else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/ig) !== null) {\n                    payload = responseBody;\n                }\n                else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/ig) !== null) {\n                    payload = new Date(responseBody);\n                }\n                else if (mapperType.match(/^UnixTime$/ig) !== null) {\n                    payload = unixTimeToDate(responseBody);\n                }\n                else if (mapperType.match(/^ByteArray$/ig) !== null) {\n                    payload = decodeString(responseBody);\n                }\n                else if (mapperType.match(/^Base64Url$/ig) !== null) {\n                    payload = base64UrlToByteArray(responseBody);\n                }\n                else if (mapperType.match(/^Sequence$/ig) !== null) {\n                    payload = deserializeSequenceType(this, mapper, responseBody, objectName);\n                }\n                else if (mapperType.match(/^Dictionary$/ig) !== null) {\n                    payload = deserializeDictionaryType(this, mapper, responseBody, objectName);\n                }\n            }\n            if (mapper.isConstant) {\n                payload = mapper.defaultValue;\n            }\n            return payload;\n        };\n        return Serializer;\n    }());\n    function trimEnd(str, ch) {\n        var len = str.length;\n        while ((len - 1) >= 0 && str[len - 1] === ch) {\n            --len;\n        }\n        return str.substr(0, len);\n    }\n    function bufferToBase64Url(buffer) {\n        if (!buffer) {\n            return undefined;\n        }\n        if (!(buffer instanceof Uint8Array)) {\n            throw new Error(\"Please provide an input of type Uint8Array for converting to Base64Url.\");\n        }\n        // Uint8Array to Base64.\n        var str = encodeByteArray(buffer);\n        // Base64 to Base64Url.\n        return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    }\n    function base64UrlToByteArray(str) {\n        if (!str) {\n            return undefined;\n        }\n        if (str && typeof str.valueOf() !== \"string\") {\n            throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n        }\n        // Base64Url to Base64.\n        str = str.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n        // Base64 to Uint8Array.\n        return decodeString(str);\n    }\n    function splitSerializeName(prop) {\n        var classes = [];\n        var partialclass = \"\";\n        if (prop) {\n            var subwords = prop.split(\".\");\n            for (var _i = 0, subwords_1 = subwords; _i < subwords_1.length; _i++) {\n                var item = subwords_1[_i];\n                if (item.charAt(item.length - 1) === \"\\\\\") {\n                    partialclass += item.substr(0, item.length - 1) + \".\";\n                }\n                else {\n                    partialclass += item;\n                    classes.push(partialclass);\n                    partialclass = \"\";\n                }\n            }\n        }\n        return classes;\n    }\n    function dateToUnixTime(d) {\n        if (!d) {\n            return undefined;\n        }\n        if (typeof d.valueOf() === \"string\") {\n            d = new Date(d);\n        }\n        return Math.floor(d.getTime() / 1000);\n    }\n    function unixTimeToDate(n) {\n        if (!n) {\n            return undefined;\n        }\n        return new Date(n * 1000);\n    }\n    function serializeBasicTypes(typeName, objectName, value) {\n        if (value !== null && value !== undefined) {\n            if (typeName.match(/^Number$/ig) !== null) {\n                if (typeof value !== \"number\") {\n                    throw new Error(objectName + \" with value \" + value + \" must be of type number.\");\n                }\n            }\n            else if (typeName.match(/^String$/ig) !== null) {\n                if (typeof value.valueOf() !== \"string\") {\n                    throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string.\");\n                }\n            }\n            else if (typeName.match(/^Uuid$/ig) !== null) {\n                if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n                    throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string and a valid uuid.\");\n                }\n            }\n            else if (typeName.match(/^Boolean$/ig) !== null) {\n                if (typeof value !== \"boolean\") {\n                    throw new Error(objectName + \" with value \" + value + \" must be of type boolean.\");\n                }\n            }\n            else if (typeName.match(/^Stream$/ig) !== null) {\n                var objectType = typeof value;\n                if (objectType !== \"string\" &&\n                    objectType !== \"function\" &&\n                    !(value instanceof ArrayBuffer) &&\n                    !ArrayBuffer.isView(value) &&\n                    !(typeof Blob === \"function\" && value instanceof Blob)) {\n                    throw new Error(objectName + \" must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.\");\n                }\n            }\n        }\n        return value;\n    }\n    function serializeEnumType(objectName, allowedValues, value) {\n        if (!allowedValues) {\n            throw new Error(\"Please provide a set of allowedValues to validate \" + objectName + \" as an Enum Type.\");\n        }\n        var isPresent = allowedValues.some(function (item) {\n            if (typeof item.valueOf() === \"string\") {\n                return item.toLowerCase() === value.toLowerCase();\n            }\n            return item === value;\n        });\n        if (!isPresent) {\n            throw new Error(value + \" is not a valid value for \" + objectName + \". The valid values are: \" + JSON.stringify(allowedValues) + \".\");\n        }\n        return value;\n    }\n    function serializeByteArrayType(objectName, value) {\n        if (value != undefined) {\n            if (!(value instanceof Uint8Array)) {\n                throw new Error(objectName + \" must be of type Uint8Array.\");\n            }\n            value = encodeByteArray(value);\n        }\n        return value;\n    }\n    function serializeBase64UrlType(objectName, value) {\n        if (value != undefined) {\n            if (!(value instanceof Uint8Array)) {\n                throw new Error(objectName + \" must be of type Uint8Array.\");\n            }\n            value = bufferToBase64Url(value);\n        }\n        return value;\n    }\n    function serializeDateTypes(typeName, value, objectName) {\n        if (value != undefined) {\n            if (typeName.match(/^Date$/ig) !== null) {\n                if (!(value instanceof Date ||\n                    (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                    throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n                }\n                value = (value instanceof Date) ? value.toISOString().substring(0, 10) : new Date(value).toISOString().substring(0, 10);\n            }\n            else if (typeName.match(/^DateTime$/ig) !== null) {\n                if (!(value instanceof Date ||\n                    (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                    throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n                }\n                value = (value instanceof Date) ? value.toISOString() : new Date(value).toISOString();\n            }\n            else if (typeName.match(/^DateTimeRfc1123$/ig) !== null) {\n                if (!(value instanceof Date ||\n                    (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                    throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123 format.\");\n                }\n                value = (value instanceof Date) ? value.toUTCString() : new Date(value).toUTCString();\n            }\n            else if (typeName.match(/^UnixTime$/ig) !== null) {\n                if (!(value instanceof Date ||\n                    (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                    throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123/ISO8601 format \" +\n                        \"for it to be serialized in UnixTime/Epoch format.\");\n                }\n                value = dateToUnixTime(value);\n            }\n            else if (typeName.match(/^TimeSpan$/ig) !== null) {\n                if (!isDuration(value)) {\n                    throw new Error(objectName + \" must be a string in ISO 8601 format. Instead was \\\"\" + value + \"\\\".\");\n                }\n                value = value;\n            }\n        }\n        return value;\n    }\n    function serializeSequenceType(serializer, mapper, object, objectName) {\n        if (!Array.isArray(object)) {\n            throw new Error(objectName + \" must be of type Array.\");\n        }\n        var elementType = mapper.type.element;\n        if (!elementType || typeof elementType !== \"object\") {\n            throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n                (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n        }\n        var tempArray = [];\n        for (var i = 0; i < object.length; i++) {\n            tempArray[i] = serializer.serialize(elementType, object[i], objectName);\n        }\n        return tempArray;\n    }\n    function serializeDictionaryType(serializer, mapper, object, objectName) {\n        if (typeof object !== \"object\") {\n            throw new Error(objectName + \" must be of type object.\");\n        }\n        var valueType = mapper.type.value;\n        if (!valueType || typeof valueType !== \"object\") {\n            throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n                (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n        }\n        var tempDictionary = {};\n        for (var _i = 0, _a = Object.keys(object); _i < _a.length; _i++) {\n            var key = _a[_i];\n            tempDictionary[key] = serializer.serialize(valueType, object[key], objectName + \".\" + key);\n        }\n        return tempDictionary;\n    }\n    /**\n     * Resolves a composite mapper's modelProperties.\n     * @param serializer the serializer containing the entire set of mappers\n     * @param mapper the composite mapper to resolve\n     */\n    function resolveModelProperties(serializer, mapper, objectName) {\n        var modelProps = mapper.type.modelProperties;\n        if (!modelProps) {\n            var className = mapper.type.className;\n            if (!className) {\n                throw new Error(\"Class name for model \\\"\" + objectName + \"\\\" is not provided in the mapper \\\"\" + JSON.stringify(mapper, undefined, 2) + \"\\\".\");\n            }\n            var modelMapper = serializer.modelMappers[className];\n            if (!modelMapper) {\n                throw new Error(\"mapper() cannot be null or undefined for model \\\"\" + className + \"\\\".\");\n            }\n            modelProps = modelMapper.type.modelProperties;\n            if (!modelProps) {\n                throw new Error(\"modelProperties cannot be null or undefined in the \" +\n                    (\"mapper \\\"\" + JSON.stringify(modelMapper) + \"\\\" of type \\\"\" + className + \"\\\" for object \\\"\" + objectName + \"\\\".\"));\n            }\n        }\n        return modelProps;\n    }\n    function serializeCompositeType(serializer, mapper, object, objectName) {\n        var _a;\n        if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n            mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n        }\n        if (object != undefined) {\n            var payload = {};\n            var modelProps = resolveModelProperties(serializer, mapper, objectName);\n            for (var _i = 0, _b = Object.keys(modelProps); _i < _b.length; _i++) {\n                var key = _b[_i];\n                var propertyMapper = modelProps[key];\n                if (propertyMapper.readOnly) {\n                    continue;\n                }\n                var propName = void 0;\n                var parentObject = payload;\n                if (serializer.isXML) {\n                    if (propertyMapper.xmlIsWrapped) {\n                        propName = propertyMapper.xmlName;\n                    }\n                    else {\n                        propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                    }\n                }\n                else {\n                    var paths = splitSerializeName(propertyMapper.serializedName);\n                    propName = paths.pop();\n                    for (var _c = 0, paths_1 = paths; _c < paths_1.length; _c++) {\n                        var pathName = paths_1[_c];\n                        var childObject = parentObject[pathName];\n                        if ((childObject == undefined) && (object[key] != undefined)) {\n                            parentObject[pathName] = {};\n                        }\n                        parentObject = parentObject[pathName];\n                    }\n                }\n                if (parentObject != undefined) {\n                    var propertyObjectName = propertyMapper.serializedName !== \"\"\n                        ? objectName + \".\" + propertyMapper.serializedName\n                        : objectName;\n                    var toSerialize = object[key];\n                    var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                    if (polymorphicDiscriminator && polymorphicDiscriminator.clientName === key && toSerialize == undefined) {\n                        toSerialize = mapper.serializedName;\n                    }\n                    var serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName);\n                    if (serializedValue !== undefined && propName != undefined) {\n                        if (propertyMapper.xmlIsAttribute) {\n                            // $ is the key attributes are kept under in xml2js.\n                            // This keeps things simple while preventing name collision\n                            // with names in user documents.\n                            parentObject.$ = parentObject.$ || {};\n                            parentObject.$[propName] = serializedValue;\n                        }\n                        else if (propertyMapper.xmlIsWrapped) {\n                            parentObject[propName] = (_a = {}, _a[propertyMapper.xmlElementName] = serializedValue, _a);\n                        }\n                        else {\n                            parentObject[propName] = serializedValue;\n                        }\n                    }\n                }\n            }\n            var additionalPropertiesMapper = mapper.type.additionalProperties;\n            if (additionalPropertiesMapper) {\n                var propNames = Object.keys(modelProps);\n                var _loop_1 = function (clientPropName) {\n                    var isAdditionalProperty = propNames.every(function (pn) { return pn !== clientPropName; });\n                    if (isAdditionalProperty) {\n                        payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]');\n                    }\n                };\n                for (var clientPropName in object) {\n                    _loop_1(clientPropName);\n                }\n            }\n            return payload;\n        }\n        return object;\n    }\n    function isSpecialXmlProperty(propertyName) {\n        return [\"$\", \"_\"].includes(propertyName);\n    }\n    function deserializeCompositeType(serializer, mapper, responseBody, objectName) {\n        if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n            mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n        }\n        var modelProps = resolveModelProperties(serializer, mapper, objectName);\n        var instance = {};\n        var handledPropertyNames = [];\n        for (var _i = 0, _a = Object.keys(modelProps); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var propertyMapper = modelProps[key];\n            var paths = splitSerializeName(modelProps[key].serializedName);\n            handledPropertyNames.push(paths[0]);\n            var serializedName = propertyMapper.serializedName, xmlName = propertyMapper.xmlName, xmlElementName = propertyMapper.xmlElementName;\n            var propertyObjectName = objectName;\n            if (serializedName !== \"\" && serializedName !== undefined) {\n                propertyObjectName = objectName + \".\" + serializedName;\n            }\n            var headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n            if (headerCollectionPrefix) {\n                var dictionary = {};\n                for (var _b = 0, _c = Object.keys(responseBody); _b < _c.length; _b++) {\n                    var headerKey = _c[_b];\n                    if (headerKey.startsWith(headerCollectionPrefix)) {\n                        dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName);\n                    }\n                    handledPropertyNames.push(headerKey);\n                }\n                instance[key] = dictionary;\n            }\n            else if (serializer.isXML) {\n                if (propertyMapper.xmlIsAttribute && responseBody.$) {\n                    instance[key] = serializer.deserialize(propertyMapper, responseBody.$[xmlName], propertyObjectName);\n                }\n                else {\n                    var propertyName = xmlElementName || xmlName || serializedName;\n                    var unwrappedProperty = responseBody[propertyName];\n                    if (propertyMapper.xmlIsWrapped) {\n                        unwrappedProperty = responseBody[xmlName];\n                        unwrappedProperty = unwrappedProperty && unwrappedProperty[xmlElementName];\n                        var isEmptyWrappedList = unwrappedProperty === undefined;\n                        if (isEmptyWrappedList) {\n                            unwrappedProperty = [];\n                        }\n                    }\n                    instance[key] = serializer.deserialize(propertyMapper, unwrappedProperty, propertyObjectName);\n                }\n            }\n            else {\n                // deserialize the property if it is present in the provided responseBody instance\n                var propertyInstance = void 0;\n                var res = responseBody;\n                // traversing the object step by step.\n                for (var _d = 0, paths_2 = paths; _d < paths_2.length; _d++) {\n                    var item = paths_2[_d];\n                    if (!res)\n                        break;\n                    res = res[item];\n                }\n                propertyInstance = res;\n                var polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n                // checking that the model property name (key)(ex: \"fishtype\") and the\n                // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n                // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n                // is a better approach. The generator is not consistent with escaping '\\.' in the\n                // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n                // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n                // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n                // the transformation of model property name (ex: \"fishtype\") is done consistently.\n                // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n                if (polymorphicDiscriminator && key === polymorphicDiscriminator.clientName && propertyInstance == undefined) {\n                    propertyInstance = mapper.serializedName;\n                }\n                var serializedValue = void 0;\n                // paging\n                if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                    propertyInstance = responseBody[key];\n                    instance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n                }\n                else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                    serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n                    instance[key] = serializedValue;\n                }\n            }\n        }\n        var additionalPropertiesMapper = mapper.type.additionalProperties;\n        if (additionalPropertiesMapper) {\n            var isAdditionalProperty = function (responsePropName) {\n                for (var clientPropName in modelProps) {\n                    var paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                    if (paths[0] === responsePropName) {\n                        return false;\n                    }\n                }\n                return true;\n            };\n            for (var responsePropName in responseBody) {\n                if (isAdditionalProperty(responsePropName)) {\n                    instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]');\n                }\n            }\n        }\n        else if (responseBody) {\n            for (var _e = 0, _f = Object.keys(responseBody); _e < _f.length; _e++) {\n                var key = _f[_e];\n                if (instance[key] === undefined && !handledPropertyNames.includes(key) && !isSpecialXmlProperty(key)) {\n                    instance[key] = responseBody[key];\n                }\n            }\n        }\n        return instance;\n    }\n    function deserializeDictionaryType(serializer, mapper, responseBody, objectName) {\n        /*jshint validthis: true */\n        var value = mapper.type.value;\n        if (!value || typeof value !== \"object\") {\n            throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n                (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n        }\n        if (responseBody) {\n            var tempDictionary = {};\n            for (var _i = 0, _a = Object.keys(responseBody); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName);\n            }\n            return tempDictionary;\n        }\n        return responseBody;\n    }\n    function deserializeSequenceType(serializer, mapper, responseBody, objectName) {\n        /*jshint validthis: true */\n        var element = mapper.type.element;\n        if (!element || typeof element !== \"object\") {\n            throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n                (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n        }\n        if (responseBody) {\n            if (!Array.isArray(responseBody)) {\n                // xml2js will interpret a single element array as just the element, so force it to be an array\n                responseBody = [responseBody];\n            }\n            var tempArray = [];\n            for (var i = 0; i < responseBody.length; i++) {\n                tempArray[i] = serializer.deserialize(element, responseBody[i], objectName + \"[\" + i + \"]\");\n            }\n            return tempArray;\n        }\n        return responseBody;\n    }\n    function getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n        var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (polymorphicDiscriminator) {\n            var discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n            if (discriminatorName != undefined) {\n                var discriminatorValue = object[discriminatorName];\n                if (discriminatorValue != undefined) {\n                    var typeName = mapper.type.uberParent || mapper.type.className;\n                    var indexDiscriminator = discriminatorValue === typeName\n                        ? discriminatorValue\n                        : typeName + \".\" + discriminatorValue;\n                    var polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                    if (polymorphicMapper) {\n                        mapper = polymorphicMapper;\n                    }\n                }\n            }\n        }\n        return mapper;\n    }\n    function getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n        return mapper.type.polymorphicDiscriminator\n            || getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent)\n            || getPolymorphicDiscriminatorSafely(serializer, mapper.type.className);\n    }\n    function getPolymorphicDiscriminatorSafely(serializer, typeName) {\n        return (typeName && serializer.modelMappers[typeName] && serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n    }\n    /**\n     * Utility function to create a K:V from a list of strings\n     */\n    function strEnum(o) {\n        var result = {};\n        for (var _i = 0, o_1 = o; _i < o_1.length; _i++) {\n            var key = o_1[_i];\n            result[key] = key;\n        }\n        return result;\n    }\n    var MapperType = strEnum([\n        \"Base64Url\",\n        \"Boolean\",\n        \"ByteArray\",\n        \"Composite\",\n        \"Date\",\n        \"DateTime\",\n        \"DateTimeRfc1123\",\n        \"Dictionary\",\n        \"Enum\",\n        \"Number\",\n        \"Object\",\n        \"Sequence\",\n        \"String\",\n        \"Stream\",\n        \"TimeSpan\",\n        \"UnixTime\"\n    ]);\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * Creates a new WebResource object.\n     *\n     * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n     * properties to initiate a request.\n     *\n     * @constructor\n     */\n    var WebResource = /** @class */ (function () {\n        function WebResource(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive) {\n            this.streamResponseBody = streamResponseBody;\n            this.url = url || \"\";\n            this.method = method || \"GET\";\n            this.headers = (headers instanceof HttpHeaders ? headers : new HttpHeaders(headers));\n            this.body = body;\n            this.query = query;\n            this.formData = undefined;\n            this.withCredentials = withCredentials || false;\n            this.abortSignal = abortSignal;\n            this.timeout = timeout || 0;\n            this.onUploadProgress = onUploadProgress;\n            this.onDownloadProgress = onDownloadProgress;\n            this.proxySettings = proxySettings;\n            this.keepAlive = keepAlive;\n        }\n        /**\n         * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n         * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n         * mentioned properties are not defined.\n         */\n        WebResource.prototype.validateRequestProperties = function () {\n            if (!this.method) {\n                throw new Error(\"WebResource.method is required.\");\n            }\n            if (!this.url) {\n                throw new Error(\"WebResource.url is required.\");\n            }\n        };\n        /**\n         * Prepares the request.\n         * @param {RequestPrepareOptions} options Options to provide for preparing the request.\n         * @returns {WebResource} Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n         */\n        WebResource.prototype.prepare = function (options) {\n            if (!options) {\n                throw new Error(\"options object is required\");\n            }\n            if (options.method == undefined || typeof options.method.valueOf() !== \"string\") {\n                throw new Error(\"options.method must be a string.\");\n            }\n            if (options.url && options.pathTemplate) {\n                throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n            }\n            if ((options.pathTemplate == undefined || typeof options.pathTemplate.valueOf() !== \"string\") && (options.url == undefined || typeof options.url.valueOf() !== \"string\")) {\n                throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n            }\n            // set the url if it is provided.\n            if (options.url) {\n                if (typeof options.url !== \"string\") {\n                    throw new Error(\"options.url must be of type \\\"string\\\".\");\n                }\n                this.url = options.url;\n            }\n            // set the method\n            if (options.method) {\n                var validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n                if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                    throw new Error(\"The provided method \\\"\" + options.method + \"\\\" is invalid. Supported HTTP methods are: \" + JSON.stringify(validMethods));\n                }\n            }\n            this.method = options.method.toUpperCase();\n            // construct the url if path template is provided\n            if (options.pathTemplate) {\n                var pathTemplate_1 = options.pathTemplate, pathParameters_1 = options.pathParameters;\n                if (typeof pathTemplate_1 !== \"string\") {\n                    throw new Error(\"options.pathTemplate must be of type \\\"string\\\".\");\n                }\n                if (!options.baseUrl) {\n                    options.baseUrl = \"https://management.azure.com\";\n                }\n                var baseUrl = options.baseUrl;\n                var url_1 = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + (pathTemplate_1.startsWith(\"/\") ? pathTemplate_1.slice(1) : pathTemplate_1);\n                var segments = url_1.match(/({\\w*\\s*\\w*})/ig);\n                if (segments && segments.length) {\n                    if (!pathParameters_1) {\n                        throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" has been provided. Hence, options.pathParameters must also be provided.\");\n                    }\n                    segments.forEach(function (item) {\n                        var pathParamName = item.slice(1, -1);\n                        var pathParam = pathParameters_1[pathParamName];\n                        if (pathParam === null || pathParam === undefined || !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                            throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" contains the path parameter \" + pathParamName +\n                                (\" however, it is not present in \" + pathParameters_1 + \" - \" + JSON.stringify(pathParameters_1, undefined, 2) + \".\") +\n                                (\"The value of the path parameter can either be a \\\"string\\\" of the form { \" + pathParamName + \": \\\"some sample value\\\" } or \") +\n                                (\"it can be an \\\"object\\\" of the form { \\\"\" + pathParamName + \"\\\": { value: \\\"some sample value\\\", skipUrlEncoding: true } }.\"));\n                        }\n                        if (typeof pathParam.valueOf() === \"string\") {\n                            url_1 = url_1.replace(item, encodeURIComponent(pathParam));\n                        }\n                        if (typeof pathParam.valueOf() === \"object\") {\n                            if (!pathParam.value) {\n                                throw new Error(\"options.pathParameters[\" + pathParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                            }\n                            if (pathParam.skipUrlEncoding) {\n                                url_1 = url_1.replace(item, pathParam.value);\n                            }\n                            else {\n                                url_1 = url_1.replace(item, encodeURIComponent(pathParam.value));\n                            }\n                        }\n                    });\n                }\n                this.url = url_1;\n            }\n            // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n            if (options.queryParameters) {\n                var queryParameters = options.queryParameters;\n                if (typeof queryParameters !== \"object\") {\n                    throw new Error(\"options.queryParameters must be of type object. It should be a JSON object \" +\n                        \"of \\\"query-parameter-name\\\" as the key and the \\\"query-parameter-value\\\" as the value. \" +\n                        \"The \\\"query-parameter-value\\\" may be fo type \\\"string\\\" or an \\\"object\\\" of the form { value: \\\"query-parameter-value\\\", skipUrlEncoding: true }.\");\n                }\n                // append question mark if it is not present in the url\n                if (this.url && this.url.indexOf(\"?\") === -1) {\n                    this.url += \"?\";\n                }\n                // construct queryString\n                var queryParams = [];\n                // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n                this.query = {};\n                for (var queryParamName in queryParameters) {\n                    var queryParam = queryParameters[queryParamName];\n                    if (queryParam) {\n                        if (typeof queryParam === \"string\") {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                            this.query[queryParamName] = encodeURIComponent(queryParam);\n                        }\n                        else if (typeof queryParam === \"object\") {\n                            if (!queryParam.value) {\n                                throw new Error(\"options.queryParameters[\" + queryParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                            }\n                            if (queryParam.skipUrlEncoding) {\n                                queryParams.push(queryParamName + \"=\" + queryParam.value);\n                                this.query[queryParamName] = queryParam.value;\n                            }\n                            else {\n                                queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                                this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                            }\n                        }\n                    }\n                } // end-of-for\n                // append the queryString\n                this.url += queryParams.join(\"&\");\n            }\n            // add headers to the request if they are provided\n            if (options.headers) {\n                var headers = options.headers;\n                for (var _i = 0, _a = Object.keys(options.headers); _i < _a.length; _i++) {\n                    var headerName = _a[_i];\n                    this.headers.set(headerName, headers[headerName]);\n                }\n            }\n            // ensure accept-language is set correctly\n            if (!this.headers.get(\"accept-language\")) {\n                this.headers.set(\"accept-language\", \"en-US\");\n            }\n            // ensure the request-id is set correctly\n            if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n                this.headers.set(\"x-ms-client-request-id\", generateUuid());\n            }\n            // default\n            if (!this.headers.get(\"Content-Type\")) {\n                this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n            }\n            // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicilty\n            this.body = options.body;\n            if (options.body != undefined) {\n                // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n                if (options.bodyIsStream) {\n                    if (!this.headers.get(\"Transfer-Encoding\")) {\n                        this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                    }\n                    if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                        this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                    }\n                }\n                else {\n                    if (options.serializationMapper) {\n                        this.body = new Serializer(options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                    }\n                    if (!options.disableJsonStringifyOnBody) {\n                        this.body = JSON.stringify(options.body);\n                    }\n                }\n            }\n            this.abortSignal = options.abortSignal;\n            this.onDownloadProgress = options.onDownloadProgress;\n            this.onUploadProgress = options.onUploadProgress;\n            return this;\n        };\n        /**\n         * Clone this WebResource HTTP request object.\n         * @returns {WebResource} The clone of this WebResource HTTP request object.\n         */\n        WebResource.prototype.clone = function () {\n            var result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress);\n            if (this.formData) {\n                result.formData = this.formData;\n            }\n            if (this.operationSpec) {\n                result.operationSpec = this.operationSpec;\n            }\n            if (this.shouldDeserialize) {\n                result.shouldDeserialize = this.shouldDeserialize;\n            }\n            if (this.operationResponseGetter) {\n                result.operationResponseGetter = this.operationResponseGetter;\n            }\n            return result;\n        };\n        return WebResource;\n    }());\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    var RestError = /** @class */ (function (_super) {\n        __extends(RestError, _super);\n        function RestError(message, code, statusCode, request, response, body) {\n            var _this = _super.call(this, message) || this;\n            _this.code = code;\n            _this.statusCode = statusCode;\n            _this.request = request;\n            _this.response = response;\n            _this.body = body;\n            Object.setPrototypeOf(_this, RestError.prototype);\n            return _this;\n        }\n        RestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n        RestError.REQUEST_ABORTED_ERROR = \"REQUEST_ABORTED_ERROR\";\n        RestError.PARSE_ERROR = \"PARSE_ERROR\";\n        return RestError;\n    }(Error));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n     */\n    var XhrHttpClient = /** @class */ (function () {\n        function XhrHttpClient() {\n        }\n        XhrHttpClient.prototype.sendRequest = function (request) {\n            var xhr = new XMLHttpRequest();\n            if (request.proxySettings) {\n                throw new Error(\"HTTP proxy is not supported in browser environment\");\n            }\n            var abortSignal = request.abortSignal;\n            if (abortSignal) {\n                var listener_1 = function () {\n                    xhr.abort();\n                };\n                abortSignal.addEventListener(\"abort\", listener_1);\n                xhr.addEventListener(\"readystatechange\", function () {\n                    if (xhr.readyState === XMLHttpRequest.DONE) {\n                        abortSignal.removeEventListener(\"abort\", listener_1);\n                    }\n                });\n            }\n            addProgressListener(xhr.upload, request.onUploadProgress);\n            addProgressListener(xhr, request.onDownloadProgress);\n            if (request.formData) {\n                var formData = request.formData;\n                var requestForm_1 = new FormData();\n                var appendFormValue = function (key, value) {\n                    if (value && value.hasOwnProperty(\"value\") && value.hasOwnProperty(\"options\")) {\n                        requestForm_1.append(key, value.value, value.options);\n                    }\n                    else {\n                        requestForm_1.append(key, value);\n                    }\n                };\n                for (var _i = 0, _a = Object.keys(formData); _i < _a.length; _i++) {\n                    var formKey = _a[_i];\n                    var formValue = formData[formKey];\n                    if (Array.isArray(formValue)) {\n                        for (var j = 0; j < formValue.length; j++) {\n                            appendFormValue(formKey, formValue[j]);\n                        }\n                    }\n                    else {\n                        appendFormValue(formKey, formValue);\n                    }\n                }\n                request.body = requestForm_1;\n                request.formData = undefined;\n                var contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                    // browser will automatically apply a suitable content-type header\n                    request.headers.remove(\"Content-Type\");\n                }\n            }\n            xhr.open(request.method, request.url);\n            xhr.timeout = request.timeout;\n            xhr.withCredentials = request.withCredentials;\n            for (var _b = 0, _c = request.headers.headersArray(); _b < _c.length; _b++) {\n                var header = _c[_b];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n            xhr.responseType = request.streamResponseBody ? \"blob\" : \"text\";\n            // tslint:disable-next-line:no-null-keyword\n            xhr.send(request.body === undefined ? null : request.body);\n            if (request.streamResponseBody) {\n                return new Promise(function (resolve, reject) {\n                    xhr.addEventListener(\"readystatechange\", function () {\n                        // Resolve as soon as headers are loaded\n                        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n                            var blobBody = new Promise(function (resolve, reject) {\n                                xhr.addEventListener(\"load\", function () {\n                                    resolve(xhr.response);\n                                });\n                                rejectOnTerminalEvent(request, xhr, reject);\n                            });\n                            resolve({\n                                request: request,\n                                status: xhr.status,\n                                headers: parseHeaders(xhr),\n                                blobBody: blobBody\n                            });\n                        }\n                    });\n                    rejectOnTerminalEvent(request, xhr, reject);\n                });\n            }\n            else {\n                return new Promise(function (resolve, reject) {\n                    xhr.addEventListener(\"load\", function () { return resolve({\n                        request: request,\n                        status: xhr.status,\n                        headers: parseHeaders(xhr),\n                        bodyAsText: xhr.responseText\n                    }); });\n                    rejectOnTerminalEvent(request, xhr, reject);\n                });\n            }\n        };\n        return XhrHttpClient;\n    }());\n    function addProgressListener(xhr, listener) {\n        if (listener) {\n            xhr.addEventListener(\"progress\", function (rawEvent) { return listener({\n                loadedBytes: rawEvent.loaded\n            }); });\n        }\n    }\n    // exported locally for testing\n    function parseHeaders(xhr) {\n        var responseHeaders = new HttpHeaders();\n        var headerLines = xhr.getAllResponseHeaders().trim().split(/[\\r\\n]+/);\n        for (var _i = 0, headerLines_1 = headerLines; _i < headerLines_1.length; _i++) {\n            var line = headerLines_1[_i];\n            var index = line.indexOf(\":\");\n            var headerName = line.slice(0, index);\n            var headerValue = line.slice(index + 2);\n            responseHeaders.set(headerName, headerValue);\n        }\n        return responseHeaders;\n    }\n    function rejectOnTerminalEvent(request, xhr, reject) {\n        xhr.addEventListener(\"error\", function () { return reject(new RestError(\"Failed to send request to \" + request.url, RestError.REQUEST_SEND_ERROR, undefined, request)); });\n        xhr.addEventListener(\"abort\", function () { return reject(new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR, undefined, request)); });\n        xhr.addEventListener(\"timeout\", function () { return reject(new RestError(\"timeout of \" + xhr.timeout + \"ms exceeded\", RestError.REQUEST_SEND_ERROR, undefined, request)); });\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    (function (HttpPipelineLogLevel) {\n        /**\n         * A log level that indicates that no logs will be logged.\n         */\n        HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n        /**\n         * An error log.\n         */\n        HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n        /**\n         * A warning log.\n         */\n        HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n        /**\n         * An information log.\n         */\n        HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n    })(exports.HttpPipelineLogLevel || (exports.HttpPipelineLogLevel = {}));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    // Licensed under the MIT License. See License.txt in the project root for license information.\n    /**\n     * Get the path to this parameter's value as a dotted string (a.b.c).\n     * @param parameter The parameter to get the path string for.\n     * @returns The path to this parameter's value as a dotted string.\n     */\n    function getPathStringFromParameter(parameter) {\n        return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n    }\n    function getPathStringFromParameterPath(parameterPath, mapper) {\n        var result;\n        if (typeof parameterPath === \"string\") {\n            result = parameterPath;\n        }\n        else if (Array.isArray(parameterPath)) {\n            result = parameterPath.join(\".\");\n        }\n        else {\n            result = mapper.serializedName;\n        }\n        return result;\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function isStreamOperation(operationSpec) {\n        var result = false;\n        for (var statusCode in operationSpec.responses) {\n            var operationResponse = operationSpec.responses[statusCode];\n            if (operationResponse.bodyMapper && operationResponse.bodyMapper.type.name === MapperType.Stream) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    // Licensed under the MIT License. See License.txt in the project root for license information.\n    var parser = new DOMParser();\n    function parseXML(str) {\n        try {\n            var dom = parser.parseFromString(str, \"application/xml\");\n            throwIfError(dom);\n            var obj = domToObject(dom.childNodes[0]);\n            return Promise.resolve(obj);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    var errorNS = \"\";\n    try {\n        errorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0].namespaceURI;\n    }\n    catch (ignored) {\n        // Most browsers will return a document containing <parsererror>, but IE will throw.\n    }\n    function throwIfError(dom) {\n        if (errorNS) {\n            var parserErrors = dom.getElementsByTagNameNS(errorNS, \"parsererror\");\n            if (parserErrors.length) {\n                throw new Error(parserErrors.item(0).innerHTML);\n            }\n        }\n    }\n    function isElement(node) {\n        return !!node.attributes;\n    }\n    /**\n     * Get the Element-typed version of the provided Node if the provided node is an element with\n     * attributes. If it isn't, then undefined is returned.\n     */\n    function asElementWithAttributes(node) {\n        return isElement(node) && node.hasAttributes() ? node : undefined;\n    }\n    function domToObject(node) {\n        var result = {};\n        var childNodeCount = node.childNodes.length;\n        var firstChildNode = node.childNodes[0];\n        var onlyChildTextValue = (firstChildNode && childNodeCount === 1 && firstChildNode.nodeType === Node.TEXT_NODE && firstChildNode.nodeValue) || undefined;\n        var elementWithAttributes = asElementWithAttributes(node);\n        if (elementWithAttributes) {\n            result[\"$\"] = {};\n            for (var i = 0; i < elementWithAttributes.attributes.length; i++) {\n                var attr = elementWithAttributes.attributes[i];\n                result[\"$\"][attr.nodeName] = attr.nodeValue;\n            }\n            if (onlyChildTextValue) {\n                result[\"_\"] = onlyChildTextValue;\n            }\n        }\n        else if (childNodeCount === 0) {\n            result = \"\";\n        }\n        else if (onlyChildTextValue) {\n            result = onlyChildTextValue;\n        }\n        if (!onlyChildTextValue) {\n            for (var i = 0; i < childNodeCount; i++) {\n                var child = node.childNodes[i];\n                // Ignore leading/trailing whitespace nodes\n                if (child.nodeType !== Node.TEXT_NODE) {\n                    var childObject = domToObject(child);\n                    if (!result[child.nodeName]) {\n                        result[child.nodeName] = childObject;\n                    }\n                    else if (Array.isArray(result[child.nodeName])) {\n                        result[child.nodeName].push(childObject);\n                    }\n                    else {\n                        result[child.nodeName] = [result[child.nodeName], childObject];\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    // tslint:disable-next-line:no-null-keyword\n    var doc = document.implementation.createDocument(null, null, null);\n    var serializer = new XMLSerializer();\n    function stringifyXML(obj, opts) {\n        var rootName = opts && opts.rootName || \"root\";\n        var dom = buildNode(obj, rootName)[0];\n        return '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom);\n    }\n    function buildAttributes(attrs) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var attr = doc.createAttribute(key);\n            attr.value = attrs[key].toString();\n            result.push(attr);\n        }\n        return result;\n    }\n    function buildNode(obj, elementName) {\n        if (typeof obj === \"string\" || typeof obj === \"number\" || typeof obj === \"boolean\") {\n            var elem = doc.createElement(elementName);\n            elem.textContent = obj.toString();\n            return [elem];\n        }\n        else if (Array.isArray(obj)) {\n            var result = [];\n            for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {\n                var arrayElem = obj_1[_i];\n                for (var _a = 0, _b = buildNode(arrayElem, elementName); _a < _b.length; _a++) {\n                    var child = _b[_a];\n                    result.push(child);\n                }\n            }\n            return result;\n        }\n        else if (typeof obj === \"object\") {\n            var elem = doc.createElement(elementName);\n            for (var _c = 0, _d = Object.keys(obj); _c < _d.length; _c++) {\n                var key = _d[_c];\n                if (key === \"$\") {\n                    for (var _e = 0, _f = buildAttributes(obj[key]); _e < _f.length; _e++) {\n                        var attr = _f[_e];\n                        elem.attributes.setNamedItem(attr);\n                    }\n                }\n                else {\n                    for (var _g = 0, _h = buildNode(obj[key], key); _g < _h.length; _g++) {\n                        var child = _h[_g];\n                        elem.appendChild(child);\n                    }\n                }\n            }\n            return [elem];\n        }\n        else {\n            throw new Error(\"Illegal value passed to buildObject: \" + obj);\n        }\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    var BaseRequestPolicy = /** @class */ (function () {\n        function BaseRequestPolicy(_nextPolicy, _options) {\n            this._nextPolicy = _nextPolicy;\n            this._options = _options;\n        }\n        /**\n         * Get whether or not a log with the provided log level should be logged.\n         * @param logLevel The log level of the log that will be logged.\n         * @returns Whether or not a log with the provided log level should be logged.\n         */\n        BaseRequestPolicy.prototype.shouldLog = function (logLevel) {\n            return this._options.shouldLog(logLevel);\n        };\n        /**\n         * Attempt to log the provided message to the provided logger. If no logger was provided or if\n         * the log level does not meat the logger's threshold, then nothing will be logged.\n         * @param logLevel The log level of this log.\n         * @param message The message of this log.\n         */\n        BaseRequestPolicy.prototype.log = function (logLevel, message) {\n            this._options.log(logLevel, message);\n        };\n        return BaseRequestPolicy;\n    }());\n    /**\n     * Optional properties that can be used when creating a RequestPolicy.\n     */\n    var RequestPolicyOptions = /** @class */ (function () {\n        function RequestPolicyOptions(_logger) {\n            this._logger = _logger;\n        }\n        /**\n         * Get whether or not a log with the provided log level should be logged.\n         * @param logLevel The log level of the log that will be logged.\n         * @returns Whether or not a log with the provided log level should be logged.\n         */\n        RequestPolicyOptions.prototype.shouldLog = function (logLevel) {\n            return !!this._logger &&\n                logLevel !== exports.HttpPipelineLogLevel.OFF &&\n                logLevel <= this._logger.minimumLogLevel;\n        };\n        /**\n         * Attempt to log the provided message to the provided logger. If no logger was provided or if\n         * the log level does not meat the logger's threshold, then nothing will be logged.\n         * @param logLevel The log level of this log.\n         * @param message The message of this log.\n         */\n        RequestPolicyOptions.prototype.log = function (logLevel, message) {\n            if (this._logger && this.shouldLog(logLevel)) {\n                this._logger.log(logLevel, message);\n            }\n        };\n        return RequestPolicyOptions;\n    }());\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n     * pass through the HTTP pipeline.\n     */\n    function deserializationPolicy(deserializationContentTypes) {\n        return {\n            create: function (nextPolicy, options) {\n                return new DeserializationPolicy(nextPolicy, deserializationContentTypes, options);\n            }\n        };\n    }\n    var defaultJsonContentTypes = [\"application/json\", \"text/json\"];\n    var defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n    /**\n     * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n     * HTTP pipeline.\n     */\n    var DeserializationPolicy = /** @class */ (function (_super) {\n        __extends(DeserializationPolicy, _super);\n        function DeserializationPolicy(nextPolicy, deserializationContentTypes, options) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.jsonContentTypes = deserializationContentTypes && deserializationContentTypes.json || defaultJsonContentTypes;\n            _this.xmlContentTypes = deserializationContentTypes && deserializationContentTypes.xml || defaultXmlContentTypes;\n            return _this;\n        }\n        DeserializationPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request).then(function (response) { return deserializeResponseBody(_this.jsonContentTypes, _this.xmlContentTypes, response); })];\n                });\n            });\n        };\n        return DeserializationPolicy;\n    }(BaseRequestPolicy));\n    function getOperationResponse(parsedResponse) {\n        var result;\n        var request = parsedResponse.request;\n        var operationSpec = request.operationSpec;\n        if (operationSpec) {\n            var operationResponseGetter = request.operationResponseGetter;\n            if (!operationResponseGetter) {\n                result = operationSpec.responses[parsedResponse.status];\n            }\n            else {\n                result = operationResponseGetter(operationSpec, parsedResponse);\n            }\n        }\n        return result;\n    }\n    function shouldDeserializeResponse(parsedResponse) {\n        var shouldDeserialize = parsedResponse.request.shouldDeserialize;\n        var result;\n        if (shouldDeserialize === undefined) {\n            result = true;\n        }\n        else if (typeof shouldDeserialize === \"boolean\") {\n            result = shouldDeserialize;\n        }\n        else {\n            result = shouldDeserialize(parsedResponse);\n        }\n        return result;\n    }\n    function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response) {\n        return parse(jsonContentTypes, xmlContentTypes, response).then(function (parsedResponse) {\n            var shouldDeserialize = shouldDeserializeResponse(parsedResponse);\n            if (shouldDeserialize) {\n                var operationSpec = parsedResponse.request.operationSpec;\n                if (operationSpec && operationSpec.responses) {\n                    var statusCode = parsedResponse.status;\n                    var expectedStatusCodes = Object.keys(operationSpec.responses);\n                    var hasNoExpectedStatusCodes = (expectedStatusCodes.length === 0 || (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n                    var responseSpec = getOperationResponse(parsedResponse);\n                    var isExpectedStatusCode = hasNoExpectedStatusCodes ? (200 <= statusCode && statusCode < 300) : !!responseSpec;\n                    if (!isExpectedStatusCode) {\n                        var defaultResponseSpec = operationSpec.responses.default;\n                        if (defaultResponseSpec) {\n                            var initialErrorMessage = isStreamOperation(operationSpec)\n                                ? \"Unexpected status code: \" + statusCode\n                                : parsedResponse.bodyAsText;\n                            var error = new RestError(initialErrorMessage);\n                            error.statusCode = statusCode;\n                            error.request = stripRequest(parsedResponse.request);\n                            error.response = stripResponse(parsedResponse);\n                            var parsedErrorResponse = parsedResponse.parsedBody;\n                            try {\n                                if (parsedErrorResponse) {\n                                    var defaultResponseBodyMapper = defaultResponseSpec.bodyMapper;\n                                    if (defaultResponseBodyMapper && defaultResponseBodyMapper.serializedName === \"CloudError\") {\n                                        if (parsedErrorResponse.error) {\n                                            parsedErrorResponse = parsedErrorResponse.error;\n                                        }\n                                        if (parsedErrorResponse.code) {\n                                            error.code = parsedErrorResponse.code;\n                                        }\n                                        if (parsedErrorResponse.message) {\n                                            error.message = parsedErrorResponse.message;\n                                        }\n                                    }\n                                    else {\n                                        var internalError = parsedErrorResponse;\n                                        if (parsedErrorResponse.error) {\n                                            internalError = parsedErrorResponse.error;\n                                        }\n                                        error.code = internalError.code;\n                                        if (internalError.message) {\n                                            error.message = internalError.message;\n                                        }\n                                    }\n                                    if (defaultResponseBodyMapper) {\n                                        var valueToDeserialize = parsedErrorResponse;\n                                        if (operationSpec.isXML && defaultResponseBodyMapper.type.name === MapperType.Sequence) {\n                                            valueToDeserialize = typeof parsedErrorResponse === \"object\"\n                                                ? parsedErrorResponse[defaultResponseBodyMapper.xmlElementName]\n                                                : [];\n                                        }\n                                        error.body = operationSpec.serializer.deserialize(defaultResponseBodyMapper, valueToDeserialize, \"error.body\");\n                                    }\n                                }\n                            }\n                            catch (defaultError) {\n                                error.message = \"Error \\\"\" + defaultError.message + \"\\\" occurred in deserializing the responseBody - \\\"\" + parsedResponse.bodyAsText + \"\\\" for the default response.\";\n                            }\n                            return Promise.reject(error);\n                        }\n                    }\n                    else if (responseSpec) {\n                        if (responseSpec.bodyMapper) {\n                            var valueToDeserialize = parsedResponse.parsedBody;\n                            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n                                valueToDeserialize = typeof valueToDeserialize === \"object\" ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName] : [];\n                            }\n                            try {\n                                parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\");\n                            }\n                            catch (error) {\n                                var restError = new RestError(\"Error \" + error + \" occurred in deserializing the responseBody - \" + parsedResponse.bodyAsText);\n                                restError.request = stripRequest(parsedResponse.request);\n                                restError.response = stripResponse(parsedResponse);\n                                return Promise.reject(restError);\n                            }\n                        }\n                        else if (operationSpec.httpMethod === \"HEAD\") {\n                            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n                        }\n                        if (responseSpec.headersMapper) {\n                            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n                        }\n                    }\n                }\n            }\n            return Promise.resolve(parsedResponse);\n        });\n    }\n    function parse(jsonContentTypes, xmlContentTypes, operationResponse) {\n        var errorHandler = function (err) {\n            var msg = \"Error \\\"\" + err + \"\\\" occurred while parsing the response body - \" + operationResponse.bodyAsText + \".\";\n            var errCode = err.code || RestError.PARSE_ERROR;\n            var e = new RestError(msg, errCode, operationResponse.status, operationResponse.request, operationResponse, operationResponse.bodyAsText);\n            return Promise.reject(e);\n        };\n        if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n            var text_1 = operationResponse.bodyAsText;\n            var contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n            var contentComponents = !contentType ? [] : contentType.split(\";\").map(function (component) { return component.toLowerCase(); });\n            if (contentComponents.length === 0 || contentComponents.some(function (component) { return jsonContentTypes.indexOf(component) !== -1; })) {\n                return new Promise(function (resolve) {\n                    operationResponse.parsedBody = JSON.parse(text_1);\n                    resolve(operationResponse);\n                }).catch(errorHandler);\n            }\n            else if (contentComponents.some(function (component) { return xmlContentTypes.indexOf(component) !== -1; })) {\n                return parseXML(text_1)\n                    .then(function (body) {\n                    operationResponse.parsedBody = body;\n                    return operationResponse;\n                })\n                    .catch(errorHandler);\n            }\n        }\n        return Promise.resolve(operationResponse);\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function exponentialRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        return {\n            create: function (nextPolicy, options) {\n                return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n            }\n        };\n    }\n    var DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\n    var DEFAULT_CLIENT_RETRY_COUNT = 3;\n    var DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\n    var DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n    /**\n     * @class\n     * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n     */\n    var ExponentialRetryPolicy = /** @class */ (function (_super) {\n        __extends(ExponentialRetryPolicy, _super);\n        /**\n         * @constructor\n         * @param {RequestPolicy} nextPolicy The next RequestPolicy in the pipeline chain.\n         * @param {RequestPolicyOptions} options The options for this RequestPolicy.\n         * @param {number} [retryCount]        The client retry count.\n         * @param {number} [retryInterval]     The client retry interval, in milliseconds.\n         * @param {number} [minRetryInterval]  The minimum retry interval, in milliseconds.\n         * @param {number} [maxRetryInterval]  The maximum retry interval, in milliseconds.\n         */\n        function ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            function isNumber(n) { return typeof n === \"number\"; }\n            _this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n            _this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n            _this.minRetryInterval = isNumber(minRetryInterval) ? minRetryInterval : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n            _this.maxRetryInterval = isNumber(maxRetryInterval) ? maxRetryInterval : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n            return _this;\n        }\n        ExponentialRetryPolicy.prototype.sendRequest = function (request) {\n            var _this = this;\n            return this._nextPolicy.sendRequest(request.clone())\n                .then(function (response) { return retry(_this, request, response); })\n                .catch(function (error) { return retry(_this, request, error.response, undefined, error); });\n        };\n        return ExponentialRetryPolicy;\n    }(BaseRequestPolicy));\n    /**\n     * Determines if the operation should be retried and how long to wait until the next retry.\n     *\n     * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n     * @param {number} statusCode The HTTP status code.\n     * @param {RetryData} retryData  The retry data.\n     * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n     */\n    function shouldRetry(policy, statusCode, retryData) {\n        if (statusCode == undefined || (statusCode < 500 && statusCode !== 408) || statusCode === 501 || statusCode === 505) {\n            return false;\n        }\n        var currentCount;\n        if (!retryData) {\n            throw new Error(\"retryData for the ExponentialRetryPolicyFilter cannot be null.\");\n        }\n        else {\n            currentCount = (retryData && retryData.retryCount);\n        }\n        return (currentCount < policy.retryCount);\n    }\n    /**\n     * Updates the retry data for the next attempt.\n     *\n     * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n     * @param {RetryData} retryData  The retry data.\n     * @param {RetryError} [err] The operation\"s error, if any.\n     */\n    function updateRetryData(policy, retryData, err) {\n        if (!retryData) {\n            retryData = {\n                retryCount: 0,\n                retryInterval: 0\n            };\n        }\n        if (err) {\n            if (retryData.error) {\n                err.innerError = retryData.error;\n            }\n            retryData.error = err;\n        }\n        // Adjust retry count\n        retryData.retryCount++;\n        // Adjust retry interval\n        var incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n        var boundedRandDelta = policy.retryInterval * 0.8 +\n            Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n        incrementDelta *= boundedRandDelta;\n        retryData.retryInterval = Math.min(policy.minRetryInterval + incrementDelta, policy.maxRetryInterval);\n        return retryData;\n    }\n    function retry(policy, request, response, retryData, requestError) {\n        retryData = updateRetryData(policy, retryData, requestError);\n        var isAborted = request.abortSignal && request.abortSignal.aborted;\n        if (!isAborted && shouldRetry(policy, response && response.status, retryData)) {\n            return delay(retryData.retryInterval)\n                .then(function () { return policy._nextPolicy.sendRequest(request.clone()); })\n                .then(function (res) { return retry(policy, request, res, retryData, undefined); })\n                .catch(function (err) { return retry(policy, request, response, retryData, err); });\n        }\n        else if (isAborted || requestError || !response) {\n            // If the operation failed in the end, return all errors instead of just the last one\n            var err = retryData.error ||\n                new RestError(\"Failed to send the request.\", RestError.REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n            return Promise.reject(err);\n        }\n        else {\n            return Promise.resolve(response);\n        }\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function generateClientRequestIdPolicy(requestIdHeaderName) {\n        if (requestIdHeaderName === void 0) { requestIdHeaderName = \"x-ms-client-request-id\"; }\n        return {\n            create: function (nextPolicy, options) {\n                return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n            }\n        };\n    }\n    var GenerateClientRequestIdPolicy = /** @class */ (function (_super) {\n        __extends(GenerateClientRequestIdPolicy, _super);\n        function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this._requestIdHeaderName = _requestIdHeaderName;\n            return _this;\n        }\n        GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n            if (!request.headers.contains(this._requestIdHeaderName)) {\n                request.headers.set(this._requestIdHeaderName, generateUuid());\n            }\n            return this._nextPolicy.sendRequest(request);\n        };\n        return GenerateClientRequestIdPolicy;\n    }(BaseRequestPolicy));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    // Licensed under the MIT License. See License.txt in the project root for license information.\n    function getDefaultUserAgentKey() {\n        return \"x-ms-command-name\";\n    }\n    function getPlatformSpecificData() {\n        var navigator = window.navigator;\n        var osInfo = {\n            key: \"OS\",\n            value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n        };\n        return [osInfo];\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function getRuntimeInfo() {\n        var msRestRuntime = {\n            key: \"ms-rest-js\",\n            value: Constants.msRestVersion\n        };\n        return [msRestRuntime];\n    }\n    function getUserAgentString(telemetryInfo, keySeparator, valueSeparator) {\n        if (keySeparator === void 0) { keySeparator = \" \"; }\n        if (valueSeparator === void 0) { valueSeparator = \"/\"; }\n        return telemetryInfo.map(function (info) {\n            var value = info.value ? \"\" + valueSeparator + info.value : \"\";\n            return \"\" + info.key + value;\n        }).join(keySeparator);\n    }\n    var getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\n    function getDefaultUserAgentValue() {\n        var runtimeInfo = getRuntimeInfo();\n        var platformSpecificData = getPlatformSpecificData();\n        var userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n        return userAgent;\n    }\n    function userAgentPolicy(userAgentData) {\n        var key = (!userAgentData || userAgentData.key == undefined) ? getDefaultUserAgentKey() : userAgentData.key;\n        var value = (!userAgentData || userAgentData.value == undefined) ? getDefaultUserAgentValue() : userAgentData.value;\n        return {\n            create: function (nextPolicy, options) {\n                return new UserAgentPolicy(nextPolicy, options, key, value);\n            }\n        };\n    }\n    var UserAgentPolicy = /** @class */ (function (_super) {\n        __extends(UserAgentPolicy, _super);\n        function UserAgentPolicy(_nextPolicy, _options, headerKey, headerValue) {\n            var _this = _super.call(this, _nextPolicy, _options) || this;\n            _this._nextPolicy = _nextPolicy;\n            _this._options = _options;\n            _this.headerKey = headerKey;\n            _this.headerValue = headerValue;\n            return _this;\n        }\n        UserAgentPolicy.prototype.sendRequest = function (request) {\n            this.addUserAgentHeader(request);\n            return this._nextPolicy.sendRequest(request);\n        };\n        UserAgentPolicy.prototype.addUserAgentHeader = function (request) {\n            if (!request.headers) {\n                request.headers = new HttpHeaders();\n            }\n            if (!request.headers.get(this.headerKey) && this.headerValue) {\n                request.headers.set(this.headerKey, this.headerValue);\n            }\n        };\n        return UserAgentPolicy;\n    }(BaseRequestPolicy));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * A class that handles the query portion of a URLBuilder.\n     */\n    var URLQuery = /** @class */ (function () {\n        function URLQuery() {\n            this._rawQuery = {};\n        }\n        /**\n         * Get whether or not there any query parameters in this URLQuery.\n         */\n        URLQuery.prototype.any = function () {\n            return Object.keys(this._rawQuery).length > 0;\n        };\n        /**\n         * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n         * empty, then this will attempt to remove an existing query parameter with the provided\n         * parameterName.\n         */\n        URLQuery.prototype.set = function (parameterName, parameterValue) {\n            if (parameterName) {\n                if (parameterValue != undefined) {\n                    var newValue = Array.isArray(parameterValue) ? parameterValue : parameterValue.toString();\n                    this._rawQuery[parameterName] = newValue;\n                }\n                else {\n                    delete this._rawQuery[parameterName];\n                }\n            }\n        };\n        /**\n         * Get the value of the query parameter with the provided name. If no parameter exists with the\n         * provided parameter name, then undefined will be returned.\n         */\n        URLQuery.prototype.get = function (parameterName) {\n            return parameterName ? this._rawQuery[parameterName] : undefined;\n        };\n        /**\n         * Get the string representation of this query. The return value will not start with a \"?\".\n         */\n        URLQuery.prototype.toString = function () {\n            var result = \"\";\n            for (var parameterName in this._rawQuery) {\n                if (result) {\n                    result += \"&\";\n                }\n                var parameterValue = this._rawQuery[parameterName];\n                if (Array.isArray(parameterValue)) {\n                    var parameterStrings = [];\n                    for (var _i = 0, parameterValue_1 = parameterValue; _i < parameterValue_1.length; _i++) {\n                        var parameterValueElement = parameterValue_1[_i];\n                        parameterStrings.push(parameterName + \"=\" + parameterValueElement);\n                    }\n                    result += parameterStrings.join(\"&\");\n                }\n                else {\n                    result += parameterName + \"=\" + parameterValue;\n                }\n            }\n            return result;\n        };\n        /**\n         * Parse a URLQuery from the provided text.\n         */\n        URLQuery.parse = function (text) {\n            var result = new URLQuery();\n            if (text) {\n                if (text.startsWith(\"?\")) {\n                    text = text.substring(1);\n                }\n                var currentState = \"ParameterName\";\n                var parameterName = \"\";\n                var parameterValue = \"\";\n                for (var i = 0; i < text.length; ++i) {\n                    var currentCharacter = text[i];\n                    switch (currentState) {\n                        case \"ParameterName\":\n                            switch (currentCharacter) {\n                                case \"=\":\n                                    currentState = \"ParameterValue\";\n                                    break;\n                                case \"&\":\n                                    parameterName = \"\";\n                                    parameterValue = \"\";\n                                    break;\n                                default:\n                                    parameterName += currentCharacter;\n                                    break;\n                            }\n                            break;\n                        case \"ParameterValue\":\n                            switch (currentCharacter) {\n                                case \"=\":\n                                    parameterName = \"\";\n                                    parameterValue = \"\";\n                                    currentState = \"Invalid\";\n                                    break;\n                                case \"&\":\n                                    result.set(parameterName, parameterValue);\n                                    parameterName = \"\";\n                                    parameterValue = \"\";\n                                    currentState = \"ParameterName\";\n                                    break;\n                                default:\n                                    parameterValue += currentCharacter;\n                                    break;\n                            }\n                            break;\n                        case \"Invalid\":\n                            if (currentCharacter === \"&\") {\n                                currentState = \"ParameterName\";\n                            }\n                            break;\n                        default:\n                            throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                    }\n                }\n                if (currentState === \"ParameterValue\") {\n                    result.set(parameterName, parameterValue);\n                }\n            }\n            return result;\n        };\n        return URLQuery;\n    }());\n    /**\n     * A class that handles creating, modifying, and parsing URLs.\n     */\n    var URLBuilder = /** @class */ (function () {\n        function URLBuilder() {\n        }\n        /**\n         * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n         * (such as a host, port, path, or query), those parts will be added to this URL as well.\n         */\n        URLBuilder.prototype.setScheme = function (scheme) {\n            if (!scheme) {\n                this._scheme = undefined;\n            }\n            else {\n                this.set(scheme, \"SCHEME\");\n            }\n        };\n        /**\n         * Get the scheme that has been set in this URL.\n         */\n        URLBuilder.prototype.getScheme = function () {\n            return this._scheme;\n        };\n        /**\n         * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n         * port, path, or query), those parts will be added to this URL as well.\n         */\n        URLBuilder.prototype.setHost = function (host) {\n            if (!host) {\n                this._host = undefined;\n            }\n            else {\n                this.set(host, \"SCHEME_OR_HOST\");\n            }\n        };\n        /**\n         * Get the host that has been set in this URL.\n         */\n        URLBuilder.prototype.getHost = function () {\n            return this._host;\n        };\n        /**\n         * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n         * path or query), those parts will be added to this URL as well.\n         */\n        URLBuilder.prototype.setPort = function (port) {\n            if (port == undefined || port === \"\") {\n                this._port = undefined;\n            }\n            else {\n                this.set(port.toString(), \"PORT\");\n            }\n        };\n        /**\n         * Get the port that has been set in this URL.\n         */\n        URLBuilder.prototype.getPort = function () {\n            return this._port;\n        };\n        /**\n         * Set the path for this URL. If the provided path contains a query, then it will be added to\n         * this URL as well.\n         */\n        URLBuilder.prototype.setPath = function (path) {\n            if (!path) {\n                this._path = undefined;\n            }\n            else {\n                if (path.indexOf(\"://\") !== -1) {\n                    this.set(path, \"SCHEME\");\n                }\n                else {\n                    this.set(path, \"PATH\");\n                }\n            }\n        };\n        /**\n         * Append the provided path to this URL's existing path. If the provided path contains a query,\n         * then it will be added to this URL as well.\n         */\n        URLBuilder.prototype.appendPath = function (path) {\n            if (path) {\n                var currentPath = this.getPath();\n                if (currentPath) {\n                    if (!currentPath.endsWith(\"/\")) {\n                        currentPath += \"/\";\n                    }\n                    if (path.startsWith(\"/\")) {\n                        path = path.substring(1);\n                    }\n                    path = currentPath + path;\n                }\n                this.set(path, \"PATH\");\n            }\n        };\n        /**\n         * Get the path that has been set in this URL.\n         */\n        URLBuilder.prototype.getPath = function () {\n            return this._path;\n        };\n        /**\n         * Set the query in this URL.\n         */\n        URLBuilder.prototype.setQuery = function (query) {\n            if (!query) {\n                this._query = undefined;\n            }\n            else {\n                this._query = URLQuery.parse(query);\n            }\n        };\n        /**\n         * Set a query parameter with the provided name and value in this URL's query. If the provided\n         * query parameter value is undefined or empty, then the query parameter will be removed if it\n         * existed.\n         */\n        URLBuilder.prototype.setQueryParameter = function (queryParameterName, queryParameterValue) {\n            if (queryParameterName) {\n                if (!this._query) {\n                    this._query = new URLQuery();\n                }\n                this._query.set(queryParameterName, queryParameterValue);\n            }\n        };\n        /**\n         * Get the value of the query parameter with the provided query parameter name. If no query\n         * parameter exists with the provided name, then undefined will be returned.\n         */\n        URLBuilder.prototype.getQueryParameterValue = function (queryParameterName) {\n            return this._query ? this._query.get(queryParameterName) : undefined;\n        };\n        /**\n         * Get the query in this URL.\n         */\n        URLBuilder.prototype.getQuery = function () {\n            return this._query ? this._query.toString() : undefined;\n        };\n        /**\n         * Set the parts of this URL by parsing the provided text using the provided startState.\n         */\n        URLBuilder.prototype.set = function (text, startState) {\n            var tokenizer = new URLTokenizer(text, startState);\n            while (tokenizer.next()) {\n                var token = tokenizer.current();\n                if (token) {\n                    switch (token.type) {\n                        case \"SCHEME\":\n                            this._scheme = token.text || undefined;\n                            break;\n                        case \"HOST\":\n                            this._host = token.text || undefined;\n                            break;\n                        case \"PORT\":\n                            this._port = token.text || undefined;\n                            break;\n                        case \"PATH\":\n                            var tokenPath = token.text || undefined;\n                            if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                                this._path = tokenPath;\n                            }\n                            break;\n                        case \"QUERY\":\n                            this._query = URLQuery.parse(token.text);\n                            break;\n                        default:\n                            throw new Error(\"Unrecognized URLTokenType: \" + token.type);\n                    }\n                }\n            }\n        };\n        URLBuilder.prototype.toString = function () {\n            var result = \"\";\n            if (this._scheme) {\n                result += this._scheme + \"://\";\n            }\n            if (this._host) {\n                result += this._host;\n            }\n            if (this._port) {\n                result += \":\" + this._port;\n            }\n            if (this._path) {\n                if (!this._path.startsWith(\"/\")) {\n                    result += \"/\";\n                }\n                result += this._path;\n            }\n            if (this._query && this._query.any()) {\n                result += \"?\" + this._query.toString();\n            }\n            return result;\n        };\n        /**\n         * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n         * replaceValue.\n         */\n        URLBuilder.prototype.replaceAll = function (searchValue, replaceValue) {\n            if (searchValue) {\n                this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n                this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n                this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n                this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n                this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n            }\n        };\n        URLBuilder.parse = function (text) {\n            var result = new URLBuilder();\n            result.set(text, \"SCHEME_OR_HOST\");\n            return result;\n        };\n        return URLBuilder;\n    }());\n    var URLToken = /** @class */ (function () {\n        function URLToken(text, type) {\n            this.text = text;\n            this.type = type;\n        }\n        URLToken.scheme = function (text) {\n            return new URLToken(text, \"SCHEME\");\n        };\n        URLToken.host = function (text) {\n            return new URLToken(text, \"HOST\");\n        };\n        URLToken.port = function (text) {\n            return new URLToken(text, \"PORT\");\n        };\n        URLToken.path = function (text) {\n            return new URLToken(text, \"PATH\");\n        };\n        URLToken.query = function (text) {\n            return new URLToken(text, \"QUERY\");\n        };\n        return URLToken;\n    }());\n    /**\n     * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n     * digit) character.\n     */\n    function isAlphaNumericCharacter(character) {\n        var characterCode = character.charCodeAt(0);\n        return (48 /* '0' */ <= characterCode && characterCode <= 57 /* '9' */) ||\n            (65 /* 'A' */ <= characterCode && characterCode <= 90 /* 'Z' */) ||\n            (97 /* 'a' */ <= characterCode && characterCode <= 122 /* 'z' */);\n    }\n    /**\n     * A class that tokenizes URL strings.\n     */\n    var URLTokenizer = /** @class */ (function () {\n        function URLTokenizer(_text, state) {\n            this._text = _text;\n            this._textLength = _text ? _text.length : 0;\n            this._currentState = state != undefined ? state : \"SCHEME_OR_HOST\";\n            this._currentIndex = 0;\n        }\n        /**\n         * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n         * hasn't started or has finished tokenizing.\n         */\n        URLTokenizer.prototype.current = function () {\n            return this._currentToken;\n        };\n        /**\n         * Advance to the next URLToken and return whether or not a URLToken was found.\n         */\n        URLTokenizer.prototype.next = function () {\n            if (!hasCurrentCharacter(this)) {\n                this._currentToken = undefined;\n            }\n            else {\n                switch (this._currentState) {\n                    case \"SCHEME\":\n                        nextScheme(this);\n                        break;\n                    case \"SCHEME_OR_HOST\":\n                        nextSchemeOrHost(this);\n                        break;\n                    case \"HOST\":\n                        nextHost(this);\n                        break;\n                    case \"PORT\":\n                        nextPort(this);\n                        break;\n                    case \"PATH\":\n                        nextPath(this);\n                        break;\n                    case \"QUERY\":\n                        nextQuery(this);\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLTokenizerState: \" + this._currentState);\n                }\n            }\n            return !!this._currentToken;\n        };\n        return URLTokenizer;\n    }());\n    /**\n     * Read the remaining characters from this Tokenizer's character stream.\n     */\n    function readRemaining(tokenizer) {\n        var result = \"\";\n        if (tokenizer._currentIndex < tokenizer._textLength) {\n            result = tokenizer._text.substring(tokenizer._currentIndex);\n            tokenizer._currentIndex = tokenizer._textLength;\n        }\n        return result;\n    }\n    /**\n     * Whether or not this URLTokenizer has a current character.\n     */\n    function hasCurrentCharacter(tokenizer) {\n        return tokenizer._currentIndex < tokenizer._textLength;\n    }\n    /**\n     * Get the character in the text string at the current index.\n     */\n    function getCurrentCharacter(tokenizer) {\n        return tokenizer._text[tokenizer._currentIndex];\n    }\n    /**\n     * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n     * then step will default to 1.\n     */\n    function nextCharacter(tokenizer, step) {\n        if (hasCurrentCharacter(tokenizer)) {\n            if (!step) {\n                step = 1;\n            }\n            tokenizer._currentIndex += step;\n        }\n    }\n    /**\n     * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n     * Tokenizer's stream of characters.\n     */\n    function peekCharacters(tokenizer, charactersToPeek) {\n        var endIndex = tokenizer._currentIndex + charactersToPeek;\n        if (tokenizer._textLength < endIndex) {\n            endIndex = tokenizer._textLength;\n        }\n        return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n    }\n    /**\n     * Read characters from this Tokenizer until the end of the stream or until the provided condition\n     * is false when provided the current character.\n     */\n    function readWhile(tokenizer, condition) {\n        var result = \"\";\n        while (hasCurrentCharacter(tokenizer)) {\n            var currentCharacter = getCurrentCharacter(tokenizer);\n            if (!condition(currentCharacter)) {\n                break;\n            }\n            else {\n                result += currentCharacter;\n                nextCharacter(tokenizer);\n            }\n        }\n        return result;\n    }\n    /**\n     * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n     * character stream is reached.\n     */\n    function readWhileLetterOrDigit(tokenizer) {\n        return readWhile(tokenizer, function (character) { return isAlphaNumericCharacter(character); });\n    }\n    /**\n     * Read characters from this Tokenizer until one of the provided terminating characters is read or\n     * the end of the character stream is reached.\n     */\n    function readUntilCharacter(tokenizer) {\n        var terminatingCharacters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            terminatingCharacters[_i - 1] = arguments[_i];\n        }\n        return readWhile(tokenizer, function (character) { return terminatingCharacters.indexOf(character) === -1; });\n    }\n    function nextScheme(tokenizer) {\n        var scheme = readWhileLetterOrDigit(tokenizer);\n        tokenizer._currentToken = URLToken.scheme(scheme);\n        if (!hasCurrentCharacter(tokenizer)) {\n            tokenizer._currentState = \"DONE\";\n        }\n        else {\n            tokenizer._currentState = \"HOST\";\n        }\n    }\n    function nextSchemeOrHost(tokenizer) {\n        var schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n        if (!hasCurrentCharacter(tokenizer)) {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"DONE\";\n        }\n        else if (getCurrentCharacter(tokenizer) === \":\") {\n            if (peekCharacters(tokenizer, 3) === \"://\") {\n                tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n                tokenizer._currentState = \"HOST\";\n            }\n            else {\n                tokenizer._currentToken = URLToken.host(schemeOrHost);\n                tokenizer._currentState = \"PORT\";\n            }\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            if (getCurrentCharacter(tokenizer) === \"/\") {\n                tokenizer._currentState = \"PATH\";\n            }\n            else {\n                tokenizer._currentState = \"QUERY\";\n            }\n        }\n    }\n    function nextHost(tokenizer) {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            nextCharacter(tokenizer, 3);\n        }\n        var host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n        tokenizer._currentToken = URLToken.host(host);\n        if (!hasCurrentCharacter(tokenizer)) {\n            tokenizer._currentState = \"DONE\";\n        }\n        else if (getCurrentCharacter(tokenizer) === \":\") {\n            tokenizer._currentState = \"PORT\";\n        }\n        else if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n    function nextPort(tokenizer) {\n        if (getCurrentCharacter(tokenizer) === \":\") {\n            nextCharacter(tokenizer);\n        }\n        var port = readUntilCharacter(tokenizer, \"/\", \"?\");\n        tokenizer._currentToken = URLToken.port(port);\n        if (!hasCurrentCharacter(tokenizer)) {\n            tokenizer._currentState = \"DONE\";\n        }\n        else if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n    function nextPath(tokenizer) {\n        var path = readUntilCharacter(tokenizer, \"?\");\n        tokenizer._currentToken = URLToken.path(path);\n        if (!hasCurrentCharacter(tokenizer)) {\n            tokenizer._currentState = \"DONE\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n    function nextQuery(tokenizer) {\n        if (getCurrentCharacter(tokenizer) === \"?\") {\n            nextCharacter(tokenizer);\n        }\n        var query = readRemaining(tokenizer);\n        tokenizer._currentToken = URLToken.query(query);\n        tokenizer._currentState = \"DONE\";\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function redirectPolicy(maximumRetries) {\n        if (maximumRetries === void 0) { maximumRetries = 20; }\n        return {\n            create: function (nextPolicy, options) {\n                return new RedirectPolicy(nextPolicy, options, maximumRetries);\n            }\n        };\n    }\n    var RedirectPolicy = /** @class */ (function (_super) {\n        __extends(RedirectPolicy, _super);\n        function RedirectPolicy(nextPolicy, options, maxRetries) {\n            if (maxRetries === void 0) { maxRetries = 20; }\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.maxRetries = maxRetries;\n            return _this;\n        }\n        RedirectPolicy.prototype.sendRequest = function (request) {\n            var _this = this;\n            return this._nextPolicy.sendRequest(request).then(function (response) { return handleRedirect(_this, response, 0); });\n        };\n        return RedirectPolicy;\n    }(BaseRequestPolicy));\n    function handleRedirect(policy, response, currentRetries) {\n        var request = response.request, status = response.status;\n        var locationHeader = response.headers.get(\"location\");\n        if (locationHeader &&\n            (status === 300 || status === 307 || (status === 303 && request.method === \"POST\")) &&\n            (!policy.maxRetries || currentRetries < policy.maxRetries)) {\n            var builder = URLBuilder.parse(request.url);\n            builder.setPath(locationHeader);\n            request.url = builder.toString();\n            // POST request with Status code 303 should be converted into a\n            // redirected GET request if the redirect url is present in the location header\n            if (status === 303) {\n                request.method = \"GET\";\n            }\n            return policy._nextPolicy.sendRequest(request)\n                .then(function (res) { return handleRedirect(policy, res, currentRetries + 1); });\n        }\n        return Promise.resolve(response);\n    }\n\n    function rpRegistrationPolicy(retryTimeout) {\n        if (retryTimeout === void 0) { retryTimeout = 30; }\n        return {\n            create: function (nextPolicy, options) {\n                return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n            }\n        };\n    }\n    var RPRegistrationPolicy = /** @class */ (function (_super) {\n        __extends(RPRegistrationPolicy, _super);\n        function RPRegistrationPolicy(nextPolicy, options, _retryTimeout) {\n            if (_retryTimeout === void 0) { _retryTimeout = 30; }\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this._retryTimeout = _retryTimeout;\n            return _this;\n        }\n        RPRegistrationPolicy.prototype.sendRequest = function (request) {\n            var _this = this;\n            return this._nextPolicy.sendRequest(request.clone())\n                .then(function (response) { return registerIfNeeded(_this, request, response); });\n        };\n        return RPRegistrationPolicy;\n    }(BaseRequestPolicy));\n    function registerIfNeeded(policy, request, response) {\n        if (response.status === 409) {\n            var rpName = checkRPNotRegisteredError(response.bodyAsText);\n            if (rpName) {\n                var urlPrefix = extractSubscriptionUrl(request.url);\n                return registerRP(policy, urlPrefix, rpName, request)\n                    // Autoregistration of ${provider} failed for some reason. We will not return this error\n                    // instead will return the initial response with 409 status code back to the user.\n                    // do nothing here as we are returning the original response at the end of this method.\n                    .catch(function () { return false; })\n                    .then(function (registrationStatus) {\n                    if (registrationStatus) {\n                        // Retry the original request. We have to change the x-ms-client-request-id\n                        // otherwise Azure endpoint will return the initial 409 (cached) response.\n                        request.headers.set(\"x-ms-client-request-id\", generateUuid());\n                        return policy._nextPolicy.sendRequest(request.clone());\n                    }\n                    return response;\n                });\n            }\n        }\n        return Promise.resolve(response);\n    }\n    /**\n     * Reuses the headers of the original request and url (if specified).\n     * @param {WebResource} originalRequest The original request\n     * @param {boolean} reuseUrlToo Should the url from the original request be reused as well. Default false.\n     * @returns {object} A new request object with desired headers.\n     */\n    function getRequestEssentials(originalRequest, reuseUrlToo) {\n        if (reuseUrlToo === void 0) { reuseUrlToo = false; }\n        var reqOptions = originalRequest.clone();\n        if (reuseUrlToo) {\n            reqOptions.url = originalRequest.url;\n        }\n        // We have to change the x-ms-client-request-id otherwise Azure endpoint\n        // will return the initial 409 (cached) response.\n        reqOptions.headers.set(\"x-ms-client-request-id\", generateUuid());\n        // Set content-type to application/json\n        reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        return reqOptions;\n    }\n    /**\n     * Validates the error code and message associated with 409 response status code. If it matches to that of\n     * RP not registered then it returns the name of the RP else returns undefined.\n     * @param {string} body The response body received after making the original request.\n     * @returns {string} The name of the RP if condition is satisfied else undefined.\n     */\n    function checkRPNotRegisteredError(body) {\n        var result, responseBody;\n        if (body) {\n            try {\n                responseBody = JSON.parse(body);\n            }\n            catch (err) {\n                // do nothing;\n            }\n            if (responseBody && responseBody.error && responseBody.error.message &&\n                responseBody.error.code && responseBody.error.code === \"MissingSubscriptionRegistration\") {\n                var matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n                if (matchRes) {\n                    result = matchRes.pop();\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Extracts the first part of the URL, just after subscription:\n     * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n     * @param {string} url The original request url\n     * @returns {string} The url prefix as explained above.\n     */\n    function extractSubscriptionUrl(url) {\n        var result;\n        var matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//ig);\n        if (matchRes && matchRes[0]) {\n            result = matchRes[0];\n        }\n        else {\n            throw new Error(\"Unable to extract subscriptionId from the given url - \" + url + \".\");\n        }\n        return result;\n    }\n    /**\n     * Registers the given provider.\n     * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n     * @param {string} urlPrefix https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n     * @param {string} provider The provider name to be registered.\n     * @param {WebResource} originalRequest The original request sent by the user that returned a 409 response\n     * with a message that the provider is not registered.\n     * @param {registrationCallback} callback The callback that handles the RP registration\n     */\n    function registerRP(policy, urlPrefix, provider, originalRequest) {\n        var postUrl = urlPrefix + \"providers/\" + provider + \"/register?api-version=2016-02-01\";\n        var getUrl = urlPrefix + \"providers/\" + provider + \"?api-version=2016-02-01\";\n        var reqOptions = getRequestEssentials(originalRequest);\n        reqOptions.method = \"POST\";\n        reqOptions.url = postUrl;\n        return policy._nextPolicy.sendRequest(reqOptions)\n            .then(function (response) {\n            if (response.status !== 200) {\n                throw new Error(\"Autoregistration of \" + provider + \" failed. Please try registering manually.\");\n            }\n            return getRegistrationStatus(policy, getUrl, originalRequest);\n        });\n    }\n    /**\n     * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n     * Polling will happen till the registrationState property of the response body is \"Registered\".\n     * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n     * @param {string} url The request url for polling\n     * @param {WebResource} originalRequest The original request sent by the user that returned a 409 response\n     * with a message that the provider is not registered.\n     * @returns {Promise<boolean>} True if RP Registration is successful.\n     */\n    function getRegistrationStatus(policy, url, originalRequest) {\n        var reqOptions = getRequestEssentials(originalRequest);\n        reqOptions.url = url;\n        reqOptions.method = \"GET\";\n        return policy._nextPolicy.sendRequest(reqOptions).then(function (res) {\n            var obj = res.parsedBody;\n            if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n                return true;\n            }\n            else {\n                return delay(policy._retryTimeout * 1000).then(function () { return getRegistrationStatus(policy, url, originalRequest); });\n            }\n        });\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function signingPolicy(authenticationProvider) {\n        return {\n            create: function (nextPolicy, options) {\n                return new SigningPolicy(nextPolicy, options, authenticationProvider);\n            }\n        };\n    }\n    var SigningPolicy = /** @class */ (function (_super) {\n        __extends(SigningPolicy, _super);\n        function SigningPolicy(nextPolicy, options, authenticationProvider) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.authenticationProvider = authenticationProvider;\n            return _this;\n        }\n        SigningPolicy.prototype.signRequest = function (request) {\n            return this.authenticationProvider.signRequest(request);\n        };\n        SigningPolicy.prototype.sendRequest = function (request) {\n            var _this = this;\n            return this.signRequest(request).then(function (nextRequest) { return _this._nextPolicy.sendRequest(nextRequest); });\n        };\n        return SigningPolicy;\n    }(BaseRequestPolicy));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        return {\n            create: function (nextPolicy, options) {\n                return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n            }\n        };\n    }\n    /**\n     * @class\n     * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n     *\n     * @constructor\n     * @param {number} retryCount        The client retry count.\n     * @param {number} retryInterval     The client retry interval, in milliseconds.\n     * @param {number} minRetryInterval  The minimum retry interval, in milliseconds.\n     * @param {number} maxRetryInterval  The maximum retry interval, in milliseconds.\n     */\n    var SystemErrorRetryPolicy = /** @class */ (function (_super) {\n        __extends(SystemErrorRetryPolicy, _super);\n        function SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\n            _this.DEFAULT_CLIENT_RETRY_COUNT = 3;\n            _this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\n            _this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n            _this.retryCount = typeof retryCount === \"number\" ? retryCount : _this.DEFAULT_CLIENT_RETRY_COUNT;\n            _this.retryInterval = typeof retryInterval === \"number\" ? retryInterval : _this.DEFAULT_CLIENT_RETRY_INTERVAL;\n            _this.minRetryInterval = typeof minRetryInterval === \"number\" ? minRetryInterval : _this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n            _this.maxRetryInterval = typeof maxRetryInterval === \"number\" ? maxRetryInterval : _this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n            return _this;\n        }\n        SystemErrorRetryPolicy.prototype.sendRequest = function (request) {\n            var _this = this;\n            return this._nextPolicy.sendRequest(request.clone()).then(function (response) { return retry$1(_this, request, response); });\n        };\n        return SystemErrorRetryPolicy;\n    }(BaseRequestPolicy));\n    /**\n     * Determines if the operation should be retried and how long to wait until the next retry.\n     *\n     * @param {number} statusCode The HTTP status code.\n     * @param {RetryData} retryData  The retry data.\n     * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n     */\n    function shouldRetry$1(policy, retryData) {\n        var currentCount;\n        if (!retryData) {\n            throw new Error(\"retryData for the SystemErrorRetryPolicyFilter cannot be null.\");\n        }\n        else {\n            currentCount = (retryData && retryData.retryCount);\n        }\n        return (currentCount < policy.retryCount);\n    }\n    /**\n     * Updates the retry data for the next attempt.\n     *\n     * @param {RetryData} retryData  The retry data.\n     * @param {object} err        The operation\"s error, if any.\n     */\n    function updateRetryData$1(policy, retryData, err) {\n        if (!retryData) {\n            retryData = {\n                retryCount: 0,\n                retryInterval: 0\n            };\n        }\n        if (err) {\n            if (retryData.error) {\n                err.innerError = retryData.error;\n            }\n            retryData.error = err;\n        }\n        // Adjust retry count\n        retryData.retryCount++;\n        // Adjust retry interval\n        var incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n        var boundedRandDelta = policy.retryInterval * 0.8 +\n            Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n        incrementDelta *= boundedRandDelta;\n        retryData.retryInterval = Math.min(policy.minRetryInterval + incrementDelta, policy.maxRetryInterval);\n        return retryData;\n    }\n    function retry$1(policy, request, operationResponse, retryData, err) {\n        retryData = updateRetryData$1(policy, retryData, err);\n        if (err && err.code && shouldRetry$1(policy, retryData) &&\n            (err.code === \"ETIMEDOUT\" || err.code === \"ESOCKETTIMEDOUT\" || err.code === \"ECONNREFUSED\" ||\n                err.code === \"ECONNRESET\" || err.code === \"ENOENT\")) {\n            // If previous operation ended with an error and the policy allows a retry, do that\n            return delay(retryData.retryInterval)\n                .then(function () { return policy._nextPolicy.sendRequest(request.clone()); })\n                .then(function (res) { return retry$1(policy, request, res, retryData, err); })\n                .catch(function (err) { return retry$1(policy, request, operationResponse, retryData, err); });\n        }\n        else {\n            if (err != undefined) {\n                // If the operation failed in the end, return all errors instead of just the last one\n                err = retryData.error;\n                return Promise.reject(err);\n            }\n            return Promise.resolve(operationResponse);\n        }\n    }\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    // Licensed under the MIT License. See License.txt in the project root for license information.\n    /**\n     * The format that will be used to join an array of values together for a query parameter value.\n     */\n    var QueryCollectionFormat;\n    (function (QueryCollectionFormat) {\n        QueryCollectionFormat[\"Csv\"] = \",\";\n        QueryCollectionFormat[\"Ssv\"] = \" \";\n        QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n        QueryCollectionFormat[\"Pipes\"] = \"|\";\n        QueryCollectionFormat[\"Multi\"] = \"Multi\";\n    })(QueryCollectionFormat || (QueryCollectionFormat = {}));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    function loadEnvironmentProxyValue() {\n        if (!process) {\n            return undefined;\n        }\n        if (process.env[Constants.HTTPS_PROXY]) {\n            return process.env[Constants.HTTPS_PROXY];\n        }\n        else if (process.env[Constants.HTTPS_PROXY.toLowerCase()]) {\n            return process.env[Constants.HTTPS_PROXY.toLowerCase()];\n        }\n        else if (process.env[Constants.HTTP_PROXY]) {\n            return process.env[Constants.HTTP_PROXY];\n        }\n        else if (process.env[Constants.HTTP_PROXY.toLowerCase()]) {\n            return process.env[Constants.HTTP_PROXY.toLowerCase()];\n        }\n        return undefined;\n    }\n    function getDefaultProxySettings(proxyUrl) {\n        if (!proxyUrl) {\n            proxyUrl = loadEnvironmentProxyValue();\n            if (!proxyUrl) {\n                return undefined;\n            }\n        }\n        var parsedUrl = URLBuilder.parse(proxyUrl);\n        return {\n            host: parsedUrl.getScheme() + \"://\" + parsedUrl.getHost(),\n            port: Number.parseInt(parsedUrl.getPort() || \"80\")\n        };\n    }\n    function proxyPolicy(proxySettings) {\n        return {\n            create: function (nextPolicy, options) {\n                return new ProxyPolicy(nextPolicy, options, proxySettings);\n            }\n        };\n    }\n    var ProxyPolicy = /** @class */ (function (_super) {\n        __extends(ProxyPolicy, _super);\n        function ProxyPolicy(nextPolicy, options, proxySettings) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.proxySettings = proxySettings;\n            return _this;\n        }\n        ProxyPolicy.prototype.sendRequest = function (request) {\n            if (!request.proxySettings) {\n                request.proxySettings = this.proxySettings;\n            }\n            return this._nextPolicy.sendRequest(request);\n        };\n        return ProxyPolicy;\n    }(BaseRequestPolicy));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    var StatusCodes = Constants.HttpConstants.StatusCodes;\n    function throttlingRetryPolicy() {\n        return {\n            create: function (nextPolicy, options) {\n                return new ThrottlingRetryPolicy(nextPolicy, options);\n            }\n        };\n    }\n    /**\n     * To learn more, please refer to\n     * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n     * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n     * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n     */\n    var ThrottlingRetryPolicy = /** @class */ (function (_super) {\n        __extends(ThrottlingRetryPolicy, _super);\n        function ThrottlingRetryPolicy(nextPolicy, options, _handleResponse) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this._handleResponse = _handleResponse || _this._defaultResponseHandler;\n            return _this;\n        }\n        ThrottlingRetryPolicy.prototype.sendRequest = function (httpRequest) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this._nextPolicy.sendRequest(httpRequest.clone()).then(function (response) {\n                            if (response.status !== StatusCodes.TooManyRequests) {\n                                return response;\n                            }\n                            else {\n                                return _this._handleResponse(httpRequest, response);\n                            }\n                        })];\n                });\n            });\n        };\n        ThrottlingRetryPolicy.prototype._defaultResponseHandler = function (httpRequest, httpResponse) {\n            return __awaiter(this, void 0, void 0, function () {\n                var retryAfterHeader, delayInMs;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    retryAfterHeader = httpResponse.headers.get(Constants.HeaderConstants.RETRY_AFTER);\n                    if (retryAfterHeader) {\n                        delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n                        if (delayInMs) {\n                            return [2 /*return*/, delay(delayInMs).then(function (_) { return _this._nextPolicy.sendRequest(httpRequest); })];\n                        }\n                    }\n                    return [2 /*return*/, httpResponse];\n                });\n            });\n        };\n        ThrottlingRetryPolicy.parseRetryAfterHeader = function (headerValue) {\n            var retryAfterInSeconds = Number(headerValue);\n            if (Number.isNaN(retryAfterInSeconds)) {\n                return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n            }\n            else {\n                return retryAfterInSeconds * 1000;\n            }\n        };\n        ThrottlingRetryPolicy.parseDateRetryAfterHeader = function (headerValue) {\n            try {\n                var now = Date.now();\n                var date = Date.parse(headerValue);\n                var diff = date - now;\n                return Number.isNaN(diff) ? undefined : diff;\n            }\n            catch (error) {\n                return undefined;\n            }\n        };\n        return ThrottlingRetryPolicy;\n    }(BaseRequestPolicy));\n\n    // Copyright (c) Microsoft Corporation. All rights reserved.\n    /**\n     * @class\n     * Initializes a new instance of the ServiceClient.\n     */\n    var ServiceClient = /** @class */ (function () {\n        /**\n         * The ServiceClient constructor\n         * @constructor\n         * @param {ServiceClientCredentials} [credentials] The credentials object used for authentication.\n         * @param {ServiceClientOptions} [options] The service client options that govern the behavior of the client.\n         */\n        function ServiceClient(credentials, options) {\n            if (!options) {\n                options = {};\n            }\n            if (credentials && !credentials.signRequest) {\n                throw new Error(\"credentials argument needs to implement signRequest method\");\n            }\n            this._withCredentials = options.withCredentials || false;\n            this._httpClient = options.httpClient || new XhrHttpClient();\n            this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n            var requestPolicyFactories;\n            if (Array.isArray(options.requestPolicyFactories)) {\n                requestPolicyFactories = options.requestPolicyFactories;\n            }\n            else {\n                requestPolicyFactories = createDefaultRequestPolicyFactories(credentials, options);\n                if (options.requestPolicyFactories) {\n                    var newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n                    if (newRequestPolicyFactories) {\n                        requestPolicyFactories = newRequestPolicyFactories;\n                    }\n                }\n            }\n            this._requestPolicyFactories = requestPolicyFactories;\n        }\n        /**\n         * Send the provided httpRequest.\n         */\n        ServiceClient.prototype.sendRequest = function (options) {\n            if (options === null || options === undefined || typeof options !== \"object\") {\n                throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n            }\n            var httpRequest;\n            try {\n                if (options instanceof WebResource) {\n                    options.validateRequestProperties();\n                    httpRequest = options;\n                }\n                else {\n                    httpRequest = new WebResource();\n                    httpRequest = httpRequest.prepare(options);\n                }\n            }\n            catch (error) {\n                return Promise.reject(error);\n            }\n            var httpPipeline = this._httpClient;\n            if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n                for (var i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                    httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n                }\n            }\n            return httpPipeline.sendRequest(httpRequest);\n        };\n        /**\n         * Send an HTTP request that is populated using the provided OperationSpec.\n         * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n         * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n         * @param {ServiceCallback} callback The callback to call when the response is received.\n         */\n        ServiceClient.prototype.sendOperationRequest = function (operationArguments, operationSpec, callback) {\n            if (typeof operationArguments.options === \"function\") {\n                callback = operationArguments.options;\n                operationArguments.options = undefined;\n            }\n            var httpRequest = new WebResource();\n            var result;\n            try {\n                var baseUri = operationSpec.baseUrl || this.baseUri;\n                if (!baseUri) {\n                    throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n                }\n                httpRequest.method = operationSpec.httpMethod;\n                httpRequest.operationSpec = operationSpec;\n                var requestUrl = URLBuilder.parse(baseUri);\n                if (operationSpec.path) {\n                    requestUrl.appendPath(operationSpec.path);\n                }\n                if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                    for (var _i = 0, _a = operationSpec.urlParameters; _i < _a.length; _i++) {\n                        var urlParameter = _a[_i];\n                        var urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                        urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, getPathStringFromParameter(urlParameter));\n                        if (!urlParameter.skipEncoding) {\n                            urlParameterValue = encodeURIComponent(urlParameterValue);\n                        }\n                        requestUrl.replaceAll(\"{\" + (urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)) + \"}\", urlParameterValue);\n                    }\n                }\n                if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                    for (var _b = 0, _c = operationSpec.queryParameters; _b < _c.length; _b++) {\n                        var queryParameter = _c[_b];\n                        var queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                        if (queryParameterValue != undefined) {\n                            queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter));\n                            if (queryParameter.collectionFormat != undefined) {\n                                if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                                    if (queryParameterValue.length === 0) {\n                                        queryParameterValue = \"\";\n                                    }\n                                    else {\n                                        for (var index in queryParameterValue) {\n                                            var item = queryParameterValue[index];\n                                            queryParameterValue[index] = item == undefined ? \"\" : item.toString();\n                                        }\n                                    }\n                                }\n                                else {\n                                    queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                                }\n                            }\n                            if (!queryParameter.skipEncoding) {\n                                if (Array.isArray(queryParameterValue)) {\n                                    for (var index in queryParameterValue) {\n                                        queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                    }\n                                }\n                                else {\n                                    queryParameterValue = encodeURIComponent(queryParameterValue);\n                                }\n                            }\n                            requestUrl.setQueryParameter(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n                        }\n                    }\n                }\n                httpRequest.url = requestUrl.toString();\n                var contentType = operationSpec.contentType || this.requestContentType;\n                if (contentType) {\n                    httpRequest.headers.set(\"Content-Type\", contentType);\n                }\n                if (operationSpec.headerParameters) {\n                    for (var _d = 0, _e = operationSpec.headerParameters; _d < _e.length; _d++) {\n                        var headerParameter = _e[_d];\n                        var headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                        if (headerValue != undefined) {\n                            headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter));\n                            var headerCollectionPrefix = headerParameter.mapper.headerCollectionPrefix;\n                            if (headerCollectionPrefix) {\n                                for (var _f = 0, _g = Object.keys(headerValue); _f < _g.length; _f++) {\n                                    var key = _g[_f];\n                                    httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                                }\n                            }\n                            else {\n                                httpRequest.headers.set(headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter), headerValue);\n                            }\n                        }\n                    }\n                }\n                var options = operationArguments.options;\n                if (options) {\n                    if (options.customHeaders) {\n                        for (var customHeaderName in options.customHeaders) {\n                            httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                        }\n                    }\n                    if (options.abortSignal) {\n                        httpRequest.abortSignal = options.abortSignal;\n                    }\n                    if (options.timeout) {\n                        httpRequest.timeout = options.timeout;\n                    }\n                    if (options.onUploadProgress) {\n                        httpRequest.onUploadProgress = options.onUploadProgress;\n                    }\n                    if (options.onDownloadProgress) {\n                        httpRequest.onDownloadProgress = options.onDownloadProgress;\n                    }\n                }\n                httpRequest.withCredentials = this._withCredentials;\n                serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n                if (httpRequest.streamResponseBody == undefined) {\n                    httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n                }\n                result = this.sendRequest(httpRequest)\n                    .then(function (res) { return flattenResponse(res, operationSpec.responses[res.status]); });\n            }\n            catch (error) {\n                result = Promise.reject(error);\n            }\n            var cb = callback;\n            if (cb) {\n                result\n                    // tslint:disable-next-line:no-null-keyword\n                    .then(function (res) { return cb(null, res._response.parsedBody, res._response.request, res._response); })\n                    .catch(function (err) { return cb(err); });\n            }\n            return result;\n        };\n        return ServiceClient;\n    }());\n    function serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n        if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n            httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n            var bodyMapper = operationSpec.requestBody.mapper;\n            var required = bodyMapper.required, xmlName = bodyMapper.xmlName, xmlElementName = bodyMapper.xmlElementName, serializedName = bodyMapper.serializedName;\n            var typeName = bodyMapper.type.name;\n            try {\n                if (httpRequest.body != undefined || required) {\n                    var requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n                    httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString);\n                    var isStream = typeName === MapperType.Stream;\n                    if (operationSpec.isXML) {\n                        if (typeName === MapperType.Sequence) {\n                            httpRequest.body = stringifyXML(prepareXMLRootList(httpRequest.body, xmlElementName || xmlName || serializedName), { rootName: xmlName || serializedName });\n                        }\n                        else if (!isStream) {\n                            httpRequest.body = stringifyXML(httpRequest.body, { rootName: xmlName || serializedName });\n                        }\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = JSON.stringify(httpRequest.body);\n                    }\n                }\n            }\n            catch (error) {\n                throw new Error(\"Error \\\"\" + error.message + \"\\\" occurred in serializing the payload - \" + JSON.stringify(serializedName, undefined, \"  \") + \".\");\n            }\n        }\n        else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n            httpRequest.formData = {};\n            for (var _i = 0, _a = operationSpec.formDataParameters; _i < _a.length; _i++) {\n                var formDataParameter = _a[_i];\n                var formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n                if (formDataParameterValue != undefined) {\n                    var formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n                    httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter));\n                }\n            }\n        }\n    }\n    function isRequestPolicyFactory(instance) {\n        return typeof instance.create === \"function\";\n    }\n    function getValueOrFunctionResult(value, defaultValueCreator) {\n        var result;\n        if (typeof value === \"string\") {\n            result = value;\n        }\n        else {\n            result = defaultValueCreator();\n            if (typeof value === \"function\") {\n                result = value(result);\n            }\n        }\n        return result;\n    }\n    function createDefaultRequestPolicyFactories(credentials, options) {\n        var factories = [];\n        if (options.generateClientRequestIdHeader) {\n            factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n        }\n        if (credentials) {\n            if (isRequestPolicyFactory(credentials)) {\n                factories.push(credentials);\n            }\n            else {\n                factories.push(signingPolicy(credentials));\n            }\n        }\n        var userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, getDefaultUserAgentHeaderName);\n        var userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, getDefaultUserAgentValue);\n        if (userAgentHeaderName && userAgentHeaderValue) {\n            factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n        }\n        factories.push(redirectPolicy());\n        factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n        if (!options.noRetryPolicy) {\n            factories.push(exponentialRetryPolicy());\n            factories.push(systemErrorRetryPolicy());\n            factories.push(throttlingRetryPolicy());\n        }\n        factories.push(deserializationPolicy(options.deserializationContentTypes));\n        var proxySettings = options.proxySettings || getDefaultProxySettings();\n        if (proxySettings) {\n            factories.push(proxyPolicy(proxySettings));\n        }\n        return factories;\n    }\n    function getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n        return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n    }\n    function getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n        var value;\n        if (typeof parameterPath === \"string\") {\n            parameterPath = [parameterPath];\n        }\n        if (Array.isArray(parameterPath)) {\n            if (parameterPath.length > 0) {\n                if (parameterMapper.isConstant) {\n                    value = parameterMapper.defaultValue;\n                }\n                else {\n                    var propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                    if (!propertySearchResult.propertyFound) {\n                        propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                    }\n                    var useDefaultValue = false;\n                    if (!propertySearchResult.propertyFound) {\n                        useDefaultValue = parameterMapper.required || (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                    }\n                    value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n                }\n                // Serialize just for validation purposes.\n                var parameterPathString = getPathStringFromParameterPath(parameterPath, parameterMapper);\n                serializer.serialize(parameterMapper, value, parameterPathString);\n            }\n        }\n        else {\n            if (parameterMapper.required) {\n                value = {};\n            }\n            for (var propertyName in parameterPath) {\n                var propertyMapper = parameterMapper.type.modelProperties[propertyName];\n                var propertyPath = parameterPath[propertyName];\n                var propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n                // Serialize just for validation purposes.\n                var propertyPathString = getPathStringFromParameterPath(propertyPath, propertyMapper);\n                serializer.serialize(propertyMapper, propertyValue, propertyPathString);\n                if (propertyValue !== undefined) {\n                    if (!value) {\n                        value = {};\n                    }\n                    value[propertyName] = propertyValue;\n                }\n            }\n        }\n        return value;\n    }\n    function getPropertyFromParameterPath(parent, parameterPath) {\n        var result = { propertyFound: false };\n        var i = 0;\n        for (; i < parameterPath.length; ++i) {\n            var parameterPathPart = parameterPath[i];\n            // Make sure to check inherited properties too, so don't use hasOwnProperty().\n            if (parent != undefined && parameterPathPart in parent) {\n                parent = parent[parameterPathPart];\n            }\n            else {\n                break;\n            }\n        }\n        if (i === parameterPath.length) {\n            result.propertyValue = parent;\n            result.propertyFound = true;\n        }\n        return result;\n    }\n    function flattenResponse(_response, responseSpec) {\n        var parsedHeaders = _response.parsedHeaders;\n        var bodyMapper = responseSpec && responseSpec.bodyMapper;\n        var addOperationResponse = function (obj) {\n            return Object.defineProperty(obj, \"_response\", {\n                value: _response\n            });\n        };\n        if (bodyMapper) {\n            var typeName = bodyMapper.type.name;\n            if (typeName === \"Stream\") {\n                return addOperationResponse(__assign({}, parsedHeaders, { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n            }\n            var modelProperties_1 = typeName === \"Composite\" && bodyMapper.type.modelProperties || {};\n            var isPageableResponse = Object.keys(modelProperties_1).some(function (k) { return modelProperties_1[k].serializedName === \"\"; });\n            if (typeName === \"Sequence\" || isPageableResponse) {\n                var arrayResponse = (_response.parsedBody || []).slice();\n                for (var _i = 0, _a = Object.keys(modelProperties_1); _i < _a.length; _i++) {\n                    var key = _a[_i];\n                    if (modelProperties_1[key].serializedName) {\n                        arrayResponse[key] = _response.parsedBody[key];\n                    }\n                }\n                if (parsedHeaders) {\n                    for (var _b = 0, _c = Object.keys(parsedHeaders); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        arrayResponse[key] = parsedHeaders[key];\n                    }\n                }\n                addOperationResponse(arrayResponse);\n                return arrayResponse;\n            }\n            if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n                return addOperationResponse(__assign({}, parsedHeaders, _response.parsedBody));\n            }\n        }\n        if (bodyMapper || _response.request.method === \"HEAD\" || isPrimitiveType(_response.parsedBody)) {\n            // primitive body types and HEAD booleans\n            return addOperationResponse(__assign({}, parsedHeaders, { body: _response.parsedBody }));\n        }\n        return addOperationResponse(__assign({}, parsedHeaders, _response.parsedBody));\n    }\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var index = /*#__PURE__*/Object.freeze({\n\n    });\n\n    /**\n     * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n     *\n     * - Call Aborter.none to create a new Aborter instance without timeout.\n     * - Call Aborter.timeout() to create a new Aborter instance with timeout.\n     *\n     * For an existing instance aborter:\n     * - Call aborter.withTimeout() to create and return a child Aborter instance with timeout.\n     * - Call aborter.withValue(key, value) to create and return a child Aborter instance with key/value pair.\n     * - Call aborter.abort() to abort current instance and all children instances.\n     * - Call aborter.getValue(key) to search and get value with corresponding key from current aborter to all parents.\n     *\n     * @example\n     * // Abort without timeout\n     * await blockBlobURL.upload(Aborter.none, buf, buf.length);\n     *\n     * @example\n     * // Abort container create in 1000ms\n     * await blockBlobURL.upload(Aborter.timeout(1000), buf, buf.length);\n     *\n     * @example\n     * // Share aborter cross multiple operations in 30s\n     * // Upload the same data to 2 different data centers at the same time, abort another when any of them is finished\n     * const aborter = Aborter.timeout(30 * 1000);\n     * blockBlobURL1.upload(aborter, buf, buf.length).then(aborter.abort);\n     * blockBlobURL2.upload(aborter, buf, buf.length).then(aborter.abort);\n     *\n     * @example\n     * // Cascaded aborting\n     * // All operations can't take more than 30 seconds\n     * const aborter = Aborter.timeout(30 * 1000);\n     *\n     * // Following 2 operations can't take more than 25 seconds\n     * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n     * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n     *\n     * @export\n     * @class Aborter\n     * @implements {AbortSignalLike}\n     */\n    var Aborter = /** @class */ (function () {\n        // private disposed: boolean = false;\n        /**\n         * Private constructor for internal usage, creates an instance of Aborter.\n         *\n         * @param {Aborter} [parent] Optional. Parent aborter.\n         * @param {number} [timeout=0] Optional. Timeout before abort in millisecond, 0 means no timeout.\n         * @param {string} [key] Optional. Immutable key in string.\n         * @param {(string | number | boolean | null)} [value] Optional. Immutable value.\n         * @memberof Aborter\n         */\n        function Aborter(parent, timeout, key, value) {\n            var _this = this;\n            if (timeout === void 0) { timeout = 0; }\n            /**\n             * onabort event listener.\n             *\n             * @memberof Aborter\n             */\n            this.onabort = null;\n            // tslint:disable-next-line:variable-name\n            this._aborted = false;\n            this.children = []; // When child object calls dispose(), remove child from here\n            this.abortEventListeners = [];\n            this.parent = parent;\n            this.key = key;\n            this.value = value;\n            if (timeout > 0) {\n                this.timer = setTimeout(function () {\n                    _this.abort.call(_this);\n                }, timeout);\n                // When called, the active Timeout object will not require the Node.js event loop\n                // to remain active. If there is no other activity keeping the event loop running,\n                // the process may exit before the Timeout object's callback is invoked.\n                if (this.timer && isNode) {\n                    this.timer.unref();\n                }\n            }\n        }\n        Object.defineProperty(Aborter.prototype, \"aborted\", {\n            /**\n             * Status of whether aborted or not.\n             *\n             * @readonly\n             * @type {boolean}\n             * @memberof Aborter\n             */\n            get: function () {\n                return this._aborted;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Aborter, \"none\", {\n            /**\n             * Creates a new Aborter instance without timeout.\n             *\n             * @readonly\n             * @static\n             * @type {Aborter}\n             * @memberof Aborter\n             */\n            get: function () {\n                return new Aborter(undefined, 0);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new Aborter instance with timeout in milliseconds.\n         * Set parameter timeout to 0 will not create a timer.\n         *\n         * @static\n         * @param {number} {timeout} in milliseconds\n         * @returns {Aborter}\n         * @memberof Aborter\n         */\n        Aborter.timeout = function (timeout) {\n            return new Aborter(undefined, timeout);\n        };\n        /**\n         * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n         * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n         * triggers timeout event, all children nodes abort event will be triggered too.\n         *\n         * When timeout parameter (in millisecond) is larger than 0, the abort event will be triggered when timeout.\n         * Otherwise, call abort() method to manually abort.\n         *\n         * @param {number} {timeout} Timeout in millisecond.\n         * @returns {Aborter} The new Aborter instance created.\n         * @memberof Aborter\n         */\n        Aborter.prototype.withTimeout = function (timeout) {\n            var childCancelContext = new Aborter(this, timeout);\n            this.children.push(childCancelContext);\n            return childCancelContext;\n        };\n        /**\n         * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n         * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n         * triggers timeout event, all children nodes abort event will be triggered too.\n         *\n         * Immutable key value pair will be set into the new created Aborter instance.\n         * Call getValue() to find out latest value with corresponding key in the chain of\n         * [current node] -> [parent node] and [grand parent node]....\n         *\n         * @param {string} key\n         * @param {(string | number | boolean | null)} [value]\n         * @returns {Aborter}\n         * @memberof Aborter\n         */\n        Aborter.prototype.withValue = function (key, value) {\n            var childCancelContext = new Aborter(this, 0, key, value);\n            this.children.push(childCancelContext);\n            return childCancelContext;\n        };\n        /**\n         * Find out latest value with corresponding key in the chain of\n         * [current node] -> [parent node] -> [grand parent node] -> ... -> [root node].\n         *\n         * If key is not found, undefined will be returned.\n         *\n         * @param {string} key\n         * @returns {(string | number | boolean | null | undefined)}\n         * @memberof Aborter\n         */\n        Aborter.prototype.getValue = function (key) {\n            for (var parent_1 = this; parent_1; parent_1 = parent_1.parent) {\n                if (parent_1.key === key) {\n                    return parent_1.value;\n                }\n            }\n            return undefined;\n        };\n        /**\n         * Trigger abort event immediately, the onabort and all abort event listeners will be triggered.\n         * Will try to trigger abort event for all children Aborter nodes.\n         *\n         * - If there is a timeout, the timer will be cancelled.\n         * - If aborted is true, nothing will happen.\n         *\n         * @returns\n         * @memberof Aborter\n         */\n        Aborter.prototype.abort = function () {\n            var _this = this;\n            if (this.aborted) {\n                return;\n            }\n            this.cancelTimer();\n            if (this.onabort) {\n                this.onabort.call(this, { type: \"abort\" });\n            }\n            this.abortEventListeners.forEach(function (listener) {\n                listener.call(_this, { type: \"abort\" });\n            });\n            this.children.forEach(function (child) { return child.cancelByParent(); });\n            this._aborted = true;\n        };\n        // public dispose() {\n        //   if (this.disposed || this.aborted) {\n        //     return;\n        //   }\n        //   this.cancelTimer();\n        //   // (parent)A <- B <- C(child), if B disposes, when A abort, C will not abort\n        //   if (this.parent) {\n        //     const index = this.parent.children.indexOf(this);\n        //     if (index > -1) {\n        //       this.parent.children.splice(index, 1);\n        //     }\n        //   }\n        //   this.disposed = true;\n        // }\n        /**\n         * Added new \"abort\" event listener, only support \"abort\" event.\n         *\n         * @param {\"abort\"} _type Only support \"abort\" event\n         * @param {(this: AbortSignalLike, ev: any) => any} listener\n         * @memberof Aborter\n         */\n        Aborter.prototype.addEventListener = function (\n        // tslint:disable-next-line:variable-name\n        _type, listener) {\n            this.abortEventListeners.push(listener);\n        };\n        /**\n         * Remove \"abort\" event listener, only support \"abort\" event.\n         *\n         * @param {\"abort\"} _type Only support \"abort\" event\n         * @param {(this: AbortSignalLike, ev: any) => any} listener\n         * @memberof Aborter\n         */\n        Aborter.prototype.removeEventListener = function (\n        // tslint:disable-next-line:variable-name\n        _type, listener) {\n            var index = this.abortEventListeners.indexOf(listener);\n            if (index > -1) {\n                this.abortEventListeners.splice(index, 1);\n            }\n        };\n        Aborter.prototype.dispatchEvent = function () {\n            throw new Error(\"Method not implemented.\");\n        };\n        Aborter.prototype.cancelByParent = function () {\n            // if (!this.disposed) {\n            this.abort();\n            // }\n        };\n        Aborter.prototype.cancelTimer = function () {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        };\n        return Aborter;\n    }());\n\n    // This file is used as a shim of \"BlobDownloadResponse\" for some browser bundlers\n    // when trying to bundle \"BlobDownloadResponse\"\n    // \"BlobDownloadResponse\" class is only available in Node.js runtime\n    var BlobDownloadResponse = 1;\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n    var KeyInfo = {\n        serializedName: \"KeyInfo\",\n        type: {\n            name: \"Composite\",\n            className: \"KeyInfo\",\n            modelProperties: {\n                start: {\n                    xmlName: \"Start\",\n                    required: true,\n                    serializedName: \"Start\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                expiry: {\n                    xmlName: \"Expiry\",\n                    required: true,\n                    serializedName: \"Expiry\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var UserDelegationKey = {\n        serializedName: \"UserDelegationKey\",\n        type: {\n            name: \"Composite\",\n            className: \"UserDelegationKey\",\n            modelProperties: {\n                signedOid: {\n                    xmlName: \"SignedOid\",\n                    required: true,\n                    serializedName: \"SignedOid\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                signedTid: {\n                    xmlName: \"SignedTid\",\n                    required: true,\n                    serializedName: \"SignedTid\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                signedStart: {\n                    xmlName: \"SignedStart\",\n                    required: true,\n                    serializedName: \"SignedStart\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                signedExpiry: {\n                    xmlName: \"SignedExpiry\",\n                    required: true,\n                    serializedName: \"SignedExpiry\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                signedService: {\n                    xmlName: \"SignedService\",\n                    required: true,\n                    serializedName: \"SignedService\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                signedVersion: {\n                    xmlName: \"SignedVersion\",\n                    required: true,\n                    serializedName: \"SignedVersion\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                value: {\n                    xmlName: \"Value\",\n                    required: true,\n                    serializedName: \"Value\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var StorageError = {\n        serializedName: \"StorageError\",\n        type: {\n            name: \"Composite\",\n            className: \"StorageError\",\n            modelProperties: {\n                message: {\n                    xmlName: \"Message\",\n                    serializedName: \"Message\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var DataLakeStorageErrorError = {\n        serializedName: \"DataLakeStorageError_error\",\n        type: {\n            name: \"Composite\",\n            className: \"DataLakeStorageErrorError\",\n            modelProperties: {\n                code: {\n                    xmlName: \"Code\",\n                    serializedName: \"Code\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                message: {\n                    xmlName: \"Message\",\n                    serializedName: \"Message\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var DataLakeStorageError = {\n        serializedName: \"DataLakeStorageError\",\n        type: {\n            name: \"Composite\",\n            className: \"DataLakeStorageError\",\n            modelProperties: {\n                error: {\n                    xmlName: \"error\",\n                    serializedName: \"error\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"DataLakeStorageErrorError\"\n                    }\n                }\n            }\n        }\n    };\n    var AccessPolicy = {\n        serializedName: \"AccessPolicy\",\n        type: {\n            name: \"Composite\",\n            className: \"AccessPolicy\",\n            modelProperties: {\n                start: {\n                    xmlName: \"Start\",\n                    required: true,\n                    serializedName: \"Start\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                expiry: {\n                    xmlName: \"Expiry\",\n                    required: true,\n                    serializedName: \"Expiry\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                permission: {\n                    xmlName: \"Permission\",\n                    required: true,\n                    serializedName: \"Permission\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobProperties = {\n        xmlName: \"Properties\",\n        serializedName: \"BlobProperties\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobProperties\",\n            modelProperties: {\n                creationTime: {\n                    xmlName: \"Creation-Time\",\n                    serializedName: \"Creation-Time\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                lastModified: {\n                    xmlName: \"Last-Modified\",\n                    required: true,\n                    serializedName: \"Last-Modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                etag: {\n                    xmlName: \"Etag\",\n                    required: true,\n                    serializedName: \"Etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentLength: {\n                    xmlName: \"Content-Length\",\n                    serializedName: \"Content-Length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                contentType: {\n                    xmlName: \"Content-Type\",\n                    serializedName: \"Content-Type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentEncoding: {\n                    xmlName: \"Content-Encoding\",\n                    serializedName: \"Content-Encoding\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentLanguage: {\n                    xmlName: \"Content-Language\",\n                    serializedName: \"Content-Language\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentMD5: {\n                    xmlName: \"Content-MD5\",\n                    serializedName: \"Content-MD5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                contentDisposition: {\n                    xmlName: \"Content-Disposition\",\n                    serializedName: \"Content-Disposition\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                cacheControl: {\n                    xmlName: \"Cache-Control\",\n                    serializedName: \"Cache-Control\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobSequenceNumber: {\n                    xmlName: \"x-ms-blob-sequence-number\",\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                blobType: {\n                    xmlName: \"BlobType\",\n                    serializedName: \"BlobType\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"BlockBlob\",\n                            \"PageBlob\",\n                            \"AppendBlob\"\n                        ]\n                    }\n                },\n                leaseStatus: {\n                    xmlName: \"LeaseStatus\",\n                    serializedName: \"LeaseStatus\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"locked\",\n                            \"unlocked\"\n                        ]\n                    }\n                },\n                leaseState: {\n                    xmlName: \"LeaseState\",\n                    serializedName: \"LeaseState\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"available\",\n                            \"leased\",\n                            \"expired\",\n                            \"breaking\",\n                            \"broken\"\n                        ]\n                    }\n                },\n                leaseDuration: {\n                    xmlName: \"LeaseDuration\",\n                    serializedName: \"LeaseDuration\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"infinite\",\n                            \"fixed\"\n                        ]\n                    }\n                },\n                copyId: {\n                    xmlName: \"CopyId\",\n                    serializedName: \"CopyId\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyStatus: {\n                    xmlName: \"CopyStatus\",\n                    serializedName: \"CopyStatus\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"pending\",\n                            \"success\",\n                            \"aborted\",\n                            \"failed\"\n                        ]\n                    }\n                },\n                copySource: {\n                    xmlName: \"CopySource\",\n                    serializedName: \"CopySource\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyProgress: {\n                    xmlName: \"CopyProgress\",\n                    serializedName: \"CopyProgress\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyCompletionTime: {\n                    xmlName: \"CopyCompletionTime\",\n                    serializedName: \"CopyCompletionTime\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                copyStatusDescription: {\n                    xmlName: \"CopyStatusDescription\",\n                    serializedName: \"CopyStatusDescription\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                serverEncrypted: {\n                    xmlName: \"ServerEncrypted\",\n                    serializedName: \"ServerEncrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                incrementalCopy: {\n                    xmlName: \"IncrementalCopy\",\n                    serializedName: \"IncrementalCopy\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                destinationSnapshot: {\n                    xmlName: \"DestinationSnapshot\",\n                    serializedName: \"DestinationSnapshot\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                deletedTime: {\n                    xmlName: \"DeletedTime\",\n                    serializedName: \"DeletedTime\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                remainingRetentionDays: {\n                    xmlName: \"RemainingRetentionDays\",\n                    serializedName: \"RemainingRetentionDays\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                accessTier: {\n                    xmlName: \"AccessTier\",\n                    serializedName: \"AccessTier\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                accessTierInferred: {\n                    xmlName: \"AccessTierInferred\",\n                    serializedName: \"AccessTierInferred\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                archiveStatus: {\n                    xmlName: \"ArchiveStatus\",\n                    serializedName: \"ArchiveStatus\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                customerProvidedKeySha256: {\n                    xmlName: \"CustomerProvidedKeySha256\",\n                    serializedName: \"CustomerProvidedKeySha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                accessTierChangeTime: {\n                    xmlName: \"AccessTierChangeTime\",\n                    serializedName: \"AccessTierChangeTime\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobMetadata = {\n        xmlName: \"Metadata\",\n        serializedName: \"BlobMetadata\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobMetadata\",\n            modelProperties: {\n                encrypted: {\n                    xmlIsAttribute: true,\n                    xmlName: \"Encrypted\",\n                    serializedName: \"Encrypted\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            },\n            additionalProperties: {\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    };\n    var BlobItem = {\n        xmlName: \"Blob\",\n        serializedName: \"BlobItem\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobItem\",\n            modelProperties: {\n                name: {\n                    xmlName: \"Name\",\n                    required: true,\n                    serializedName: \"Name\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                deleted: {\n                    xmlName: \"Deleted\",\n                    required: true,\n                    serializedName: \"Deleted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                snapshot: {\n                    xmlName: \"Snapshot\",\n                    required: true,\n                    serializedName: \"Snapshot\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                properties: {\n                    xmlName: \"Properties\",\n                    required: true,\n                    serializedName: \"Properties\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"BlobProperties\"\n                    }\n                },\n                metadata: {\n                    xmlName: \"Metadata\",\n                    serializedName: \"Metadata\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"BlobMetadata\",\n                        additionalProperties: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var BlobFlatListSegment = {\n        xmlName: \"Blobs\",\n        serializedName: \"BlobFlatListSegment\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobFlatListSegment\",\n            modelProperties: {\n                blobItems: {\n                    xmlName: \"BlobItems\",\n                    xmlElementName: \"Blob\",\n                    required: true,\n                    serializedName: \"BlobItems\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"BlobItem\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var ListBlobsFlatSegmentResponse = {\n        xmlName: \"EnumerationResults\",\n        serializedName: \"ListBlobsFlatSegmentResponse\",\n        type: {\n            name: \"Composite\",\n            className: \"ListBlobsFlatSegmentResponse\",\n            modelProperties: {\n                serviceEndpoint: {\n                    xmlIsAttribute: true,\n                    xmlName: \"ServiceEndpoint\",\n                    required: true,\n                    serializedName: \"ServiceEndpoint\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                containerName: {\n                    xmlIsAttribute: true,\n                    xmlName: \"ContainerName\",\n                    required: true,\n                    serializedName: \"ContainerName\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                prefix: {\n                    xmlName: \"Prefix\",\n                    serializedName: \"Prefix\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                marker: {\n                    xmlName: \"Marker\",\n                    serializedName: \"Marker\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                maxResults: {\n                    xmlName: \"MaxResults\",\n                    serializedName: \"MaxResults\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                delimiter: {\n                    xmlName: \"Delimiter\",\n                    serializedName: \"Delimiter\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                segment: {\n                    xmlName: \"Blobs\",\n                    required: true,\n                    serializedName: \"Segment\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"BlobFlatListSegment\"\n                    }\n                },\n                nextMarker: {\n                    xmlName: \"NextMarker\",\n                    serializedName: \"NextMarker\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobPrefix = {\n        serializedName: \"BlobPrefix\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobPrefix\",\n            modelProperties: {\n                name: {\n                    xmlName: \"Name\",\n                    required: true,\n                    serializedName: \"Name\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobHierarchyListSegment = {\n        xmlName: \"Blobs\",\n        serializedName: \"BlobHierarchyListSegment\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobHierarchyListSegment\",\n            modelProperties: {\n                blobPrefixes: {\n                    xmlName: \"BlobPrefixes\",\n                    xmlElementName: \"BlobPrefix\",\n                    serializedName: \"BlobPrefixes\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"BlobPrefix\"\n                            }\n                        }\n                    }\n                },\n                blobItems: {\n                    xmlName: \"BlobItems\",\n                    xmlElementName: \"Blob\",\n                    required: true,\n                    serializedName: \"BlobItems\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"BlobItem\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var ListBlobsHierarchySegmentResponse = {\n        xmlName: \"EnumerationResults\",\n        serializedName: \"ListBlobsHierarchySegmentResponse\",\n        type: {\n            name: \"Composite\",\n            className: \"ListBlobsHierarchySegmentResponse\",\n            modelProperties: {\n                serviceEndpoint: {\n                    xmlIsAttribute: true,\n                    xmlName: \"ServiceEndpoint\",\n                    required: true,\n                    serializedName: \"ServiceEndpoint\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                containerName: {\n                    xmlIsAttribute: true,\n                    xmlName: \"ContainerName\",\n                    required: true,\n                    serializedName: \"ContainerName\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                prefix: {\n                    xmlName: \"Prefix\",\n                    serializedName: \"Prefix\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                marker: {\n                    xmlName: \"Marker\",\n                    serializedName: \"Marker\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                maxResults: {\n                    xmlName: \"MaxResults\",\n                    serializedName: \"MaxResults\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                delimiter: {\n                    xmlName: \"Delimiter\",\n                    serializedName: \"Delimiter\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                segment: {\n                    xmlName: \"Blobs\",\n                    required: true,\n                    serializedName: \"Segment\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"BlobHierarchyListSegment\"\n                    }\n                },\n                nextMarker: {\n                    xmlName: \"NextMarker\",\n                    serializedName: \"NextMarker\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var Block = {\n        serializedName: \"Block\",\n        type: {\n            name: \"Composite\",\n            className: \"Block\",\n            modelProperties: {\n                name: {\n                    xmlName: \"Name\",\n                    required: true,\n                    serializedName: \"Name\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                size: {\n                    xmlName: \"Size\",\n                    required: true,\n                    serializedName: \"Size\",\n                    type: {\n                        name: \"Number\"\n                    }\n                }\n            }\n        }\n    };\n    var BlockList = {\n        serializedName: \"BlockList\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockList\",\n            modelProperties: {\n                committedBlocks: {\n                    xmlIsWrapped: true,\n                    xmlName: \"CommittedBlocks\",\n                    xmlElementName: \"Block\",\n                    serializedName: \"CommittedBlocks\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"Block\"\n                            }\n                        }\n                    }\n                },\n                uncommittedBlocks: {\n                    xmlIsWrapped: true,\n                    xmlName: \"UncommittedBlocks\",\n                    xmlElementName: \"Block\",\n                    serializedName: \"UncommittedBlocks\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"Block\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var BlockLookupList = {\n        xmlName: \"BlockList\",\n        serializedName: \"BlockLookupList\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockLookupList\",\n            modelProperties: {\n                committed: {\n                    xmlName: \"Committed\",\n                    xmlElementName: \"Committed\",\n                    serializedName: \"Committed\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    }\n                },\n                uncommitted: {\n                    xmlName: \"Uncommitted\",\n                    xmlElementName: \"Uncommitted\",\n                    serializedName: \"Uncommitted\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    }\n                },\n                latest: {\n                    xmlName: \"Latest\",\n                    xmlElementName: \"Latest\",\n                    serializedName: \"Latest\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var ContainerProperties = {\n        serializedName: \"ContainerProperties\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerProperties\",\n            modelProperties: {\n                lastModified: {\n                    xmlName: \"Last-Modified\",\n                    required: true,\n                    serializedName: \"Last-Modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                etag: {\n                    xmlName: \"Etag\",\n                    required: true,\n                    serializedName: \"Etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                leaseStatus: {\n                    xmlName: \"LeaseStatus\",\n                    serializedName: \"LeaseStatus\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"locked\",\n                            \"unlocked\"\n                        ]\n                    }\n                },\n                leaseState: {\n                    xmlName: \"LeaseState\",\n                    serializedName: \"LeaseState\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"available\",\n                            \"leased\",\n                            \"expired\",\n                            \"breaking\",\n                            \"broken\"\n                        ]\n                    }\n                },\n                leaseDuration: {\n                    xmlName: \"LeaseDuration\",\n                    serializedName: \"LeaseDuration\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"infinite\",\n                            \"fixed\"\n                        ]\n                    }\n                },\n                publicAccess: {\n                    xmlName: \"PublicAccess\",\n                    serializedName: \"PublicAccess\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                hasImmutabilityPolicy: {\n                    xmlName: \"HasImmutabilityPolicy\",\n                    serializedName: \"HasImmutabilityPolicy\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                hasLegalHold: {\n                    xmlName: \"HasLegalHold\",\n                    serializedName: \"HasLegalHold\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerItem = {\n        xmlName: \"Container\",\n        serializedName: \"ContainerItem\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerItem\",\n            modelProperties: {\n                name: {\n                    xmlName: \"Name\",\n                    required: true,\n                    serializedName: \"Name\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                properties: {\n                    xmlName: \"Properties\",\n                    required: true,\n                    serializedName: \"Properties\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"ContainerProperties\"\n                    }\n                },\n                metadata: {\n                    xmlName: \"Metadata\",\n                    serializedName: \"Metadata\",\n                    type: {\n                        name: \"Dictionary\",\n                        value: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var ListContainersSegmentResponse = {\n        xmlName: \"EnumerationResults\",\n        serializedName: \"ListContainersSegmentResponse\",\n        type: {\n            name: \"Composite\",\n            className: \"ListContainersSegmentResponse\",\n            modelProperties: {\n                serviceEndpoint: {\n                    xmlIsAttribute: true,\n                    xmlName: \"ServiceEndpoint\",\n                    required: true,\n                    serializedName: \"ServiceEndpoint\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                prefix: {\n                    xmlName: \"Prefix\",\n                    serializedName: \"Prefix\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                marker: {\n                    xmlName: \"Marker\",\n                    serializedName: \"Marker\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                maxResults: {\n                    xmlName: \"MaxResults\",\n                    serializedName: \"MaxResults\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                containerItems: {\n                    xmlIsWrapped: true,\n                    xmlName: \"Containers\",\n                    xmlElementName: \"Container\",\n                    required: true,\n                    serializedName: \"ContainerItems\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"ContainerItem\"\n                            }\n                        }\n                    }\n                },\n                nextMarker: {\n                    xmlName: \"NextMarker\",\n                    serializedName: \"NextMarker\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var CorsRule = {\n        serializedName: \"CorsRule\",\n        type: {\n            name: \"Composite\",\n            className: \"CorsRule\",\n            modelProperties: {\n                allowedOrigins: {\n                    xmlName: \"AllowedOrigins\",\n                    required: true,\n                    serializedName: \"AllowedOrigins\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                allowedMethods: {\n                    xmlName: \"AllowedMethods\",\n                    required: true,\n                    serializedName: \"AllowedMethods\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                allowedHeaders: {\n                    xmlName: \"AllowedHeaders\",\n                    required: true,\n                    serializedName: \"AllowedHeaders\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                exposedHeaders: {\n                    xmlName: \"ExposedHeaders\",\n                    required: true,\n                    serializedName: \"ExposedHeaders\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                maxAgeInSeconds: {\n                    xmlName: \"MaxAgeInSeconds\",\n                    required: true,\n                    serializedName: \"MaxAgeInSeconds\",\n                    constraints: {\n                        InclusiveMinimum: 0\n                    },\n                    type: {\n                        name: \"Number\"\n                    }\n                }\n            }\n        }\n    };\n    var GeoReplication = {\n        serializedName: \"GeoReplication\",\n        type: {\n            name: \"Composite\",\n            className: \"GeoReplication\",\n            modelProperties: {\n                status: {\n                    xmlName: \"Status\",\n                    required: true,\n                    serializedName: \"Status\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastSyncTime: {\n                    xmlName: \"LastSyncTime\",\n                    required: true,\n                    serializedName: \"LastSyncTime\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                }\n            }\n        }\n    };\n    var RetentionPolicy = {\n        serializedName: \"RetentionPolicy\",\n        type: {\n            name: \"Composite\",\n            className: \"RetentionPolicy\",\n            modelProperties: {\n                enabled: {\n                    xmlName: \"Enabled\",\n                    required: true,\n                    serializedName: \"Enabled\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                days: {\n                    xmlName: \"Days\",\n                    serializedName: \"Days\",\n                    constraints: {\n                        InclusiveMinimum: 1\n                    },\n                    type: {\n                        name: \"Number\"\n                    }\n                }\n            }\n        }\n    };\n    var Logging = {\n        serializedName: \"Logging\",\n        type: {\n            name: \"Composite\",\n            className: \"Logging\",\n            modelProperties: {\n                version: {\n                    xmlName: \"Version\",\n                    required: true,\n                    serializedName: \"Version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                deleteProperty: {\n                    xmlName: \"Delete\",\n                    required: true,\n                    serializedName: \"Delete\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                read: {\n                    xmlName: \"Read\",\n                    required: true,\n                    serializedName: \"Read\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                write: {\n                    xmlName: \"Write\",\n                    required: true,\n                    serializedName: \"Write\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                retentionPolicy: {\n                    xmlName: \"RetentionPolicy\",\n                    required: true,\n                    serializedName: \"RetentionPolicy\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"RetentionPolicy\"\n                    }\n                }\n            }\n        }\n    };\n    var Metrics = {\n        serializedName: \"Metrics\",\n        type: {\n            name: \"Composite\",\n            className: \"Metrics\",\n            modelProperties: {\n                version: {\n                    xmlName: \"Version\",\n                    serializedName: \"Version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                enabled: {\n                    xmlName: \"Enabled\",\n                    required: true,\n                    serializedName: \"Enabled\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                includeAPIs: {\n                    xmlName: \"IncludeAPIs\",\n                    serializedName: \"IncludeAPIs\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                retentionPolicy: {\n                    xmlName: \"RetentionPolicy\",\n                    serializedName: \"RetentionPolicy\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"RetentionPolicy\"\n                    }\n                }\n            }\n        }\n    };\n    var PageRange = {\n        serializedName: \"PageRange\",\n        type: {\n            name: \"Composite\",\n            className: \"PageRange\",\n            modelProperties: {\n                start: {\n                    xmlName: \"Start\",\n                    required: true,\n                    serializedName: \"Start\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                end: {\n                    xmlName: \"End\",\n                    required: true,\n                    serializedName: \"End\",\n                    type: {\n                        name: \"Number\"\n                    }\n                }\n            }\n        }\n    };\n    var ClearRange = {\n        serializedName: \"ClearRange\",\n        type: {\n            name: \"Composite\",\n            className: \"ClearRange\",\n            modelProperties: {\n                start: {\n                    xmlName: \"Start\",\n                    required: true,\n                    serializedName: \"Start\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                end: {\n                    xmlName: \"End\",\n                    required: true,\n                    serializedName: \"End\",\n                    type: {\n                        name: \"Number\"\n                    }\n                }\n            }\n        }\n    };\n    var PageList = {\n        serializedName: \"PageList\",\n        type: {\n            name: \"Composite\",\n            className: \"PageList\",\n            modelProperties: {\n                pageRange: {\n                    xmlName: \"PageRange\",\n                    xmlElementName: \"PageRange\",\n                    serializedName: \"PageRange\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"PageRange\"\n                            }\n                        }\n                    }\n                },\n                clearRange: {\n                    xmlName: \"ClearRange\",\n                    xmlElementName: \"ClearRange\",\n                    serializedName: \"ClearRange\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"ClearRange\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    var SignedIdentifier = {\n        serializedName: \"SignedIdentifier\",\n        type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\",\n            modelProperties: {\n                id: {\n                    xmlName: \"Id\",\n                    required: true,\n                    serializedName: \"Id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                accessPolicy: {\n                    xmlName: \"AccessPolicy\",\n                    required: true,\n                    serializedName: \"AccessPolicy\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"AccessPolicy\"\n                    }\n                }\n            }\n        }\n    };\n    var StaticWebsite = {\n        serializedName: \"StaticWebsite\",\n        type: {\n            name: \"Composite\",\n            className: \"StaticWebsite\",\n            modelProperties: {\n                enabled: {\n                    xmlName: \"Enabled\",\n                    required: true,\n                    serializedName: \"Enabled\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                indexDocument: {\n                    xmlName: \"IndexDocument\",\n                    serializedName: \"IndexDocument\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorDocument404Path: {\n                    xmlName: \"ErrorDocument404Path\",\n                    serializedName: \"ErrorDocument404Path\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var StorageServiceProperties = {\n        serializedName: \"StorageServiceProperties\",\n        type: {\n            name: \"Composite\",\n            className: \"StorageServiceProperties\",\n            modelProperties: {\n                logging: {\n                    xmlName: \"Logging\",\n                    serializedName: \"Logging\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"Logging\"\n                    }\n                },\n                hourMetrics: {\n                    xmlName: \"HourMetrics\",\n                    serializedName: \"HourMetrics\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"Metrics\"\n                    }\n                },\n                minuteMetrics: {\n                    xmlName: \"MinuteMetrics\",\n                    serializedName: \"MinuteMetrics\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"Metrics\"\n                    }\n                },\n                cors: {\n                    xmlIsWrapped: true,\n                    xmlName: \"Cors\",\n                    xmlElementName: \"CorsRule\",\n                    serializedName: \"Cors\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"CorsRule\"\n                            }\n                        }\n                    }\n                },\n                defaultServiceVersion: {\n                    xmlName: \"DefaultServiceVersion\",\n                    serializedName: \"DefaultServiceVersion\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                deleteRetentionPolicy: {\n                    xmlName: \"DeleteRetentionPolicy\",\n                    serializedName: \"DeleteRetentionPolicy\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"RetentionPolicy\"\n                    }\n                },\n                staticWebsite: {\n                    xmlName: \"StaticWebsite\",\n                    serializedName: \"StaticWebsite\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"StaticWebsite\"\n                    }\n                }\n            }\n        }\n    };\n    var StorageServiceStats = {\n        serializedName: \"StorageServiceStats\",\n        type: {\n            name: \"Composite\",\n            className: \"StorageServiceStats\",\n            modelProperties: {\n                geoReplication: {\n                    xmlName: \"GeoReplication\",\n                    serializedName: \"GeoReplication\",\n                    type: {\n                        name: \"Composite\",\n                        className: \"GeoReplication\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceSetPropertiesHeaders = {\n        serializedName: \"service-setproperties-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceSetPropertiesHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceGetPropertiesHeaders = {\n        serializedName: \"service-getproperties-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceGetPropertiesHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceGetStatisticsHeaders = {\n        serializedName: \"service-getstatistics-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceGetStatisticsHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceListContainersSegmentHeaders = {\n        serializedName: \"service-listcontainerssegment-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceListContainersSegmentHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceGetUserDelegationKeyHeaders = {\n        serializedName: \"service-getuserdelegationkey-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceGetUserDelegationKeyHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceGetAccountInfoHeaders = {\n        serializedName: \"service-getaccountinfo-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceGetAccountInfoHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                skuName: {\n                    serializedName: \"x-ms-sku-name\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"Standard_LRS\",\n                            \"Standard_GRS\",\n                            \"Standard_RAGRS\",\n                            \"Standard_ZRS\",\n                            \"Premium_LRS\"\n                        ]\n                    }\n                },\n                accountKind: {\n                    serializedName: \"x-ms-account-kind\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"Storage\",\n                            \"BlobStorage\",\n                            \"StorageV2\"\n                        ]\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ServiceSubmitBatchHeaders = {\n        serializedName: \"service-submitbatch-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ServiceSubmitBatchHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentType: {\n                    serializedName: \"content-type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerCreateHeaders = {\n        serializedName: \"container-create-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerCreateHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerGetPropertiesHeaders = {\n        serializedName: \"container-getproperties-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerGetPropertiesHeaders\",\n            modelProperties: {\n                metadata: {\n                    serializedName: \"x-ms-meta\",\n                    type: {\n                        name: \"Dictionary\",\n                        value: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    },\n                    headerCollectionPrefix: \"x-ms-meta-\"\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseDuration: {\n                    serializedName: \"x-ms-lease-duration\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"infinite\",\n                            \"fixed\"\n                        ]\n                    }\n                },\n                leaseState: {\n                    serializedName: \"x-ms-lease-state\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"available\",\n                            \"leased\",\n                            \"expired\",\n                            \"breaking\",\n                            \"broken\"\n                        ]\n                    }\n                },\n                leaseStatus: {\n                    serializedName: \"x-ms-lease-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"locked\",\n                            \"unlocked\"\n                        ]\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobPublicAccess: {\n                    serializedName: \"x-ms-blob-public-access\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                hasImmutabilityPolicy: {\n                    serializedName: \"x-ms-has-immutability-policy\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                hasLegalHold: {\n                    serializedName: \"x-ms-has-legal-hold\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerDeleteHeaders = {\n        serializedName: \"container-delete-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerDeleteHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerSetMetadataHeaders = {\n        serializedName: \"container-setmetadata-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerSetMetadataHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerGetAccessPolicyHeaders = {\n        serializedName: \"container-getaccesspolicy-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerGetAccessPolicyHeaders\",\n            modelProperties: {\n                blobPublicAccess: {\n                    serializedName: \"x-ms-blob-public-access\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerSetAccessPolicyHeaders = {\n        serializedName: \"container-setaccesspolicy-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerSetAccessPolicyHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerAcquireLeaseHeaders = {\n        serializedName: \"container-acquirelease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerAcquireLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseId: {\n                    serializedName: \"x-ms-lease-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerReleaseLeaseHeaders = {\n        serializedName: \"container-releaselease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerReleaseLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerRenewLeaseHeaders = {\n        serializedName: \"container-renewlease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerRenewLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseId: {\n                    serializedName: \"x-ms-lease-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerBreakLeaseHeaders = {\n        serializedName: \"container-breaklease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerBreakLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseTime: {\n                    serializedName: \"x-ms-lease-time\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerChangeLeaseHeaders = {\n        serializedName: \"container-changelease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerChangeLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseId: {\n                    serializedName: \"x-ms-lease-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerListBlobFlatSegmentHeaders = {\n        serializedName: \"container-listblobflatsegment-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerListBlobFlatSegmentHeaders\",\n            modelProperties: {\n                contentType: {\n                    serializedName: \"content-type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerListBlobHierarchySegmentHeaders = {\n        serializedName: \"container-listblobhierarchysegment-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerListBlobHierarchySegmentHeaders\",\n            modelProperties: {\n                contentType: {\n                    serializedName: \"content-type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var ContainerGetAccountInfoHeaders = {\n        serializedName: \"container-getaccountinfo-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"ContainerGetAccountInfoHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                skuName: {\n                    serializedName: \"x-ms-sku-name\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"Standard_LRS\",\n                            \"Standard_GRS\",\n                            \"Standard_RAGRS\",\n                            \"Standard_ZRS\",\n                            \"Premium_LRS\"\n                        ]\n                    }\n                },\n                accountKind: {\n                    serializedName: \"x-ms-account-kind\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"Storage\",\n                            \"BlobStorage\",\n                            \"StorageV2\"\n                        ]\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobDownloadHeaders = {\n        serializedName: \"blob-download-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobDownloadHeaders\",\n            modelProperties: {\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                metadata: {\n                    serializedName: \"x-ms-meta\",\n                    type: {\n                        name: \"Dictionary\",\n                        value: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    },\n                    headerCollectionPrefix: \"x-ms-meta-\"\n                },\n                contentLength: {\n                    serializedName: \"content-length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                contentType: {\n                    serializedName: \"content-type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentRange: {\n                    serializedName: \"content-range\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                contentEncoding: {\n                    serializedName: \"content-encoding\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                cacheControl: {\n                    serializedName: \"cache-control\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentDisposition: {\n                    serializedName: \"content-disposition\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentLanguage: {\n                    serializedName: \"content-language\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                blobType: {\n                    serializedName: \"x-ms-blob-type\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"BlockBlob\",\n                            \"PageBlob\",\n                            \"AppendBlob\"\n                        ]\n                    }\n                },\n                copyCompletionTime: {\n                    serializedName: \"x-ms-copy-completion-time\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                copyStatusDescription: {\n                    serializedName: \"x-ms-copy-status-description\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyId: {\n                    serializedName: \"x-ms-copy-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyProgress: {\n                    serializedName: \"x-ms-copy-progress\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copySource: {\n                    serializedName: \"x-ms-copy-source\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyStatus: {\n                    serializedName: \"x-ms-copy-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"pending\",\n                            \"success\",\n                            \"aborted\",\n                            \"failed\"\n                        ]\n                    }\n                },\n                leaseDuration: {\n                    serializedName: \"x-ms-lease-duration\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"infinite\",\n                            \"fixed\"\n                        ]\n                    }\n                },\n                leaseState: {\n                    serializedName: \"x-ms-lease-state\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"available\",\n                            \"leased\",\n                            \"expired\",\n                            \"breaking\",\n                            \"broken\"\n                        ]\n                    }\n                },\n                leaseStatus: {\n                    serializedName: \"x-ms-lease-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"locked\",\n                            \"unlocked\"\n                        ]\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                acceptRanges: {\n                    serializedName: \"accept-ranges\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobCommittedBlockCount: {\n                    serializedName: \"x-ms-blob-committed-block-count\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobContentMD5: {\n                    serializedName: \"x-ms-blob-content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                contentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobGetPropertiesHeaders = {\n        serializedName: \"blob-getproperties-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobGetPropertiesHeaders\",\n            modelProperties: {\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                creationTime: {\n                    serializedName: \"x-ms-creation-time\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                metadata: {\n                    serializedName: \"x-ms-meta\",\n                    type: {\n                        name: \"Dictionary\",\n                        value: {\n                            type: {\n                                name: \"String\"\n                            }\n                        }\n                    },\n                    headerCollectionPrefix: \"x-ms-meta-\"\n                },\n                blobType: {\n                    serializedName: \"x-ms-blob-type\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"BlockBlob\",\n                            \"PageBlob\",\n                            \"AppendBlob\"\n                        ]\n                    }\n                },\n                copyCompletionTime: {\n                    serializedName: \"x-ms-copy-completion-time\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                copyStatusDescription: {\n                    serializedName: \"x-ms-copy-status-description\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyId: {\n                    serializedName: \"x-ms-copy-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyProgress: {\n                    serializedName: \"x-ms-copy-progress\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copySource: {\n                    serializedName: \"x-ms-copy-source\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyStatus: {\n                    serializedName: \"x-ms-copy-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"pending\",\n                            \"success\",\n                            \"aborted\",\n                            \"failed\"\n                        ]\n                    }\n                },\n                isIncrementalCopy: {\n                    serializedName: \"x-ms-incremental-copy\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                destinationSnapshot: {\n                    serializedName: \"x-ms-copy-destination-snapshot\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                leaseDuration: {\n                    serializedName: \"x-ms-lease-duration\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"infinite\",\n                            \"fixed\"\n                        ]\n                    }\n                },\n                leaseState: {\n                    serializedName: \"x-ms-lease-state\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"available\",\n                            \"leased\",\n                            \"expired\",\n                            \"breaking\",\n                            \"broken\"\n                        ]\n                    }\n                },\n                leaseStatus: {\n                    serializedName: \"x-ms-lease-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"locked\",\n                            \"unlocked\"\n                        ]\n                    }\n                },\n                contentLength: {\n                    serializedName: \"content-length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                contentType: {\n                    serializedName: \"content-type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                contentEncoding: {\n                    serializedName: \"content-encoding\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentDisposition: {\n                    serializedName: \"content-disposition\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentLanguage: {\n                    serializedName: \"content-language\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                cacheControl: {\n                    serializedName: \"cache-control\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                acceptRanges: {\n                    serializedName: \"accept-ranges\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobCommittedBlockCount: {\n                    serializedName: \"x-ms-blob-committed-block-count\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                accessTier: {\n                    serializedName: \"x-ms-access-tier\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                accessTierInferred: {\n                    serializedName: \"x-ms-access-tier-inferred\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                archiveStatus: {\n                    serializedName: \"x-ms-archive-status\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                accessTierChangeTime: {\n                    serializedName: \"x-ms-access-tier-change-time\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobDeleteHeaders = {\n        serializedName: \"blob-delete-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobDeleteHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobSetAccessControlHeaders = {\n        serializedName: \"blob-setaccesscontrol-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobSetAccessControlHeaders\",\n            modelProperties: {\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobGetAccessControlHeaders = {\n        serializedName: \"blob-getaccesscontrol-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobGetAccessControlHeaders\",\n            modelProperties: {\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                xMsOwner: {\n                    serializedName: \"x-ms-owner\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                xMsGroup: {\n                    serializedName: \"x-ms-group\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                xMsPermissions: {\n                    serializedName: \"x-ms-permissions\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                xMsAcl: {\n                    serializedName: \"x-ms-acl\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobRenameHeaders = {\n        serializedName: \"blob-rename-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobRenameHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentLength: {\n                    serializedName: \"content-length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobCreateHeaders = {\n        serializedName: \"pageblob-create-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobCreateHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var AppendBlobCreateHeaders = {\n        serializedName: \"appendblob-create-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"AppendBlobCreateHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlockBlobUploadHeaders = {\n        serializedName: \"blockblob-upload-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockBlobUploadHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobUndeleteHeaders = {\n        serializedName: \"blob-undelete-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobUndeleteHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobSetHTTPHeadersHeaders = {\n        serializedName: \"blob-sethttpheaders-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobSetHTTPHeadersHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobSetMetadataHeaders = {\n        serializedName: \"blob-setmetadata-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobSetMetadataHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobAcquireLeaseHeaders = {\n        serializedName: \"blob-acquirelease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobAcquireLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseId: {\n                    serializedName: \"x-ms-lease-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobReleaseLeaseHeaders = {\n        serializedName: \"blob-releaselease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobReleaseLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobRenewLeaseHeaders = {\n        serializedName: \"blob-renewlease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobRenewLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseId: {\n                    serializedName: \"x-ms-lease-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobChangeLeaseHeaders = {\n        serializedName: \"blob-changelease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobChangeLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                leaseId: {\n                    serializedName: \"x-ms-lease-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobBreakLeaseHeaders = {\n        serializedName: \"blob-breaklease-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobBreakLeaseHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                leaseTime: {\n                    serializedName: \"x-ms-lease-time\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobCreateSnapshotHeaders = {\n        serializedName: \"blob-createsnapshot-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobCreateSnapshotHeaders\",\n            modelProperties: {\n                snapshot: {\n                    serializedName: \"x-ms-snapshot\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobStartCopyFromURLHeaders = {\n        serializedName: \"blob-startcopyfromurl-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobStartCopyFromURLHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                copyId: {\n                    serializedName: \"x-ms-copy-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyStatus: {\n                    serializedName: \"x-ms-copy-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"pending\",\n                            \"success\",\n                            \"aborted\",\n                            \"failed\"\n                        ]\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobCopyFromURLHeaders = {\n        serializedName: \"blob-copyfromurl-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobCopyFromURLHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                copyId: {\n                    serializedName: \"x-ms-copy-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyStatus: {\n                    serializedName: \"x-ms-copy-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"success\"\n                        ]\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobAbortCopyFromURLHeaders = {\n        serializedName: \"blob-abortcopyfromurl-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobAbortCopyFromURLHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobSetTierHeaders = {\n        serializedName: \"blob-settier-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobSetTierHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlobGetAccountInfoHeaders = {\n        serializedName: \"blob-getaccountinfo-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlobGetAccountInfoHeaders\",\n            modelProperties: {\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                skuName: {\n                    serializedName: \"x-ms-sku-name\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"Standard_LRS\",\n                            \"Standard_GRS\",\n                            \"Standard_RAGRS\",\n                            \"Standard_ZRS\",\n                            \"Premium_LRS\"\n                        ]\n                    }\n                },\n                accountKind: {\n                    serializedName: \"x-ms-account-kind\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"Storage\",\n                            \"BlobStorage\",\n                            \"StorageV2\"\n                        ]\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlockBlobStageBlockHeaders = {\n        serializedName: \"blockblob-stageblock-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockBlobStageBlockHeaders\",\n            modelProperties: {\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlockBlobStageBlockFromURLHeaders = {\n        serializedName: \"blockblob-stageblockfromurl-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockBlobStageBlockFromURLHeaders\",\n            modelProperties: {\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlockBlobCommitBlockListHeaders = {\n        serializedName: \"blockblob-commitblocklist-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockBlobCommitBlockListHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var BlockBlobGetBlockListHeaders = {\n        serializedName: \"blockblob-getblocklist-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"BlockBlobGetBlockListHeaders\",\n            modelProperties: {\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                contentType: {\n                    serializedName: \"content-type\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobContentLength: {\n                    serializedName: \"x-ms-blob-content-length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobUploadPagesHeaders = {\n        serializedName: \"pageblob-uploadpages-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobUploadPagesHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobClearPagesHeaders = {\n        serializedName: \"pageblob-clearpages-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobClearPagesHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobUploadPagesFromURLHeaders = {\n        serializedName: \"pageblob-uploadpagesfromurl-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobUploadPagesFromURLHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobGetPageRangesHeaders = {\n        serializedName: \"pageblob-getpageranges-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobGetPageRangesHeaders\",\n            modelProperties: {\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobContentLength: {\n                    serializedName: \"x-ms-blob-content-length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobGetPageRangesDiffHeaders = {\n        serializedName: \"pageblob-getpagerangesdiff-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobGetPageRangesDiffHeaders\",\n            modelProperties: {\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobContentLength: {\n                    serializedName: \"x-ms-blob-content-length\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobResizeHeaders = {\n        serializedName: \"pageblob-resize-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobResizeHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobUpdateSequenceNumberHeaders = {\n        serializedName: \"pageblob-updatesequencenumber-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobUpdateSequenceNumberHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobSequenceNumber: {\n                    serializedName: \"x-ms-blob-sequence-number\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var PageBlobCopyIncrementalHeaders = {\n        serializedName: \"pageblob-copyincremental-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"PageBlobCopyIncrementalHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                copyId: {\n                    serializedName: \"x-ms-copy-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                copyStatus: {\n                    serializedName: \"x-ms-copy-status\",\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"pending\",\n                            \"success\",\n                            \"aborted\",\n                            \"failed\"\n                        ]\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var AppendBlobAppendBlockHeaders = {\n        serializedName: \"appendblob-appendblock-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"AppendBlobAppendBlockHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                clientRequestId: {\n                    serializedName: \"x-ms-client-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobAppendOffset: {\n                    serializedName: \"x-ms-blob-append-offset\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobCommittedBlockCount: {\n                    serializedName: \"x-ms-blob-committed-block-count\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                isServerEncrypted: {\n                    serializedName: \"x-ms-request-server-encrypted\",\n                    type: {\n                        name: \"Boolean\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n    var AppendBlobAppendBlockFromUrlHeaders = {\n        serializedName: \"appendblob-appendblockfromurl-headers\",\n        type: {\n            name: \"Composite\",\n            className: \"AppendBlobAppendBlockFromUrlHeaders\",\n            modelProperties: {\n                eTag: {\n                    serializedName: \"etag\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                lastModified: {\n                    serializedName: \"last-modified\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                contentMD5: {\n                    serializedName: \"content-md5\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                xMsContentCrc64: {\n                    serializedName: \"x-ms-content-crc64\",\n                    type: {\n                        name: \"ByteArray\"\n                    }\n                },\n                requestId: {\n                    serializedName: \"x-ms-request-id\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                version: {\n                    serializedName: \"x-ms-version\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                date: {\n                    serializedName: \"date\",\n                    type: {\n                        name: \"DateTimeRfc1123\"\n                    }\n                },\n                blobAppendOffset: {\n                    serializedName: \"x-ms-blob-append-offset\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                blobCommittedBlockCount: {\n                    serializedName: \"x-ms-blob-committed-block-count\",\n                    type: {\n                        name: \"Number\"\n                    }\n                },\n                encryptionKeySha256: {\n                    serializedName: \"x-ms-encryption-key-sha256\",\n                    type: {\n                        name: \"String\"\n                    }\n                },\n                errorCode: {\n                    serializedName: \"x-ms-error-code\",\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            }\n        }\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var Mappers = /*#__PURE__*/Object.freeze({\n        ContainerItem: ContainerItem,\n        ContainerProperties: ContainerProperties,\n        CorsRule: CorsRule,\n        GeoReplication: GeoReplication,\n        KeyInfo: KeyInfo,\n        ListContainersSegmentResponse: ListContainersSegmentResponse,\n        Logging: Logging,\n        Metrics: Metrics,\n        RetentionPolicy: RetentionPolicy,\n        ServiceGetAccountInfoHeaders: ServiceGetAccountInfoHeaders,\n        ServiceGetPropertiesHeaders: ServiceGetPropertiesHeaders,\n        ServiceGetStatisticsHeaders: ServiceGetStatisticsHeaders,\n        ServiceGetUserDelegationKeyHeaders: ServiceGetUserDelegationKeyHeaders,\n        ServiceListContainersSegmentHeaders: ServiceListContainersSegmentHeaders,\n        ServiceSetPropertiesHeaders: ServiceSetPropertiesHeaders,\n        ServiceSubmitBatchHeaders: ServiceSubmitBatchHeaders,\n        StaticWebsite: StaticWebsite,\n        StorageError: StorageError,\n        StorageServiceProperties: StorageServiceProperties,\n        StorageServiceStats: StorageServiceStats,\n        UserDelegationKey: UserDelegationKey\n    });\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    var access = {\n        parameterPath: [\n            \"options\",\n            \"access\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-public-access\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action0 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-lease-action\",\n            defaultValue: 'acquire',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action1 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-lease-action\",\n            defaultValue: 'release',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action2 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-lease-action\",\n            defaultValue: 'renew',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action3 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-lease-action\",\n            defaultValue: 'break',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action4 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-lease-action\",\n            defaultValue: 'change',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action5 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"action\",\n            defaultValue: 'setAccessControl',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var action6 = {\n        parameterPath: \"action\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"action\",\n            defaultValue: 'getAccessControl',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var appendPosition = {\n        parameterPath: [\n            \"options\",\n            \"appendPositionAccessConditions\",\n            \"appendPosition\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-condition-appendpos\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var blobCacheControl = {\n        parameterPath: [\n            \"options\",\n            \"blobHTTPHeaders\",\n            \"blobCacheControl\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-cache-control\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobContentDisposition = {\n        parameterPath: [\n            \"options\",\n            \"blobHTTPHeaders\",\n            \"blobContentDisposition\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-content-disposition\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobContentEncoding = {\n        parameterPath: [\n            \"options\",\n            \"blobHTTPHeaders\",\n            \"blobContentEncoding\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-content-encoding\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobContentLanguage = {\n        parameterPath: [\n            \"options\",\n            \"blobHTTPHeaders\",\n            \"blobContentLanguage\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-content-language\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobContentLength = {\n        parameterPath: \"blobContentLength\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-blob-content-length\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var blobContentMD5 = {\n        parameterPath: [\n            \"options\",\n            \"blobHTTPHeaders\",\n            \"blobContentMD5\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-content-md5\",\n            type: {\n                name: \"ByteArray\"\n            }\n        }\n    };\n    var blobContentType = {\n        parameterPath: [\n            \"options\",\n            \"blobHTTPHeaders\",\n            \"blobContentType\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-content-type\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobSequenceNumber = {\n        parameterPath: [\n            \"options\",\n            \"blobSequenceNumber\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-sequence-number\",\n            defaultValue: 0,\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var blobType0 = {\n        parameterPath: \"blobType\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-blob-type\",\n            defaultValue: 'PageBlob',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobType1 = {\n        parameterPath: \"blobType\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-blob-type\",\n            defaultValue: 'AppendBlob',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blobType2 = {\n        parameterPath: \"blobType\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-blob-type\",\n            defaultValue: 'BlockBlob',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var blockId = {\n        parameterPath: \"blockId\",\n        mapper: {\n            required: true,\n            serializedName: \"blockid\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var breakPeriod = {\n        parameterPath: [\n            \"options\",\n            \"breakPeriod\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-lease-break-period\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var cacheControl = {\n        parameterPath: [\n            \"options\",\n            \"directoryHttpHeaders\",\n            \"cacheControl\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-cache-control\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp0 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'properties',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp1 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'stats',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp10 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'copy',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp11 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'tier',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp12 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'page',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp13 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'pagelist',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp14 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'incrementalcopy',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp15 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'appendblock',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp16 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'block',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp17 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'blocklist',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp2 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'list',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp3 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'userdelegationkey',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp4 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'batch',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp5 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'metadata',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp6 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'acl',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp7 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'lease',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp8 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'undelete',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var comp9 = {\n        parameterPath: \"comp\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"comp\",\n            defaultValue: 'snapshot',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var contentDisposition = {\n        parameterPath: [\n            \"options\",\n            \"directoryHttpHeaders\",\n            \"contentDisposition\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-content-disposition\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var contentEncoding = {\n        parameterPath: [\n            \"options\",\n            \"directoryHttpHeaders\",\n            \"contentEncoding\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-content-encoding\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var contentLanguage = {\n        parameterPath: [\n            \"options\",\n            \"directoryHttpHeaders\",\n            \"contentLanguage\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-content-language\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var contentLength = {\n        parameterPath: \"contentLength\",\n        mapper: {\n            required: true,\n            serializedName: \"Content-Length\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var contentType = {\n        parameterPath: [\n            \"options\",\n            \"directoryHttpHeaders\",\n            \"contentType\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-content-type\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var copyActionAbortConstant = {\n        parameterPath: \"copyActionAbortConstant\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-copy-action\",\n            defaultValue: 'abort',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var copyId = {\n        parameterPath: \"copyId\",\n        mapper: {\n            required: true,\n            serializedName: \"copyid\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var copySource = {\n        parameterPath: \"copySource\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-copy-source\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var deleteSnapshots = {\n        parameterPath: [\n            \"options\",\n            \"deleteSnapshots\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-delete-snapshots\",\n            type: {\n                name: \"Enum\",\n                allowedValues: [\n                    \"include\",\n                    \"only\"\n                ]\n            }\n        }\n    };\n    var delimiter = {\n        parameterPath: \"delimiter\",\n        mapper: {\n            required: true,\n            serializedName: \"delimiter\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var directoryProperties = {\n        parameterPath: [\n            \"options\",\n            \"directoryProperties\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-properties\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var duration = {\n        parameterPath: [\n            \"options\",\n            \"duration\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-lease-duration\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var encryptionAlgorithm = {\n        parameterPath: [\n            \"options\",\n            \"cpkInfo\",\n            \"encryptionAlgorithm\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-encryption-algorithm\",\n            type: {\n                name: \"Enum\",\n                allowedValues: [\n                    \"AES256\"\n                ]\n            }\n        }\n    };\n    var encryptionKey = {\n        parameterPath: [\n            \"options\",\n            \"cpkInfo\",\n            \"encryptionKey\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-encryption-key\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var encryptionKeySha256 = {\n        parameterPath: [\n            \"options\",\n            \"cpkInfo\",\n            \"encryptionKeySha256\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-encryption-key-sha256\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var group = {\n        parameterPath: [\n            \"options\",\n            \"group\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-group\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var ifMatch = {\n        parameterPath: [\n            \"options\",\n            \"modifiedAccessConditions\",\n            \"ifMatch\"\n        ],\n        mapper: {\n            serializedName: \"If-Match\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var ifModifiedSince = {\n        parameterPath: [\n            \"options\",\n            \"modifiedAccessConditions\",\n            \"ifModifiedSince\"\n        ],\n        mapper: {\n            serializedName: \"If-Modified-Since\",\n            type: {\n                name: \"DateTimeRfc1123\"\n            }\n        }\n    };\n    var ifNoneMatch = {\n        parameterPath: [\n            \"options\",\n            \"modifiedAccessConditions\",\n            \"ifNoneMatch\"\n        ],\n        mapper: {\n            serializedName: \"If-None-Match\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var ifSequenceNumberEqualTo = {\n        parameterPath: [\n            \"options\",\n            \"sequenceNumberAccessConditions\",\n            \"ifSequenceNumberEqualTo\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-if-sequence-number-eq\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var ifSequenceNumberLessThan = {\n        parameterPath: [\n            \"options\",\n            \"sequenceNumberAccessConditions\",\n            \"ifSequenceNumberLessThan\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-if-sequence-number-lt\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var ifSequenceNumberLessThanOrEqualTo = {\n        parameterPath: [\n            \"options\",\n            \"sequenceNumberAccessConditions\",\n            \"ifSequenceNumberLessThanOrEqualTo\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-if-sequence-number-le\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var ifUnmodifiedSince = {\n        parameterPath: [\n            \"options\",\n            \"modifiedAccessConditions\",\n            \"ifUnmodifiedSince\"\n        ],\n        mapper: {\n            serializedName: \"If-Unmodified-Since\",\n            type: {\n                name: \"DateTimeRfc1123\"\n            }\n        }\n    };\n    var include0 = {\n        parameterPath: [\n            \"options\",\n            \"include\"\n        ],\n        mapper: {\n            serializedName: \"include\",\n            type: {\n                name: \"Enum\",\n                allowedValues: [\n                    \"metadata\"\n                ]\n            }\n        }\n    };\n    var include1 = {\n        parameterPath: [\n            \"options\",\n            \"include\"\n        ],\n        mapper: {\n            serializedName: \"include\",\n            type: {\n                name: \"Sequence\",\n                element: {\n                    type: {\n                        name: \"Enum\",\n                        allowedValues: [\n                            \"copy\",\n                            \"deleted\",\n                            \"metadata\",\n                            \"snapshots\",\n                            \"uncommittedblobs\"\n                        ]\n                    }\n                }\n            }\n        },\n        collectionFormat: QueryCollectionFormat.Csv\n    };\n    var leaseId0 = {\n        parameterPath: [\n            \"options\",\n            \"leaseAccessConditions\",\n            \"leaseId\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-lease-id\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var leaseId1 = {\n        parameterPath: \"leaseId\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-lease-id\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var listType = {\n        parameterPath: \"listType\",\n        mapper: {\n            required: true,\n            serializedName: \"blocklisttype\",\n            defaultValue: 'committed',\n            type: {\n                name: \"Enum\",\n                allowedValues: [\n                    \"committed\",\n                    \"uncommitted\",\n                    \"all\"\n                ]\n            }\n        }\n    };\n    var marker0 = {\n        parameterPath: [\n            \"options\",\n            \"marker\"\n        ],\n        mapper: {\n            serializedName: \"marker\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var maxresults = {\n        parameterPath: [\n            \"options\",\n            \"maxresults\"\n        ],\n        mapper: {\n            serializedName: \"maxresults\",\n            constraints: {\n                InclusiveMinimum: 1\n            },\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var maxSize = {\n        parameterPath: [\n            \"options\",\n            \"appendPositionAccessConditions\",\n            \"maxSize\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-blob-condition-maxsize\",\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var metadata = {\n        parameterPath: [\n            \"options\",\n            \"metadata\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-meta\",\n            type: {\n                name: \"Dictionary\",\n                value: {\n                    type: {\n                        name: \"String\"\n                    }\n                }\n            },\n            headerCollectionPrefix: \"x-ms-meta-\"\n        }\n    };\n    var multipartContentType = {\n        parameterPath: \"multipartContentType\",\n        mapper: {\n            required: true,\n            serializedName: \"Content-Type\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var owner = {\n        parameterPath: [\n            \"options\",\n            \"owner\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-owner\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var pageWrite0 = {\n        parameterPath: \"pageWrite\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-page-write\",\n            defaultValue: 'update',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var pageWrite1 = {\n        parameterPath: \"pageWrite\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-page-write\",\n            defaultValue: 'clear',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var pathRenameMode = {\n        parameterPath: \"pathRenameMode\",\n        mapper: {\n            serializedName: \"mode\",\n            type: {\n                name: \"Enum\",\n                allowedValues: [\n                    \"legacy\",\n                    \"posix\"\n                ]\n            }\n        }\n    };\n    var posixAcl = {\n        parameterPath: [\n            \"options\",\n            \"posixAcl\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-acl\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var posixPermissions = {\n        parameterPath: [\n            \"options\",\n            \"posixPermissions\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-permissions\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var posixUmask = {\n        parameterPath: [\n            \"options\",\n            \"posixUmask\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-umask\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var prefix = {\n        parameterPath: [\n            \"options\",\n            \"prefix\"\n        ],\n        mapper: {\n            serializedName: \"prefix\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var prevsnapshot = {\n        parameterPath: [\n            \"options\",\n            \"prevsnapshot\"\n        ],\n        mapper: {\n            serializedName: \"prevsnapshot\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var proposedLeaseId0 = {\n        parameterPath: [\n            \"options\",\n            \"proposedLeaseId\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-proposed-lease-id\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var proposedLeaseId1 = {\n        parameterPath: \"proposedLeaseId\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-proposed-lease-id\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var range0 = {\n        parameterPath: [\n            \"options\",\n            \"range\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-range\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var range1 = {\n        parameterPath: \"range\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-range\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var rangeGetContentCRC64 = {\n        parameterPath: [\n            \"options\",\n            \"rangeGetContentCRC64\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-range-get-content-crc64\",\n            type: {\n                name: \"Boolean\"\n            }\n        }\n    };\n    var rangeGetContentMD5 = {\n        parameterPath: [\n            \"options\",\n            \"rangeGetContentMD5\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-range-get-content-md5\",\n            type: {\n                name: \"Boolean\"\n            }\n        }\n    };\n    var rehydratePriority = {\n        parameterPath: [\n            \"options\",\n            \"rehydratePriority\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-rehydrate-priority\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var renameSource = {\n        parameterPath: \"renameSource\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-rename-source\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var requestId = {\n        parameterPath: [\n            \"options\",\n            \"requestId\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-client-request-id\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var restype0 = {\n        parameterPath: \"restype\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"restype\",\n            defaultValue: 'service',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var restype1 = {\n        parameterPath: \"restype\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"restype\",\n            defaultValue: 'account',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var restype2 = {\n        parameterPath: \"restype\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"restype\",\n            defaultValue: 'container',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sequenceNumberAction = {\n        parameterPath: \"sequenceNumberAction\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-sequence-number-action\",\n            type: {\n                name: \"Enum\",\n                allowedValues: [\n                    \"max\",\n                    \"update\",\n                    \"increment\"\n                ]\n            }\n        }\n    };\n    var snapshot = {\n        parameterPath: [\n            \"options\",\n            \"snapshot\"\n        ],\n        mapper: {\n            serializedName: \"snapshot\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sourceContentCrc64 = {\n        parameterPath: [\n            \"options\",\n            \"sourceContentCrc64\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-content-crc64\",\n            type: {\n                name: \"ByteArray\"\n            }\n        }\n    };\n    var sourceContentMD5 = {\n        parameterPath: [\n            \"options\",\n            \"sourceContentMD5\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-content-md5\",\n            type: {\n                name: \"ByteArray\"\n            }\n        }\n    };\n    var sourceIfMatch = {\n        parameterPath: [\n            \"options\",\n            \"sourceModifiedAccessConditions\",\n            \"sourceIfMatch\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-if-match\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sourceIfModifiedSince = {\n        parameterPath: [\n            \"options\",\n            \"sourceModifiedAccessConditions\",\n            \"sourceIfModifiedSince\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-if-modified-since\",\n            type: {\n                name: \"DateTimeRfc1123\"\n            }\n        }\n    };\n    var sourceIfNoneMatch = {\n        parameterPath: [\n            \"options\",\n            \"sourceModifiedAccessConditions\",\n            \"sourceIfNoneMatch\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-if-none-match\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sourceIfUnmodifiedSince = {\n        parameterPath: [\n            \"options\",\n            \"sourceModifiedAccessConditions\",\n            \"sourceIfUnmodifiedSince\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-if-unmodified-since\",\n            type: {\n                name: \"DateTimeRfc1123\"\n            }\n        }\n    };\n    var sourceLeaseId = {\n        parameterPath: [\n            \"options\",\n            \"sourceLeaseId\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-lease-id\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sourceRange0 = {\n        parameterPath: \"sourceRange\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-source-range\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sourceRange1 = {\n        parameterPath: [\n            \"options\",\n            \"sourceRange\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-source-range\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var sourceUrl = {\n        parameterPath: \"sourceUrl\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-copy-source\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var tier0 = {\n        parameterPath: [\n            \"options\",\n            \"tier\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-access-tier\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var tier1 = {\n        parameterPath: \"tier\",\n        mapper: {\n            required: true,\n            serializedName: \"x-ms-access-tier\",\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var timeout = {\n        parameterPath: [\n            \"options\",\n            \"timeout\"\n        ],\n        mapper: {\n            serializedName: \"timeout\",\n            constraints: {\n                InclusiveMinimum: 0\n            },\n            type: {\n                name: \"Number\"\n            }\n        }\n    };\n    var transactionalContentCrc64 = {\n        parameterPath: [\n            \"options\",\n            \"transactionalContentCrc64\"\n        ],\n        mapper: {\n            serializedName: \"x-ms-content-crc64\",\n            type: {\n                name: \"ByteArray\"\n            }\n        }\n    };\n    var transactionalContentMD5 = {\n        parameterPath: [\n            \"options\",\n            \"transactionalContentMD5\"\n        ],\n        mapper: {\n            serializedName: \"Content-MD5\",\n            type: {\n                name: \"ByteArray\"\n            }\n        }\n    };\n    var upn = {\n        parameterPath: [\n            \"options\",\n            \"upn\"\n        ],\n        mapper: {\n            serializedName: \"upn\",\n            type: {\n                name: \"Boolean\"\n            }\n        }\n    };\n    var url = {\n        parameterPath: \"url\",\n        mapper: {\n            required: true,\n            serializedName: \"url\",\n            defaultValue: '',\n            type: {\n                name: \"String\"\n            }\n        },\n        skipEncoding: true\n    };\n    var version = {\n        parameterPath: \"version\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-version\",\n            defaultValue: '2019-02-02',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n    var xMsRequiresSync = {\n        parameterPath: \"xMsRequiresSync\",\n        mapper: {\n            required: true,\n            isConstant: true,\n            serializedName: \"x-ms-requires-sync\",\n            defaultValue: 'true',\n            type: {\n                name: \"String\"\n            }\n        }\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    /** Class representing a Service. */\n    var Service = /** @class */ (function () {\n        /**\n         * Create a Service.\n         * @param {StorageClientContext} client Reference to the service client.\n         */\n        function Service(client) {\n            this.client = client;\n        }\n        Service.prototype.setProperties = function (storageServiceProperties, options, callback) {\n            return this.client.sendOperationRequest({\n                storageServiceProperties: storageServiceProperties,\n                options: options\n            }, setPropertiesOperationSpec, callback);\n        };\n        Service.prototype.getProperties = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getPropertiesOperationSpec, callback);\n        };\n        Service.prototype.getStatistics = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getStatisticsOperationSpec, callback);\n        };\n        Service.prototype.listContainersSegment = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, listContainersSegmentOperationSpec, callback);\n        };\n        Service.prototype.getUserDelegationKey = function (keyInfo, options, callback) {\n            return this.client.sendOperationRequest({\n                keyInfo: keyInfo,\n                options: options\n            }, getUserDelegationKeyOperationSpec, callback);\n        };\n        Service.prototype.getAccountInfo = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getAccountInfoOperationSpec, callback);\n        };\n        Service.prototype.submitBatch = function (body, contentLength, multipartContentType, options, callback) {\n            return this.client.sendOperationRequest({\n                body: body,\n                contentLength: contentLength,\n                multipartContentType: multipartContentType,\n                options: options\n            }, submitBatchOperationSpec, callback);\n        };\n        return Service;\n    }());\n    // Operation Specifications\n    var serializer$1 = new Serializer(Mappers, true);\n    var setPropertiesOperationSpec = {\n        httpMethod: \"PUT\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype0,\n            comp0\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        requestBody: {\n            parameterPath: \"storageServiceProperties\",\n            mapper: __assign({}, StorageServiceProperties, { required: true })\n        },\n        contentType: \"application/xml; charset=utf-8\",\n        responses: {\n            202: {\n                headersMapper: ServiceSetPropertiesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n    var getPropertiesOperationSpec = {\n        httpMethod: \"GET\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype0,\n            comp0\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        responses: {\n            200: {\n                bodyMapper: StorageServiceProperties,\n                headersMapper: ServiceGetPropertiesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n    var getStatisticsOperationSpec = {\n        httpMethod: \"GET\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype0,\n            comp1\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        responses: {\n            200: {\n                bodyMapper: StorageServiceStats,\n                headersMapper: ServiceGetStatisticsHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n    var listContainersSegmentOperationSpec = {\n        httpMethod: \"GET\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            prefix,\n            marker0,\n            maxresults,\n            include0,\n            timeout,\n            comp2\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        responses: {\n            200: {\n                bodyMapper: ListContainersSegmentResponse,\n                headersMapper: ServiceListContainersSegmentHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n    var getUserDelegationKeyOperationSpec = {\n        httpMethod: \"POST\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype0,\n            comp3\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        requestBody: {\n            parameterPath: \"keyInfo\",\n            mapper: __assign({}, KeyInfo, { required: true })\n        },\n        contentType: \"application/xml; charset=utf-8\",\n        responses: {\n            200: {\n                bodyMapper: UserDelegationKey,\n                headersMapper: ServiceGetUserDelegationKeyHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n    var getAccountInfoOperationSpec = {\n        httpMethod: \"GET\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            restype1,\n            comp0\n        ],\n        headerParameters: [\n            version\n        ],\n        responses: {\n            200: {\n                headersMapper: ServiceGetAccountInfoHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n    var submitBatchOperationSpec = {\n        httpMethod: \"POST\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp4\n        ],\n        headerParameters: [\n            contentLength,\n            multipartContentType,\n            version,\n            requestId\n        ],\n        requestBody: {\n            parameterPath: \"body\",\n            mapper: {\n                required: true,\n                serializedName: \"body\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        contentType: \"application/xml; charset=utf-8\",\n        responses: {\n            202: {\n                bodyMapper: {\n                    serializedName: \"parsedResponse\",\n                    type: {\n                        name: \"Stream\"\n                    }\n                },\n                headersMapper: ServiceSubmitBatchHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$1\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var Mappers$1 = /*#__PURE__*/Object.freeze({\n        AccessPolicy: AccessPolicy,\n        BlobFlatListSegment: BlobFlatListSegment,\n        BlobHierarchyListSegment: BlobHierarchyListSegment,\n        BlobItem: BlobItem,\n        BlobMetadata: BlobMetadata,\n        BlobPrefix: BlobPrefix,\n        BlobProperties: BlobProperties,\n        ContainerAcquireLeaseHeaders: ContainerAcquireLeaseHeaders,\n        ContainerBreakLeaseHeaders: ContainerBreakLeaseHeaders,\n        ContainerChangeLeaseHeaders: ContainerChangeLeaseHeaders,\n        ContainerCreateHeaders: ContainerCreateHeaders,\n        ContainerDeleteHeaders: ContainerDeleteHeaders,\n        ContainerGetAccessPolicyHeaders: ContainerGetAccessPolicyHeaders,\n        ContainerGetAccountInfoHeaders: ContainerGetAccountInfoHeaders,\n        ContainerGetPropertiesHeaders: ContainerGetPropertiesHeaders,\n        ContainerListBlobFlatSegmentHeaders: ContainerListBlobFlatSegmentHeaders,\n        ContainerListBlobHierarchySegmentHeaders: ContainerListBlobHierarchySegmentHeaders,\n        ContainerReleaseLeaseHeaders: ContainerReleaseLeaseHeaders,\n        ContainerRenewLeaseHeaders: ContainerRenewLeaseHeaders,\n        ContainerSetAccessPolicyHeaders: ContainerSetAccessPolicyHeaders,\n        ContainerSetMetadataHeaders: ContainerSetMetadataHeaders,\n        ListBlobsFlatSegmentResponse: ListBlobsFlatSegmentResponse,\n        ListBlobsHierarchySegmentResponse: ListBlobsHierarchySegmentResponse,\n        SignedIdentifier: SignedIdentifier,\n        StorageError: StorageError\n    });\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    /** Class representing a Container. */\n    var Container = /** @class */ (function () {\n        /**\n         * Create a Container.\n         * @param {StorageClientContext} client Reference to the service client.\n         */\n        function Container(client) {\n            this.client = client;\n        }\n        Container.prototype.create = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, createOperationSpec, callback);\n        };\n        Container.prototype.getProperties = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getPropertiesOperationSpec$1, callback);\n        };\n        Container.prototype.deleteMethod = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, deleteMethodOperationSpec, callback);\n        };\n        Container.prototype.setMetadata = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, setMetadataOperationSpec, callback);\n        };\n        Container.prototype.getAccessPolicy = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getAccessPolicyOperationSpec, callback);\n        };\n        Container.prototype.setAccessPolicy = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, setAccessPolicyOperationSpec, callback);\n        };\n        Container.prototype.acquireLease = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, acquireLeaseOperationSpec, callback);\n        };\n        Container.prototype.releaseLease = function (leaseId, options, callback) {\n            return this.client.sendOperationRequest({\n                leaseId: leaseId,\n                options: options\n            }, releaseLeaseOperationSpec, callback);\n        };\n        Container.prototype.renewLease = function (leaseId, options, callback) {\n            return this.client.sendOperationRequest({\n                leaseId: leaseId,\n                options: options\n            }, renewLeaseOperationSpec, callback);\n        };\n        Container.prototype.breakLease = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, breakLeaseOperationSpec, callback);\n        };\n        Container.prototype.changeLease = function (leaseId, proposedLeaseId, options, callback) {\n            return this.client.sendOperationRequest({\n                leaseId: leaseId,\n                proposedLeaseId: proposedLeaseId,\n                options: options\n            }, changeLeaseOperationSpec, callback);\n        };\n        Container.prototype.listBlobFlatSegment = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, listBlobFlatSegmentOperationSpec, callback);\n        };\n        Container.prototype.listBlobHierarchySegment = function (delimiter, options, callback) {\n            return this.client.sendOperationRequest({\n                delimiter: delimiter,\n                options: options\n            }, listBlobHierarchySegmentOperationSpec, callback);\n        };\n        Container.prototype.getAccountInfo = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getAccountInfoOperationSpec$1, callback);\n        };\n        return Container;\n    }());\n    // Operation Specifications\n    var serializer$2 = new Serializer(Mappers$1, true);\n    var createOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype2\n        ],\n        headerParameters: [\n            metadata,\n            access,\n            version,\n            requestId\n        ],\n        responses: {\n            201: {\n                headersMapper: ContainerCreateHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var getPropertiesOperationSpec$1 = {\n        httpMethod: \"GET\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype2\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            leaseId0\n        ],\n        responses: {\n            200: {\n                headersMapper: ContainerGetPropertiesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var deleteMethodOperationSpec = {\n        httpMethod: \"DELETE\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype2\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            202: {\n                headersMapper: ContainerDeleteHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var setMetadataOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype2,\n            comp5\n        ],\n        headerParameters: [\n            metadata,\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince\n        ],\n        responses: {\n            200: {\n                headersMapper: ContainerSetMetadataHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var getAccessPolicyOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype2,\n            comp6\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            leaseId0\n        ],\n        responses: {\n            200: {\n                bodyMapper: {\n                    xmlElementName: \"SignedIdentifier\",\n                    serializedName: \"parsedResponse\",\n                    type: {\n                        name: \"Sequence\",\n                        element: {\n                            type: {\n                                name: \"Composite\",\n                                className: \"SignedIdentifier\"\n                            }\n                        }\n                    }\n                },\n                headersMapper: ContainerGetAccessPolicyHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var setAccessPolicyOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            restype2,\n            comp6\n        ],\n        headerParameters: [\n            access,\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        requestBody: {\n            parameterPath: [\n                \"options\",\n                \"containerAcl\"\n            ],\n            mapper: {\n                xmlName: \"SignedIdentifiers\",\n                xmlElementName: \"SignedIdentifier\",\n                serializedName: \"containerAcl\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SignedIdentifier\"\n                        }\n                    }\n                }\n            }\n        },\n        contentType: \"application/xml; charset=utf-8\",\n        responses: {\n            200: {\n                headersMapper: ContainerSetAccessPolicyHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var acquireLeaseOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7,\n            restype2\n        ],\n        headerParameters: [\n            duration,\n            proposedLeaseId0,\n            version,\n            requestId,\n            action0,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            201: {\n                headersMapper: ContainerAcquireLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var releaseLeaseOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7,\n            restype2\n        ],\n        headerParameters: [\n            leaseId1,\n            version,\n            requestId,\n            action1,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            200: {\n                headersMapper: ContainerReleaseLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var renewLeaseOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7,\n            restype2\n        ],\n        headerParameters: [\n            leaseId1,\n            version,\n            requestId,\n            action2,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            200: {\n                headersMapper: ContainerRenewLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var breakLeaseOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7,\n            restype2\n        ],\n        headerParameters: [\n            breakPeriod,\n            version,\n            requestId,\n            action3,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            202: {\n                headersMapper: ContainerBreakLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var changeLeaseOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7,\n            restype2\n        ],\n        headerParameters: [\n            leaseId1,\n            proposedLeaseId1,\n            version,\n            requestId,\n            action4,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            200: {\n                headersMapper: ContainerChangeLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var listBlobFlatSegmentOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            prefix,\n            marker0,\n            maxresults,\n            include1,\n            timeout,\n            restype2,\n            comp2\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        responses: {\n            200: {\n                bodyMapper: ListBlobsFlatSegmentResponse,\n                headersMapper: ContainerListBlobFlatSegmentHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var listBlobHierarchySegmentOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            prefix,\n            delimiter,\n            marker0,\n            maxresults,\n            include1,\n            timeout,\n            restype2,\n            comp2\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        responses: {\n            200: {\n                bodyMapper: ListBlobsHierarchySegmentResponse,\n                headersMapper: ContainerListBlobHierarchySegmentHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n    var getAccountInfoOperationSpec$1 = {\n        httpMethod: \"GET\",\n        path: \"{containerName}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            restype1,\n            comp0\n        ],\n        headerParameters: [\n            version\n        ],\n        responses: {\n            200: {\n                headersMapper: ContainerGetAccountInfoHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$2\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var Mappers$2 = /*#__PURE__*/Object.freeze({\n        BlobAbortCopyFromURLHeaders: BlobAbortCopyFromURLHeaders,\n        BlobAcquireLeaseHeaders: BlobAcquireLeaseHeaders,\n        BlobBreakLeaseHeaders: BlobBreakLeaseHeaders,\n        BlobChangeLeaseHeaders: BlobChangeLeaseHeaders,\n        BlobCopyFromURLHeaders: BlobCopyFromURLHeaders,\n        BlobCreateSnapshotHeaders: BlobCreateSnapshotHeaders,\n        BlobDeleteHeaders: BlobDeleteHeaders,\n        BlobDownloadHeaders: BlobDownloadHeaders,\n        BlobGetAccessControlHeaders: BlobGetAccessControlHeaders,\n        BlobGetAccountInfoHeaders: BlobGetAccountInfoHeaders,\n        BlobGetPropertiesHeaders: BlobGetPropertiesHeaders,\n        BlobReleaseLeaseHeaders: BlobReleaseLeaseHeaders,\n        BlobRenameHeaders: BlobRenameHeaders,\n        BlobRenewLeaseHeaders: BlobRenewLeaseHeaders,\n        BlobSetAccessControlHeaders: BlobSetAccessControlHeaders,\n        BlobSetHTTPHeadersHeaders: BlobSetHTTPHeadersHeaders,\n        BlobSetMetadataHeaders: BlobSetMetadataHeaders,\n        BlobSetTierHeaders: BlobSetTierHeaders,\n        BlobStartCopyFromURLHeaders: BlobStartCopyFromURLHeaders,\n        BlobUndeleteHeaders: BlobUndeleteHeaders,\n        DataLakeStorageError: DataLakeStorageError,\n        DataLakeStorageErrorError: DataLakeStorageErrorError,\n        StorageError: StorageError\n    });\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    /** Class representing a Blob. */\n    var Blob$1 = /** @class */ (function () {\n        /**\n         * Create a Blob.\n         * @param {StorageClientContext} client Reference to the service client.\n         */\n        function Blob(client) {\n            this.client = client;\n        }\n        Blob.prototype.download = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, downloadOperationSpec, callback);\n        };\n        Blob.prototype.getProperties = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getPropertiesOperationSpec$2, callback);\n        };\n        Blob.prototype.deleteMethod = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, deleteMethodOperationSpec$1, callback);\n        };\n        Blob.prototype.setAccessControl = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, setAccessControlOperationSpec, callback);\n        };\n        Blob.prototype.getAccessControl = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getAccessControlOperationSpec, callback);\n        };\n        Blob.prototype.rename = function (renameSource, options, callback) {\n            return this.client.sendOperationRequest({\n                renameSource: renameSource,\n                options: options\n            }, renameOperationSpec, callback);\n        };\n        Blob.prototype.undelete = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, undeleteOperationSpec, callback);\n        };\n        Blob.prototype.setHTTPHeaders = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, setHTTPHeadersOperationSpec, callback);\n        };\n        Blob.prototype.setMetadata = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, setMetadataOperationSpec$1, callback);\n        };\n        Blob.prototype.acquireLease = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, acquireLeaseOperationSpec$1, callback);\n        };\n        Blob.prototype.releaseLease = function (leaseId, options, callback) {\n            return this.client.sendOperationRequest({\n                leaseId: leaseId,\n                options: options\n            }, releaseLeaseOperationSpec$1, callback);\n        };\n        Blob.prototype.renewLease = function (leaseId, options, callback) {\n            return this.client.sendOperationRequest({\n                leaseId: leaseId,\n                options: options\n            }, renewLeaseOperationSpec$1, callback);\n        };\n        Blob.prototype.changeLease = function (leaseId, proposedLeaseId, options, callback) {\n            return this.client.sendOperationRequest({\n                leaseId: leaseId,\n                proposedLeaseId: proposedLeaseId,\n                options: options\n            }, changeLeaseOperationSpec$1, callback);\n        };\n        Blob.prototype.breakLease = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, breakLeaseOperationSpec$1, callback);\n        };\n        Blob.prototype.createSnapshot = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, createSnapshotOperationSpec, callback);\n        };\n        Blob.prototype.startCopyFromURL = function (copySource, options, callback) {\n            return this.client.sendOperationRequest({\n                copySource: copySource,\n                options: options\n            }, startCopyFromURLOperationSpec, callback);\n        };\n        Blob.prototype.copyFromURL = function (copySource, options, callback) {\n            return this.client.sendOperationRequest({\n                copySource: copySource,\n                options: options\n            }, copyFromURLOperationSpec, callback);\n        };\n        Blob.prototype.abortCopyFromURL = function (copyId, options, callback) {\n            return this.client.sendOperationRequest({\n                copyId: copyId,\n                options: options\n            }, abortCopyFromURLOperationSpec, callback);\n        };\n        Blob.prototype.setTier = function (tier, options, callback) {\n            return this.client.sendOperationRequest({\n                tier: tier,\n                options: options\n            }, setTierOperationSpec, callback);\n        };\n        Blob.prototype.getAccountInfo = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getAccountInfoOperationSpec$2, callback);\n        };\n        return Blob;\n    }());\n    // Operation Specifications\n    var serializer$3 = new Serializer(Mappers$2, true);\n    var downloadOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            snapshot,\n            timeout\n        ],\n        headerParameters: [\n            range0,\n            rangeGetContentMD5,\n            rangeGetContentCRC64,\n            version,\n            requestId,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                bodyMapper: {\n                    serializedName: \"parsedResponse\",\n                    type: {\n                        name: \"Stream\"\n                    }\n                },\n                headersMapper: BlobDownloadHeaders\n            },\n            206: {\n                bodyMapper: {\n                    serializedName: \"parsedResponse\",\n                    type: {\n                        name: \"Stream\"\n                    }\n                },\n                headersMapper: BlobDownloadHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var getPropertiesOperationSpec$2 = {\n        httpMethod: \"HEAD\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            snapshot,\n            timeout\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobGetPropertiesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var deleteMethodOperationSpec$1 = {\n        httpMethod: \"DELETE\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            snapshot,\n            timeout\n        ],\n        headerParameters: [\n            deleteSnapshots,\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            202: {\n                headersMapper: BlobDeleteHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var setAccessControlOperationSpec = {\n        httpMethod: \"PATCH\",\n        path: \"{filesystem}/{path}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            action5\n        ],\n        headerParameters: [\n            owner,\n            group,\n            posixPermissions,\n            posixAcl,\n            requestId,\n            version,\n            leaseId0,\n            ifMatch,\n            ifNoneMatch,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobSetAccessControlHeaders\n            },\n            default: {\n                bodyMapper: DataLakeStorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var getAccessControlOperationSpec = {\n        httpMethod: \"HEAD\",\n        path: \"{filesystem}/{path}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            upn,\n            action6\n        ],\n        headerParameters: [\n            requestId,\n            version,\n            leaseId0,\n            ifMatch,\n            ifNoneMatch,\n            ifModifiedSince,\n            ifUnmodifiedSince\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobGetAccessControlHeaders\n            },\n            default: {\n                bodyMapper: DataLakeStorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var renameOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{filesystem}/{path}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            pathRenameMode\n        ],\n        headerParameters: [\n            renameSource,\n            directoryProperties,\n            posixPermissions,\n            posixUmask,\n            sourceLeaseId,\n            version,\n            requestId,\n            cacheControl,\n            contentType,\n            contentEncoding,\n            contentLanguage,\n            contentDisposition,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch,\n            sourceIfModifiedSince,\n            sourceIfUnmodifiedSince,\n            sourceIfMatch,\n            sourceIfNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: BlobRenameHeaders\n            },\n            default: {\n                bodyMapper: DataLakeStorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var undeleteOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp8\n        ],\n        headerParameters: [\n            version,\n            requestId\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobUndeleteHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var setHTTPHeadersOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp0\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            blobCacheControl,\n            blobContentType,\n            blobContentMD5,\n            blobContentEncoding,\n            blobContentLanguage,\n            blobContentDisposition,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobSetHTTPHeadersHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var setMetadataOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp5\n        ],\n        headerParameters: [\n            metadata,\n            version,\n            requestId,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobSetMetadataHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var acquireLeaseOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7\n        ],\n        headerParameters: [\n            duration,\n            proposedLeaseId0,\n            version,\n            requestId,\n            action0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: BlobAcquireLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var releaseLeaseOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7\n        ],\n        headerParameters: [\n            leaseId1,\n            version,\n            requestId,\n            action1,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobReleaseLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var renewLeaseOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7\n        ],\n        headerParameters: [\n            leaseId1,\n            version,\n            requestId,\n            action2,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobRenewLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var changeLeaseOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7\n        ],\n        headerParameters: [\n            leaseId1,\n            proposedLeaseId1,\n            version,\n            requestId,\n            action4,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobChangeLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var breakLeaseOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp7\n        ],\n        headerParameters: [\n            breakPeriod,\n            version,\n            requestId,\n            action3,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            202: {\n                headersMapper: BlobBreakLeaseHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var createSnapshotOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp9\n        ],\n        headerParameters: [\n            metadata,\n            version,\n            requestId,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch,\n            leaseId0\n        ],\n        responses: {\n            201: {\n                headersMapper: BlobCreateSnapshotHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var startCopyFromURLOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout\n        ],\n        headerParameters: [\n            metadata,\n            tier0,\n            rehydratePriority,\n            copySource,\n            version,\n            requestId,\n            sourceIfModifiedSince,\n            sourceIfUnmodifiedSince,\n            sourceIfMatch,\n            sourceIfNoneMatch,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch,\n            leaseId0\n        ],\n        responses: {\n            202: {\n                headersMapper: BlobStartCopyFromURLHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var copyFromURLOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout\n        ],\n        headerParameters: [\n            metadata,\n            tier0,\n            copySource,\n            version,\n            requestId,\n            xMsRequiresSync,\n            sourceIfModifiedSince,\n            sourceIfUnmodifiedSince,\n            sourceIfMatch,\n            sourceIfNoneMatch,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch,\n            leaseId0\n        ],\n        responses: {\n            202: {\n                headersMapper: BlobCopyFromURLHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var abortCopyFromURLOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            copyId,\n            timeout,\n            comp10\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            copyActionAbortConstant,\n            leaseId0\n        ],\n        responses: {\n            204: {\n                headersMapper: BlobAbortCopyFromURLHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var setTierOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp11\n        ],\n        headerParameters: [\n            tier1,\n            rehydratePriority,\n            version,\n            requestId,\n            leaseId0\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobSetTierHeaders\n            },\n            202: {\n                headersMapper: BlobSetTierHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n    var getAccountInfoOperationSpec$2 = {\n        httpMethod: \"GET\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            restype1,\n            comp0\n        ],\n        headerParameters: [\n            version\n        ],\n        responses: {\n            200: {\n                headersMapper: BlobGetAccountInfoHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$3\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var Mappers$3 = /*#__PURE__*/Object.freeze({\n        ClearRange: ClearRange,\n        PageBlobClearPagesHeaders: PageBlobClearPagesHeaders,\n        PageBlobCopyIncrementalHeaders: PageBlobCopyIncrementalHeaders,\n        PageBlobCreateHeaders: PageBlobCreateHeaders,\n        PageBlobGetPageRangesDiffHeaders: PageBlobGetPageRangesDiffHeaders,\n        PageBlobGetPageRangesHeaders: PageBlobGetPageRangesHeaders,\n        PageBlobResizeHeaders: PageBlobResizeHeaders,\n        PageBlobUpdateSequenceNumberHeaders: PageBlobUpdateSequenceNumberHeaders,\n        PageBlobUploadPagesFromURLHeaders: PageBlobUploadPagesFromURLHeaders,\n        PageBlobUploadPagesHeaders: PageBlobUploadPagesHeaders,\n        PageList: PageList,\n        PageRange: PageRange,\n        StorageError: StorageError\n    });\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    /** Class representing a PageBlob. */\n    var PageBlob = /** @class */ (function () {\n        /**\n         * Create a PageBlob.\n         * @param {StorageClientContext} client Reference to the service client.\n         */\n        function PageBlob(client) {\n            this.client = client;\n        }\n        PageBlob.prototype.create = function (contentLength, blobContentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                contentLength: contentLength,\n                blobContentLength: blobContentLength,\n                options: options\n            }, createOperationSpec$1, callback);\n        };\n        PageBlob.prototype.uploadPages = function (body, contentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                body: body,\n                contentLength: contentLength,\n                options: options\n            }, uploadPagesOperationSpec, callback);\n        };\n        PageBlob.prototype.clearPages = function (contentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                contentLength: contentLength,\n                options: options\n            }, clearPagesOperationSpec, callback);\n        };\n        PageBlob.prototype.uploadPagesFromURL = function (sourceUrl, sourceRange, contentLength, range, options, callback) {\n            return this.client.sendOperationRequest({\n                sourceUrl: sourceUrl,\n                sourceRange: sourceRange,\n                contentLength: contentLength,\n                range: range,\n                options: options\n            }, uploadPagesFromURLOperationSpec, callback);\n        };\n        PageBlob.prototype.getPageRanges = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getPageRangesOperationSpec, callback);\n        };\n        PageBlob.prototype.getPageRangesDiff = function (options, callback) {\n            return this.client.sendOperationRequest({\n                options: options\n            }, getPageRangesDiffOperationSpec, callback);\n        };\n        PageBlob.prototype.resize = function (blobContentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                blobContentLength: blobContentLength,\n                options: options\n            }, resizeOperationSpec, callback);\n        };\n        PageBlob.prototype.updateSequenceNumber = function (sequenceNumberAction, options, callback) {\n            return this.client.sendOperationRequest({\n                sequenceNumberAction: sequenceNumberAction,\n                options: options\n            }, updateSequenceNumberOperationSpec, callback);\n        };\n        PageBlob.prototype.copyIncremental = function (copySource, options, callback) {\n            return this.client.sendOperationRequest({\n                copySource: copySource,\n                options: options\n            }, copyIncrementalOperationSpec, callback);\n        };\n        return PageBlob;\n    }());\n    // Operation Specifications\n    var serializer$4 = new Serializer(Mappers$3, true);\n    var createOperationSpec$1 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout\n        ],\n        headerParameters: [\n            contentLength,\n            metadata,\n            blobContentLength,\n            blobSequenceNumber,\n            version,\n            requestId,\n            tier0,\n            blobType0,\n            blobContentType,\n            blobContentEncoding,\n            blobContentLanguage,\n            blobContentMD5,\n            blobCacheControl,\n            blobContentDisposition,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: PageBlobCreateHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var uploadPagesOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp12\n        ],\n        headerParameters: [\n            contentLength,\n            transactionalContentMD5,\n            transactionalContentCrc64,\n            range0,\n            version,\n            requestId,\n            pageWrite0,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifSequenceNumberLessThanOrEqualTo,\n            ifSequenceNumberLessThan,\n            ifSequenceNumberEqualTo,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        requestBody: {\n            parameterPath: \"body\",\n            mapper: {\n                required: true,\n                serializedName: \"body\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        contentType: \"application/octet-stream\",\n        responses: {\n            201: {\n                headersMapper: PageBlobUploadPagesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var clearPagesOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp12\n        ],\n        headerParameters: [\n            contentLength,\n            range0,\n            version,\n            requestId,\n            pageWrite1,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifSequenceNumberLessThanOrEqualTo,\n            ifSequenceNumberLessThan,\n            ifSequenceNumberEqualTo,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: PageBlobClearPagesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var uploadPagesFromURLOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp12\n        ],\n        headerParameters: [\n            sourceUrl,\n            sourceRange0,\n            sourceContentMD5,\n            sourceContentCrc64,\n            contentLength,\n            range1,\n            version,\n            requestId,\n            pageWrite0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            leaseId0,\n            ifSequenceNumberLessThanOrEqualTo,\n            ifSequenceNumberLessThan,\n            ifSequenceNumberEqualTo,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch,\n            sourceIfModifiedSince,\n            sourceIfUnmodifiedSince,\n            sourceIfMatch,\n            sourceIfNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: PageBlobUploadPagesFromURLHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var getPageRangesOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            snapshot,\n            timeout,\n            comp13\n        ],\n        headerParameters: [\n            range0,\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                bodyMapper: PageList,\n                headersMapper: PageBlobGetPageRangesHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var getPageRangesDiffOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            snapshot,\n            timeout,\n            prevsnapshot,\n            comp13\n        ],\n        headerParameters: [\n            range0,\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                bodyMapper: PageList,\n                headersMapper: PageBlobGetPageRangesDiffHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var resizeOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp0\n        ],\n        headerParameters: [\n            blobContentLength,\n            version,\n            requestId,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: PageBlobResizeHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var updateSequenceNumberOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp0\n        ],\n        headerParameters: [\n            sequenceNumberAction,\n            blobSequenceNumber,\n            version,\n            requestId,\n            leaseId0,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            200: {\n                headersMapper: PageBlobUpdateSequenceNumberHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n    var copyIncrementalOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp14\n        ],\n        headerParameters: [\n            copySource,\n            version,\n            requestId,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            202: {\n                headersMapper: PageBlobCopyIncrementalHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$4\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var Mappers$4 = /*#__PURE__*/Object.freeze({\n        AppendBlobAppendBlockFromUrlHeaders: AppendBlobAppendBlockFromUrlHeaders,\n        AppendBlobAppendBlockHeaders: AppendBlobAppendBlockHeaders,\n        AppendBlobCreateHeaders: AppendBlobCreateHeaders,\n        StorageError: StorageError\n    });\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    /** Class representing a AppendBlob. */\n    var AppendBlob = /** @class */ (function () {\n        /**\n         * Create a AppendBlob.\n         * @param {StorageClientContext} client Reference to the service client.\n         */\n        function AppendBlob(client) {\n            this.client = client;\n        }\n        AppendBlob.prototype.create = function (contentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                contentLength: contentLength,\n                options: options\n            }, createOperationSpec$2, callback);\n        };\n        AppendBlob.prototype.appendBlock = function (body, contentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                body: body,\n                contentLength: contentLength,\n                options: options\n            }, appendBlockOperationSpec, callback);\n        };\n        AppendBlob.prototype.appendBlockFromUrl = function (sourceUrl, contentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                sourceUrl: sourceUrl,\n                contentLength: contentLength,\n                options: options\n            }, appendBlockFromUrlOperationSpec, callback);\n        };\n        return AppendBlob;\n    }());\n    // Operation Specifications\n    var serializer$5 = new Serializer(Mappers$4, true);\n    var createOperationSpec$2 = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout\n        ],\n        headerParameters: [\n            contentLength,\n            metadata,\n            version,\n            requestId,\n            blobType1,\n            blobContentType,\n            blobContentEncoding,\n            blobContentLanguage,\n            blobContentMD5,\n            blobCacheControl,\n            blobContentDisposition,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: AppendBlobCreateHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$5\n    };\n    var appendBlockOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp15\n        ],\n        headerParameters: [\n            contentLength,\n            transactionalContentMD5,\n            transactionalContentCrc64,\n            version,\n            requestId,\n            leaseId0,\n            maxSize,\n            appendPosition,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        requestBody: {\n            parameterPath: \"body\",\n            mapper: {\n                required: true,\n                serializedName: \"body\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        contentType: \"application/octet-stream\",\n        responses: {\n            201: {\n                headersMapper: AppendBlobAppendBlockHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$5\n    };\n    var appendBlockFromUrlOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp15\n        ],\n        headerParameters: [\n            sourceUrl,\n            sourceRange1,\n            sourceContentMD5,\n            sourceContentCrc64,\n            contentLength,\n            transactionalContentMD5,\n            version,\n            requestId,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            leaseId0,\n            maxSize,\n            appendPosition,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch,\n            sourceIfModifiedSince,\n            sourceIfUnmodifiedSince,\n            sourceIfMatch,\n            sourceIfNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: AppendBlobAppendBlockFromUrlHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$5\n    };\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n     */\n\n    var Mappers$5 = /*#__PURE__*/Object.freeze({\n        Block: Block,\n        BlockBlobCommitBlockListHeaders: BlockBlobCommitBlockListHeaders,\n        BlockBlobGetBlockListHeaders: BlockBlobGetBlockListHeaders,\n        BlockBlobStageBlockFromURLHeaders: BlockBlobStageBlockFromURLHeaders,\n        BlockBlobStageBlockHeaders: BlockBlobStageBlockHeaders,\n        BlockBlobUploadHeaders: BlockBlobUploadHeaders,\n        BlockList: BlockList,\n        BlockLookupList: BlockLookupList,\n        StorageError: StorageError\n    });\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    /** Class representing a BlockBlob. */\n    var BlockBlob = /** @class */ (function () {\n        /**\n         * Create a BlockBlob.\n         * @param {StorageClientContext} client Reference to the service client.\n         */\n        function BlockBlob(client) {\n            this.client = client;\n        }\n        BlockBlob.prototype.upload = function (body, contentLength, options, callback) {\n            return this.client.sendOperationRequest({\n                body: body,\n                contentLength: contentLength,\n                options: options\n            }, uploadOperationSpec, callback);\n        };\n        BlockBlob.prototype.stageBlock = function (blockId, contentLength, body, options, callback) {\n            return this.client.sendOperationRequest({\n                blockId: blockId,\n                contentLength: contentLength,\n                body: body,\n                options: options\n            }, stageBlockOperationSpec, callback);\n        };\n        BlockBlob.prototype.stageBlockFromURL = function (blockId, contentLength, sourceUrl, options, callback) {\n            return this.client.sendOperationRequest({\n                blockId: blockId,\n                contentLength: contentLength,\n                sourceUrl: sourceUrl,\n                options: options\n            }, stageBlockFromURLOperationSpec, callback);\n        };\n        BlockBlob.prototype.commitBlockList = function (blocks, options, callback) {\n            return this.client.sendOperationRequest({\n                blocks: blocks,\n                options: options\n            }, commitBlockListOperationSpec, callback);\n        };\n        BlockBlob.prototype.getBlockList = function (listType, options, callback) {\n            return this.client.sendOperationRequest({\n                listType: listType,\n                options: options\n            }, getBlockListOperationSpec, callback);\n        };\n        return BlockBlob;\n    }());\n    // Operation Specifications\n    var serializer$6 = new Serializer(Mappers$5, true);\n    var uploadOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout\n        ],\n        headerParameters: [\n            contentLength,\n            metadata,\n            tier0,\n            version,\n            requestId,\n            blobType2,\n            blobContentType,\n            blobContentEncoding,\n            blobContentLanguage,\n            blobContentMD5,\n            blobCacheControl,\n            blobContentDisposition,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        requestBody: {\n            parameterPath: \"body\",\n            mapper: {\n                required: true,\n                serializedName: \"body\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        contentType: \"application/octet-stream\",\n        responses: {\n            201: {\n                headersMapper: BlockBlobUploadHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$6\n    };\n    var stageBlockOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            blockId,\n            timeout,\n            comp16\n        ],\n        headerParameters: [\n            contentLength,\n            transactionalContentMD5,\n            transactionalContentCrc64,\n            version,\n            requestId,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm\n        ],\n        requestBody: {\n            parameterPath: \"body\",\n            mapper: {\n                required: true,\n                serializedName: \"body\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        contentType: \"application/octet-stream\",\n        responses: {\n            201: {\n                headersMapper: BlockBlobStageBlockHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$6\n    };\n    var stageBlockFromURLOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            blockId,\n            timeout,\n            comp16\n        ],\n        headerParameters: [\n            contentLength,\n            sourceUrl,\n            sourceRange1,\n            sourceContentMD5,\n            sourceContentCrc64,\n            version,\n            requestId,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            leaseId0,\n            sourceIfModifiedSince,\n            sourceIfUnmodifiedSince,\n            sourceIfMatch,\n            sourceIfNoneMatch\n        ],\n        responses: {\n            201: {\n                headersMapper: BlockBlobStageBlockFromURLHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$6\n    };\n    var commitBlockListOperationSpec = {\n        httpMethod: \"PUT\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            timeout,\n            comp17\n        ],\n        headerParameters: [\n            transactionalContentMD5,\n            transactionalContentCrc64,\n            metadata,\n            tier0,\n            version,\n            requestId,\n            blobCacheControl,\n            blobContentType,\n            blobContentEncoding,\n            blobContentLanguage,\n            blobContentMD5,\n            blobContentDisposition,\n            leaseId0,\n            encryptionKey,\n            encryptionKeySha256,\n            encryptionAlgorithm,\n            ifModifiedSince,\n            ifUnmodifiedSince,\n            ifMatch,\n            ifNoneMatch\n        ],\n        requestBody: {\n            parameterPath: \"blocks\",\n            mapper: __assign({}, BlockLookupList, { required: true })\n        },\n        contentType: \"application/xml; charset=utf-8\",\n        responses: {\n            201: {\n                headersMapper: BlockBlobCommitBlockListHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$6\n    };\n    var getBlockListOperationSpec = {\n        httpMethod: \"GET\",\n        path: \"{containerName}/{blob}\",\n        urlParameters: [\n            url\n        ],\n        queryParameters: [\n            snapshot,\n            listType,\n            timeout,\n            comp17\n        ],\n        headerParameters: [\n            version,\n            requestId,\n            leaseId0\n        ],\n        responses: {\n            200: {\n                bodyMapper: BlockList,\n                headersMapper: BlockBlobGetBlockListHeaders\n            },\n            default: {\n                bodyMapper: StorageError\n            }\n        },\n        isXML: true,\n        serializer: serializer$6\n    };\n\n    /**\n     * Generate a range string. For example:\n     *\n     * \"bytes=255-\" or \"bytes=0-511\"\n     *\n     * @export\n     * @param {IRange} iRange\n     * @returns {string}\n     */\n    function rangeToString(iRange) {\n        if (iRange.offset < 0) {\n            throw new RangeError(\"IRange.offset cannot be smaller than 0.\");\n        }\n        if (iRange.count && iRange.count <= 0) {\n            throw new RangeError(\"IRange.count must be larger than 0. Leave it undefined if you want a range from offset to the end.\");\n        }\n        return iRange.count\n            ? \"bytes=\" + iRange.offset + \"-\" + (iRange.offset + iRange.count - 1)\n            : \"bytes=\" + iRange.offset + \"-\";\n    }\n\n    var BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES = 256 * 1024 * 1024; // 256MB\n    var BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES = 100 * 1024 * 1024; // 100MB\n    var BLOCK_BLOB_MAX_BLOCKS = 50000;\n    var DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES = 4 * 1024 * 1024; // 4MB\n    var DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS = 5;\n    var URLConstants = {\n        Parameters: {\n            FORCE_BROWSER_NO_CACHE: \"_\",\n            SIGNATURE: \"sig\",\n            SNAPSHOT: \"snapshot\",\n            TIMEOUT: \"timeout\"\n        }\n    };\n    var HTTPURLConnection = {\n        HTTP_ACCEPTED: 202,\n        HTTP_CONFLICT: 409,\n        HTTP_NOT_FOUND: 404,\n        HTTP_PRECON_FAILED: 412,\n        HTTP_RANGE_NOT_SATISFIABLE: 416\n    };\n    var HeaderConstants = {\n        AUTHORIZATION: \"Authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        CONTENT_ENCODING: \"Content-Encoding\",\n        CONTENT_ID: \"Content-ID\",\n        CONTENT_LANGUAGE: \"Content-Language\",\n        CONTENT_LENGTH: \"Content-Length\",\n        CONTENT_MD5: \"Content-Md5\",\n        CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n        CONTENT_TYPE: \"Content-Type\",\n        COOKIE: \"Cookie\",\n        DATE: \"date\",\n        IF_MATCH: \"if-match\",\n        IF_MODIFIED_SINCE: \"if-modified-since\",\n        IF_NONE_MATCH: \"if-none-match\",\n        IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n        PREFIX_FOR_STORAGE: \"x-ms-\",\n        RANGE: \"Range\",\n        USER_AGENT: \"User-Agent\",\n        X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n        X_MS_DATE: \"x-ms-date\",\n        X_MS_ERROR_CODE: \"x-ms-error-code\",\n        X_MS_VERSION: \"x-ms-version\"\n    };\n    var ETagNone = \"\";\n    var BATCH_MAX_REQUEST = 256;\n    var HTTP_LINE_ENDING = \"\\r\\n\";\n    var HTTP_VERSION_1_1 = \"HTTP/1.1\";\n    var EncryptionAlgorithmAES25 = \"AES256\";\n\n    (function (BlockBlobTier) {\n        BlockBlobTier[\"Hot\"] = \"Hot\";\n        BlockBlobTier[\"Cool\"] = \"Cool\";\n        BlockBlobTier[\"Archive\"] = \"Archive\";\n    })(exports.BlockBlobTier || (exports.BlockBlobTier = {}));\n    (function (PremiumPageBlobTier) {\n        PremiumPageBlobTier[\"P4\"] = \"P4\";\n        PremiumPageBlobTier[\"P6\"] = \"P6\";\n        PremiumPageBlobTier[\"P10\"] = \"P10\";\n        PremiumPageBlobTier[\"P15\"] = \"P15\";\n        PremiumPageBlobTier[\"P20\"] = \"P20\";\n        PremiumPageBlobTier[\"P30\"] = \"P30\";\n        PremiumPageBlobTier[\"P40\"] = \"P40\";\n        PremiumPageBlobTier[\"P50\"] = \"P50\";\n        PremiumPageBlobTier[\"P60\"] = \"P60\";\n        PremiumPageBlobTier[\"P70\"] = \"P70\";\n        PremiumPageBlobTier[\"P80\"] = \"P80\";\n    })(exports.PremiumPageBlobTier || (exports.PremiumPageBlobTier = {}));\n    function toAccessTier(tier) {\n        if (tier == undefined) {\n            return undefined;\n        }\n        return tier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n    }\n    function ensureCpkIfSpecified(cpk, isHttps) {\n        if (cpk && !isHttps) {\n            throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n        }\n        if (cpk && !cpk.encryptionAlgorithm) {\n            cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n        }\n    }\n\n    /**\n     * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n     *\n     * ## URL encode and escape strategy for JSv10 SDKs\n     *\n     * When customers pass a URL string into XXXURL classes constrcutor, the URL string may already be URL encoded or not.\n     * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n     * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXURL constructors.\n     *\n     * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n     *\n     * This is what legacy V2 SDK does, simple and works for most of the cases.\n     * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n     *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n     * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n     *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n     *\n     * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n     * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n     * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n     * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n     * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n     *\n     * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n     *\n     * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n     * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n     *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n     * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n     *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n     * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n     *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n     *\n     * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n     * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n     * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n     * And following URL strings are invalid:\n     * - \"http://account.blob.core.windows.net/con/b%\"\n     * - \"http://account.blob.core.windows.net/con/b%2\"\n     * - \"http://account.blob.core.windows.net/con/b%G\"\n     *\n     * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n     *\n     * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `BlobURL.fromContainerURL(containerURL, blobName)`\n     *\n     * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n     *\n     * @export\n     * @param {string} url\n     * @returns {string}\n     */\n    function escapeURLPath(url) {\n        var urlParsed = URLBuilder.parse(url);\n        var path = urlParsed.getPath();\n        path = path || \"/\";\n        path = escape(path);\n        urlParsed.setPath(path);\n        return urlParsed.toString();\n    }\n    /**\n     * Internal escape method implmented Strategy Two mentioned in escapeURL() description.\n     *\n     * @param {string} text\n     * @returns {string}\n     */\n    function escape(text) {\n        return encodeURIComponent(text)\n            .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n            .replace(/'/g, \"%27\") // Escape for \"'\"\n            .replace(/\\+/g, \"%20\")\n            .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n    }\n    /**\n     * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n     * when URL path ends with a \"/\".\n     *\n     * @export\n     * @param {string} url Source URL string\n     * @param {string} name String to be appended to URL\n     * @returns {string} An updated URL string\n     */\n    function appendToURLPath(url, name) {\n        var urlParsed = URLBuilder.parse(url);\n        var path = urlParsed.getPath();\n        path = path ? (path.endsWith(\"/\") ? \"\" + path + name : path + \"/\" + name) : name;\n        urlParsed.setPath(path);\n        return urlParsed.toString();\n    }\n    /**\n     * Set URL parameter name and value. If name exists in URL parameters, old value\n     * will be replaced by name key. If not provide value, the parameter will be deleted.\n     *\n     * @export\n     * @param {string} url Source URL string\n     * @param {string} name Parameter name\n     * @param {string} [value] Parameter value\n     * @returns {string} An updated URL string\n     */\n    function setURLParameter(url, name, value) {\n        var urlParsed = URLBuilder.parse(url);\n        urlParsed.setQueryParameter(name, value);\n        return urlParsed.toString();\n    }\n    /**\n     * Get URL parameter by name.\n     *\n     * @export\n     * @param {string} url\n     * @param {string} name\n     * @returns {(string | string[] | undefined)}\n     */\n    function getURLParameter(url, name) {\n        var urlParsed = URLBuilder.parse(url);\n        return urlParsed.getQueryParameterValue(name);\n    }\n    /**\n     * Set URL host.\n     *\n     * @export\n     * @param {string} url Source URL string\n     * @param {string} host New host string\n     * @returns An updated URL string\n     */\n    function setURLHost(url, host) {\n        var urlParsed = URLBuilder.parse(url);\n        urlParsed.setHost(host);\n        return urlParsed.toString();\n    }\n    /**\n     * Get URL path from an URL string.\n     *\n     * @export\n     * @param {string} url Source URL string\n     * @returns {(string | undefined)}\n     */\n    function getURLPath(url) {\n        var urlParsed = URLBuilder.parse(url);\n        return urlParsed.getPath();\n    }\n    /**\n     * Get URL scheme from an URL string.\n     *\n     * @export\n     * @param {string} url Source URL string\n     * @returns {(string | undefined)}\n     */\n    function getURLScheme(url) {\n        var urlParsed = URLBuilder.parse(url);\n        return urlParsed.getScheme();\n    }\n    /**\n     * Get URL path and query from an URL string.\n     *\n     * @export\n     * @param {string} url Source URL string\n     * @returns {(string | undefined)}\n     */\n    function getURLPathAndQuery(url) {\n        var urlParsed = URLBuilder.parse(url);\n        var pathString = urlParsed.getPath();\n        if (!pathString) {\n            throw new RangeError(\"Invalid url without valid path.\");\n        }\n        var queryString = urlParsed.getQuery() || \"\";\n        queryString = queryString.trim();\n        if (queryString != \"\") {\n            queryString = queryString.startsWith(\"?\") ? queryString : \"?\" + queryString; // Ensure query string start with '?'\n        }\n        return \"\" + pathString + queryString;\n    }\n    /**\n     * Rounds a date off to seconds.\n     *\n     * @export\n     * @param {Date} date\n     * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n     *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n     * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n     */\n    function truncatedISO8061Date(date, withMilliseconds) {\n        if (withMilliseconds === void 0) { withMilliseconds = true; }\n        // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n        var dateString = date.toISOString();\n        return withMilliseconds\n            ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n            : dateString.substring(0, dateString.length - 5) + \"Z\";\n    }\n    /**\n     * Base64 encode.\n     *\n     * @export\n     * @param {string} content\n     * @returns {string}\n     */\n    function base64encode(content) {\n        return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n    }\n    /**\n     * Generate a 64 bytes base64 block ID string.\n     *\n     * @export\n     * @param {number} blockIndex\n     * @returns {string}\n     */\n    function generateBlockID(blockIDPrefix, blockIndex) {\n        // To generate a 64 bytes base64 string, source string should be 48\n        var maxSourceStringLength = 48;\n        // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n        var maxBlockIndexLength = 6;\n        var maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n        if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n            blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n        }\n        var res = blockIDPrefix +\n            padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n        return base64encode(res);\n    }\n    /**\n     * Delay specified time interval.\n     *\n     * @export\n     * @param {number} timeInMs\n     * @param {AbortSignalLike} [aborter]\n     * @param {Error} [abortError]\n     */\n    function delay$1(timeInMs, aborter, abortError) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var timeout;\n                        var abortHandler = function () {\n                            if (timeout !== undefined) {\n                                clearTimeout(timeout);\n                            }\n                            reject(abortError);\n                        };\n                        var resolveHandler = function () {\n                            if (aborter !== undefined) {\n                                aborter.removeEventListener(\"abort\", abortHandler);\n                            }\n                            resolve();\n                        };\n                        timeout = setTimeout(resolveHandler, timeInMs);\n                        if (aborter !== undefined) {\n                            aborter.addEventListener(\"abort\", abortHandler);\n                        }\n                    })];\n            });\n        });\n    }\n    /**\n     * String.prototype.padStart()\n     *\n     * @export\n     * @param {string} currentString\n     * @param {number} targetLength\n     * @param {string} [padString=\" \"]\n     * @returns {string}\n     */\n    function padStart(currentString, targetLength, padString) {\n        if (padString === void 0) { padString = \" \"; }\n        if (String.prototype.padStart) {\n            return currentString.padStart(targetLength, padString);\n        }\n        padString = padString || \" \";\n        if (currentString.length > targetLength) {\n            return currentString;\n        }\n        else {\n            targetLength = targetLength - currentString.length;\n            if (targetLength > padString.length) {\n                padString += padString.repeat(targetLength / padString.length);\n            }\n            return padString.slice(0, targetLength) + currentString;\n        }\n    }\n    /**\n     * If two strings are equal when compared case insensitive.\n     *\n     * @export\n     * @param {string} str1\n     * @param {string} str2\n     * @returns {boolean}\n     */\n    function iEqual(str1, str2) {\n        return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n    }\n\n    /**\n     * BrowserPolicy will handle differences between Node.js and browser runtime, including:\n     *\n     * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n     * BrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n     * thus avoid the browser cache.\n     *\n     * 2. Remove cookie header for security\n     *\n     * 3. Remove content-length header to avoid browsers warning\n     *\n     * @class BrowserPolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var BrowserPolicy = /** @class */ (function (_super) {\n        __extends(BrowserPolicy, _super);\n        /**\n         * Creates an instance of BrowserPolicy.\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @memberof BrowserPolicy\n         */\n        function BrowserPolicy(nextPolicy, options) {\n            return _super.call(this, nextPolicy, options) || this;\n        }\n        /**\n         * Sends out request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof BrowserPolicy\n         */\n        BrowserPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n                        request.url = setURLParameter(request.url, URLConstants.Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());\n                    }\n                    request.headers.remove(HeaderConstants.COOKIE);\n                    // According to XHR standards, content-length should be fully controlled by browsers\n                    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                });\n            });\n        };\n        return BrowserPolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * BrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n     *\n     * @export\n     * @class BrowserPolicyFactory\n     * @implements {RequestPolicyFactory}\n     */\n    var BrowserPolicyFactory = /** @class */ (function () {\n        function BrowserPolicyFactory() {\n        }\n        BrowserPolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new BrowserPolicy(nextPolicy, options);\n        };\n        return BrowserPolicyFactory;\n    }());\n\n    /**\n     * Credential is an abstract class for Azure Storage HTTP requests signing. This\n     * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n     *\n     * @export\n     * @abstract\n     * @class Credential\n     */\n    var Credential = /** @class */ (function () {\n        function Credential() {\n        }\n        /**\n         * Creates a RequestPolicy object.\n         *\n         * @param {RequestPolicy} _nextPolicy\n         * @param {RequestPolicyOptions} _options\n         * @returns {RequestPolicy}\n         * @memberof Credential\n         */\n        Credential.prototype.create = function (\n        // tslint:disable-next-line:variable-name\n        _nextPolicy, \n        // tslint:disable-next-line:variable-name\n        _options) {\n            throw new Error(\"Method should be implemented in children classes.\");\n        };\n        return Credential;\n    }());\n\n    /*\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for\n     * license information.\n     *\n     * Code generated by Microsoft (R) AutoRest Code Generator.\n     * Changes may cause incorrect behavior and will be lost if the code is\n     * regenerated.\n     */\n    var packageName = \"azure-storage-blob\";\n    var packageVersion = \"1.0.0\";\n    var StorageClientContext = /** @class */ (function (_super) {\n        __extends(StorageClientContext, _super);\n        /**\n         * Initializes a new instance of the StorageClientContext class.\n         * @param url The URL of the service account, container, or blob that is the targe of the desired\n         * operation.\n         * @param [options] The parameter options\n         */\n        function StorageClientContext(url, options) {\n            var _this = this;\n            if (url == undefined) {\n                throw new Error(\"'url' cannot be null.\");\n            }\n            if (!options) {\n                options = {};\n            }\n            if (!options.userAgent) {\n                var defaultUserAgent = getDefaultUserAgentValue();\n                options.userAgent = packageName + \"/\" + packageVersion + \" \" + defaultUserAgent;\n            }\n            _this = _super.call(this, undefined, options) || this;\n            _this.version = '2019-02-02';\n            _this.baseUri = \"{url}\";\n            _this.requestContentType = \"application/json; charset=utf-8\";\n            _this.url = url;\n            if (options.pathRenameMode !== null && options.pathRenameMode !== undefined) {\n                _this.pathRenameMode = options.pathRenameMode;\n            }\n            return _this;\n        }\n        return StorageClientContext;\n    }(ServiceClient));\n\n    /**\n     * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n     *\n     * @class KeepAlivePolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var KeepAlivePolicy = /** @class */ (function (_super) {\n        __extends(KeepAlivePolicy, _super);\n        /**\n         * Creates an instance of KeepAlivePolicy.\n         *\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @param {IKeepAliveOptions} [keepAliveOptions]\n         * @memberof KeepAlivePolicy\n         */\n        function KeepAlivePolicy(nextPolicy, options, keepAliveOptions) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.keepAliveOptions = keepAliveOptions;\n            return _this;\n        }\n        /**\n         * Sends out request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof KeepAlivePolicy\n         */\n        KeepAlivePolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    request.keepAlive = this.keepAliveOptions.enable;\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                });\n            });\n        };\n        return KeepAlivePolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * KeepAlivePolicyFactory is a factory class helping generating KeepAlivePolicy objects.\n     *\n     * @export\n     * @class KeepAlivePolicyFactory\n     * @implements {RequestPolicyFactory}\n     */\n    var KeepAlivePolicyFactory = /** @class */ (function () {\n        /**\n         * Creates an instance of KeepAlivePolicyFactory.\n         *\n         * @param {IKeepAliveOptions} [telemetry]\n         * @memberof KeepAlivePolicyFactory\n         */\n        function KeepAlivePolicyFactory(keepAliveOptions) {\n            if (keepAliveOptions === void 0) { keepAliveOptions = { enable: true }; }\n            this.keepAliveOptions = keepAliveOptions;\n        }\n        KeepAlivePolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new KeepAlivePolicy(nextPolicy, options, this.keepAliveOptions);\n        };\n        return KeepAlivePolicyFactory;\n    }());\n\n    // Default values of IRetryOptions\n    var DEFAULT_REQUEST_LOG_OPTIONS = {\n        logWarningIfTryOverThreshold: 3000\n    };\n    /**\n     * LoggingPolicy is a policy used to log requests.\n     *\n     * @class LoggingPolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var LoggingPolicy = /** @class */ (function (_super) {\n        __extends(LoggingPolicy, _super);\n        /**\n         * Creates an instance of LoggingPolicy.\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @param {IRequestLogOptions} [loggingOptions=DEFAULT_REQUEST_LOG_OPTIONS]\n         * @memberof LoggingPolicy\n         */\n        function LoggingPolicy(nextPolicy, options, loggingOptions) {\n            if (loggingOptions === void 0) { loggingOptions = DEFAULT_REQUEST_LOG_OPTIONS; }\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.tryCount = 0;\n            _this.operationStartTime = new Date();\n            _this.requestStartTime = new Date();\n            _this.loggingOptions = loggingOptions;\n            return _this;\n        }\n        /**\n         * Sends out request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof LoggingPolicy\n         */\n        LoggingPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                var safeURL, response, requestEndTime, requestCompletionTime, operationDuration, currentLevel, logMessage, errorString, messageInfo, err_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.tryCount++;\n                            this.requestStartTime = new Date();\n                            if (this.tryCount === 1) {\n                                this.operationStartTime = this.requestStartTime;\n                            }\n                            safeURL = request.url;\n                            if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n                                safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n                            }\n                            this.log(exports.HttpPipelineLogLevel.INFO, \"'\" + safeURL + \"'==> OUTGOING REQUEST (Try number=\" + this.tryCount + \").\");\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, this._nextPolicy.sendRequest(request)];\n                        case 2:\n                            response = _a.sent();\n                            requestEndTime = new Date();\n                            requestCompletionTime = requestEndTime.getTime() - this.requestStartTime.getTime();\n                            operationDuration = requestEndTime.getTime() - this.operationStartTime.getTime();\n                            currentLevel = exports.HttpPipelineLogLevel.INFO;\n                            logMessage = \"\";\n                            if (this.shouldLog(exports.HttpPipelineLogLevel.INFO)) {\n                                // Assume success and default to informational logging.\n                                logMessage = \"Successfully Received Response. \";\n                            }\n                            // If the response took too long, we'll upgrade to warning.\n                            if (requestCompletionTime >= this.loggingOptions.logWarningIfTryOverThreshold) {\n                                // Log a warning if the try duration exceeded the specified threshold.\n                                if (this.shouldLog(exports.HttpPipelineLogLevel.WARNING)) {\n                                    currentLevel = exports.HttpPipelineLogLevel.WARNING;\n                                    logMessage = \"SLOW OPERATION. Duration > \" + this.loggingOptions.logWarningIfTryOverThreshold + \" ms. \";\n                                }\n                            }\n                            if ((response.status >= 400 &&\n                                response.status <= 499 &&\n                                (response.status !== HTTPURLConnection.HTTP_NOT_FOUND &&\n                                    response.status !== HTTPURLConnection.HTTP_CONFLICT &&\n                                    response.status !== HTTPURLConnection.HTTP_PRECON_FAILED &&\n                                    response.status !== HTTPURLConnection.HTTP_RANGE_NOT_SATISFIABLE)) ||\n                                (response.status >= 500 && response.status <= 509)) {\n                                errorString = \"REQUEST ERROR: HTTP request failed with status code: \" + response.status + \". \";\n                                logMessage = errorString;\n                                currentLevel = exports.HttpPipelineLogLevel.ERROR;\n                            }\n                            messageInfo = \"Request try:\" + this.tryCount + \", status:\" + response.status + \" request duration:\" + requestCompletionTime + \" ms, operation duration:\" + operationDuration + \" ms\\n\";\n                            this.log(currentLevel, logMessage + messageInfo);\n                            return [2 /*return*/, response];\n                        case 3:\n                            err_1 = _a.sent();\n                            this.log(exports.HttpPipelineLogLevel.ERROR, \"Unexpected failure attempting to make request. Error message: \" + err_1.message);\n                            throw err_1;\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        return LoggingPolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * LoggingPolicyFactory is a factory class helping generating LoggingPolicy objects.\n     *\n     * @export\n     * @class LoggingPolicyFactory\n     * @implements {RequestPolicyFactory}\n     */\n    var LoggingPolicyFactory = /** @class */ (function () {\n        function LoggingPolicyFactory(loggingOptions) {\n            this.loggingOptions = loggingOptions;\n        }\n        LoggingPolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new LoggingPolicy(nextPolicy, options, this.loggingOptions);\n        };\n        return LoggingPolicyFactory;\n    }());\n\n    /**\n     * A Pipeline class containing HTTP request policies.\n     * You can create a default Pipeline by calling StorageURL.newPipeline().\n     * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n     * Refer to StorageURL.newPipeline() and provided policies as reference before\n     * implementing your customized Pipeline.\n     *\n     * @export\n     * @class Pipeline\n     */\n    var Pipeline = /** @class */ (function () {\n        /**\n         * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n         *\n         * @param {RequestPolicyFactory[]} factories\n         * @param {IPipelineOptions} [options={}]\n         * @memberof Pipeline\n         */\n        function Pipeline(factories, options) {\n            if (options === void 0) { options = {}; }\n            this.factories = factories;\n            this.options = options;\n        }\n        /**\n         * Transfer Pipeline object to ServiceClientOptions object which required by\n         * ServiceClient constructor.\n         *\n         * @returns {ServiceClientOptions}\n         * @memberof Pipeline\n         */\n        Pipeline.prototype.toServiceClientOptions = function () {\n            return {\n                httpClient: this.options.HTTPClient,\n                httpPipelineLogger: this.options.logger,\n                requestPolicyFactories: this.factories\n            };\n        };\n        return Pipeline;\n    }());\n\n    (function (RetryPolicyType) {\n        /**\n         * Exponential retry. Retry time delay grows exponentially.\n         */\n        RetryPolicyType[RetryPolicyType[\"EXPONENTIAL\"] = 0] = \"EXPONENTIAL\";\n        /**\n         * Linear retry. Retry time delay grows linearly.\n         */\n        RetryPolicyType[RetryPolicyType[\"FIXED\"] = 1] = \"FIXED\";\n    })(exports.RetryPolicyType || (exports.RetryPolicyType = {}));\n    // Default values of IRetryOptions\n    var DEFAULT_RETRY_OPTIONS = {\n        maxRetryDelayInMs: 120 * 1000,\n        maxTries: 4,\n        retryDelayInMs: 4 * 1000,\n        retryPolicyType: exports.RetryPolicyType.EXPONENTIAL,\n        secondaryHost: \"\",\n        tryTimeoutInMs: undefined // Use server side default timeout strategy\n    };\n    var RETRY_ABORT_ERROR = new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR);\n    /**\n     * Retry policy with exponential retry and linear retry implemented.\n     *\n     * @class RetryPolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var RetryPolicy = /** @class */ (function (_super) {\n        __extends(RetryPolicy, _super);\n        /**\n         * Creates an instance of RetryPolicy.\n         *\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @param {IRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n         * @memberof RetryPolicy\n         */\n        function RetryPolicy(nextPolicy, options, retryOptions) {\n            if (retryOptions === void 0) { retryOptions = DEFAULT_RETRY_OPTIONS; }\n            var _this = _super.call(this, nextPolicy, options) || this;\n            // Initialize retry options\n            _this.retryOptions = {\n                retryPolicyType: retryOptions.retryPolicyType\n                    ? retryOptions.retryPolicyType\n                    : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n                maxTries: retryOptions.maxTries && retryOptions.maxTries >= 1\n                    ? Math.floor(retryOptions.maxTries)\n                    : DEFAULT_RETRY_OPTIONS.maxTries,\n                tryTimeoutInMs: retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n                    ? retryOptions.tryTimeoutInMs\n                    : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n                retryDelayInMs: retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n                    ? Math.min(retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs\n                        ? retryOptions.maxRetryDelayInMs\n                        : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs)\n                    : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n                maxRetryDelayInMs: retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n                    ? retryOptions.maxRetryDelayInMs\n                    : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n                secondaryHost: retryOptions.secondaryHost\n                    ? retryOptions.secondaryHost\n                    : DEFAULT_RETRY_OPTIONS.secondaryHost\n            };\n            return _this;\n        }\n        /**\n         * Sends request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof RetryPolicy\n         */\n        RetryPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.attemptSendRequest(request, false, 1)];\n                });\n            });\n        };\n        /**\n         * Decide and perform next retry. Won't mutate request parameter.\n         *\n         * @protected\n         * @param {WebResource} request\n         * @param {HttpOperationResponse} response\n         * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n         *                                   the resource was not found. This may be due to replication delay. So, in this\n         *                                   case, we'll never try the secondary again for this operation.\n         * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n         *                                   the attempt will be performed by this method call.\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof RetryPolicy\n         */\n        RetryPolicy.prototype.attemptSendRequest = function (request, secondaryHas404, attempt) {\n            return __awaiter(this, void 0, void 0, function () {\n                var newRequest, isPrimaryRetry, response, err_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            newRequest = request.clone();\n                            isPrimaryRetry = secondaryHas404 ||\n                                !this.retryOptions.secondaryHost ||\n                                !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n                                attempt % 2 === 1;\n                            if (!isPrimaryRetry) {\n                                newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost);\n                            }\n                            // Set the server-side timeout query parameter \"timeout=[seconds]\"\n                            if (this.retryOptions.tryTimeoutInMs) {\n                                newRequest.url = setURLParameter(newRequest.url, URLConstants.Parameters.TIMEOUT, Math.floor(this.retryOptions.tryTimeoutInMs / 1000).toString());\n                            }\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            this.logf(exports.HttpPipelineLogLevel.INFO, \"RetryPolicy: =====> Try=\" + attempt + \" \" + (isPrimaryRetry ? \"Primary\" : \"Secondary\"));\n                            return [4 /*yield*/, this._nextPolicy.sendRequest(newRequest)];\n                        case 2:\n                            response = _a.sent();\n                            if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n                                return [2 /*return*/, response];\n                            }\n                            secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _a.sent();\n                            this.logf(exports.HttpPipelineLogLevel.ERROR, \"RetryPolicy: Caught error, message: \" + err_1.message + \", code: \" + err_1.code);\n                            if (!this.shouldRetry(isPrimaryRetry, attempt, response, err_1)) {\n                                throw err_1;\n                            }\n                            return [3 /*break*/, 4];\n                        case 4: return [4 /*yield*/, this.delay(isPrimaryRetry, attempt, request.abortSignal)];\n                        case 5:\n                            _a.sent();\n                            return [4 /*yield*/, this.attemptSendRequest(request, secondaryHas404, ++attempt)];\n                        case 6: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        /**\n         * Decide whether to retry according to last HTTP response and retry counters.\n         *\n         * @protected\n         * @param {boolean} isPrimaryRetry\n         * @param {number} attempt\n         * @param {HttpOperationResponse} [response]\n         * @param {RestError} [err]\n         * @returns {boolean}\n         * @memberof RetryPolicy\n         */\n        RetryPolicy.prototype.shouldRetry = function (isPrimaryRetry, attempt, response, err) {\n            if (attempt >= this.retryOptions.maxTries) {\n                this.logf(exports.HttpPipelineLogLevel.INFO, \"RetryPolicy: Attempt(s) \" + attempt + \" >= maxTries \" + this.retryOptions\n                    .maxTries + \", no further try.\");\n                return false;\n            }\n            // Handle network failures, you may need to customize the list when you implement\n            // your own http client\n            var retriableErrors = [\n                \"ETIMEDOUT\",\n                \"ESOCKETTIMEDOUT\",\n                \"ECONNREFUSED\",\n                \"ECONNRESET\",\n                \"ENOENT\",\n                \"ENOTFOUND\",\n                \"TIMEOUT\",\n                \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n            ];\n            if (err) {\n                for (var _i = 0, retriableErrors_1 = retriableErrors; _i < retriableErrors_1.length; _i++) {\n                    var retriableError = retriableErrors_1[_i];\n                    if (err.name.toUpperCase().includes(retriableError) ||\n                        err.message.toUpperCase().includes(retriableError) ||\n                        (err.code && err.code.toString().toUpperCase().includes(retriableError))) {\n                        this.logf(exports.HttpPipelineLogLevel.INFO, \"RetryPolicy: Network error \" + retriableError + \" found, will retry.\");\n                        return true;\n                    }\n                }\n            }\n            // If attempt was against the secondary & it returned a StatusNotFound (404), then\n            // the resource was not found. This may be due to replication delay. So, in this\n            // case, we'll never try the secondary again for this operation.\n            if (response || err) {\n                var statusCode = response ? response.status : err ? err.statusCode : 0;\n                if (!isPrimaryRetry && statusCode === 404) {\n                    this.logf(exports.HttpPipelineLogLevel.INFO, \"RetryPolicy: Secondary access with 404, will retry.\");\n                    return true;\n                }\n                // Server internal error or server timeout\n                if (statusCode === 503 || statusCode === 500) {\n                    this.logf(exports.HttpPipelineLogLevel.INFO, \"RetryPolicy: Will retry for status code \" + statusCode + \".\");\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n         * This is to log for debugging purposes only.\n         * Comment/uncomment as necessary for releasing/debugging.\n         *\n         * @private\n         * @param {HttpPipelineLogLevel} level\n         * @param {string} message\n         * @memberof RetryPolicy\n         */\n        // tslint:disable-next-line:variable-name\n        RetryPolicy.prototype.logf = function (_level, _message) {\n            // this.log(_level, _message);\n        };\n        /**\n         * Delay a calculated time between retries.\n         *\n         * @private\n         * @param {boolean} isPrimaryRetry\n         * @param {number} attempt\n         * @param {AbortSignalLike} [abortSignal]\n         * @returns\n         * @memberof RetryPolicy\n         */\n        RetryPolicy.prototype.delay = function (isPrimaryRetry, attempt, abortSignal) {\n            return __awaiter(this, void 0, void 0, function () {\n                var delayTimeInMs;\n                return __generator(this, function (_a) {\n                    delayTimeInMs = 0;\n                    if (isPrimaryRetry) {\n                        switch (this.retryOptions.retryPolicyType) {\n                            case exports.RetryPolicyType.EXPONENTIAL:\n                                delayTimeInMs = Math.min((Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs, this.retryOptions.maxRetryDelayInMs);\n                                break;\n                            case exports.RetryPolicyType.FIXED:\n                                delayTimeInMs = this.retryOptions.retryDelayInMs;\n                                break;\n                        }\n                    }\n                    else {\n                        delayTimeInMs = Math.random() * 1000;\n                    }\n                    this.logf(exports.HttpPipelineLogLevel.INFO, \"RetryPolicy: Delay for \" + delayTimeInMs + \"ms\");\n                    return [2 /*return*/, delay$1(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR)];\n                });\n            });\n        };\n        return RetryPolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * RetryPolicyFactory is a factory class helping generating RetryPolicy objects.\n     *\n     * @export\n     * @class RetryPolicyFactory\n     * @implements {RequestPolicyFactory}\n     */\n    var RetryPolicyFactory = /** @class */ (function () {\n        /**\n         * Creates an instance of RetryPolicyFactory.\n         * @param {IRetryOptions} [retryOptions]\n         * @memberof RetryPolicyFactory\n         */\n        function RetryPolicyFactory(retryOptions) {\n            this.retryOptions = retryOptions;\n        }\n        RetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new RetryPolicy(nextPolicy, options, this.retryOptions);\n        };\n        return RetryPolicyFactory;\n    }());\n\n    /**\n     * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n     *\n     * @class TelemetryPolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var TelemetryPolicy = /** @class */ (function (_super) {\n        __extends(TelemetryPolicy, _super);\n        /**\n         * Creates an instance of TelemetryPolicy.\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @param {ITelemetryOptions} [telemetry]\n         * @memberof TelemetryPolicy\n         */\n        function TelemetryPolicy(nextPolicy, options, telemetry) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.telemetry = telemetry;\n            return _this;\n        }\n        /**\n         * Sends out request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof TelemetryPolicy\n         */\n        TelemetryPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                });\n            });\n        };\n        return TelemetryPolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * TelemetryPolicyFactory is a factory class helping generating TelemetryPolicy objects.\n     *\n     * @export\n     * @class TelemetryPolicyFactory\n     * @implements {RequestPolicyFactory}\n     */\n    var TelemetryPolicyFactory = /** @class */ (function () {\n        /**\n         * Creates an instance of TelemetryPolicyFactory.\n         * @param {ITelemetryOptions} [telemetry]\n         * @memberof TelemetryPolicyFactory\n         */\n        function TelemetryPolicyFactory(telemetry) {\n            var userAgentInfo = [];\n            this.telemetryString = userAgentInfo.join(\" \");\n        }\n        TelemetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n        };\n        return TelemetryPolicyFactory;\n    }());\n\n    /**\n     * UniqueRequestIDPolicy generates an UUID as x-ms-request-id header value.\n     *\n     * @class UniqueRequestIDPolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var UniqueRequestIDPolicy = /** @class */ (function (_super) {\n        __extends(UniqueRequestIDPolicy, _super);\n        /**\n         * Creates an instance of UniqueRequestIDPolicy.\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @memberof UniqueRequestIDPolicy\n         */\n        function UniqueRequestIDPolicy(nextPolicy, options) {\n            return _super.call(this, nextPolicy, options) || this;\n        }\n        /**\n         * Sends request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof UniqueRequestIDPolicy\n         */\n        UniqueRequestIDPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    if (!request.headers.contains(HeaderConstants.X_MS_CLIENT_REQUEST_ID)) {\n                        request.headers.set(HeaderConstants.X_MS_CLIENT_REQUEST_ID, generateUuid());\n                    }\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                });\n            });\n        };\n        return UniqueRequestIDPolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * UniqueRequestIDPolicyFactory is a factory class helping generating UniqueRequestIDPolicy objects.\n     *\n     * @export\n     * @class UniqueRequestIDPolicyFactory\n     * @implements {RequestPolicyFactory}\n     */\n    var UniqueRequestIDPolicyFactory = /** @class */ (function () {\n        function UniqueRequestIDPolicyFactory() {\n        }\n        UniqueRequestIDPolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new UniqueRequestIDPolicy(nextPolicy, options);\n        };\n        return UniqueRequestIDPolicyFactory;\n    }());\n\n    /**\n     * Credential policy used to sign HTTP(S) requests before sending. This is an\n     * abstract class.\n     *\n     * @export\n     * @abstract\n     * @class CredentialPolicy\n     * @extends {BaseRequestPolicy}\n     */\n    var CredentialPolicy = /** @class */ (function (_super) {\n        __extends(CredentialPolicy, _super);\n        function CredentialPolicy() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Sends out request.\n         *\n         * @param {WebResource} request\n         * @returns {Promise<HttpOperationResponse>}\n         * @memberof CredentialPolicy\n         */\n        CredentialPolicy.prototype.sendRequest = function (request) {\n            return this._nextPolicy.sendRequest(this.signRequest(request));\n        };\n        /**\n         * Child classes must implement this method with request signing. This method\n         * will be executed in sendRequest().\n         *\n         * @protected\n         * @abstract\n         * @param {WebResource} request\n         * @returns {WebResource}\n         * @memberof CredentialPolicy\n         */\n        CredentialPolicy.prototype.signRequest = function (request) {\n            // Child classes must override this method with request signing. This method\n            // will be executed in sendRequest().\n            return request;\n        };\n        return CredentialPolicy;\n    }(BaseRequestPolicy));\n\n    /**\n     * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n     * or for use with Shared Access Signatures (SAS).\n     *\n     * @export\n     * @class AnonymousCredentialPolicy\n     * @extends {CredentialPolicy}\n     */\n    var AnonymousCredentialPolicy = /** @class */ (function (_super) {\n        __extends(AnonymousCredentialPolicy, _super);\n        /**\n         * Creates an instance of AnonymousCredentialPolicy.\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @memberof AnonymousCredentialPolicy\n         */\n        function AnonymousCredentialPolicy(nextPolicy, options) {\n            return _super.call(this, nextPolicy, options) || this;\n        }\n        return AnonymousCredentialPolicy;\n    }(CredentialPolicy));\n\n    /**\n     * AnonymousCredential provides a credentialPolicyCreator member used to create\n     * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n     * HTTP(S) requests that read public resources or for use with Shared Access\n     * Signatures (SAS).\n     *\n     * @export\n     * @class AnonymousCredential\n     * @extends {Credential}\n     */\n    var AnonymousCredential = /** @class */ (function (_super) {\n        __extends(AnonymousCredential, _super);\n        function AnonymousCredential() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Creates an AnonymousCredentialPolicy object.\n         *\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @returns {AnonymousCredentialPolicy}\n         * @memberof AnonymousCredential\n         */\n        AnonymousCredential.prototype.create = function (nextPolicy, options) {\n            return new AnonymousCredentialPolicy(nextPolicy, options);\n        };\n        return AnonymousCredential;\n    }(Credential));\n\n    /**\n     * A ServiceURL represents a based URL class for ServiceURL, ContainerURL and etc.\n     *\n     * @export\n     * @class StorageURL\n     */\n    var StorageURL = /** @class */ (function () {\n        /**\n         * Creates an instance of StorageURL.\n         * @param {string} url\n         * @param {Pipeline} pipeline\n         * @memberof StorageURL\n         */\n        function StorageURL(url, pipeline) {\n            // URL should be encoded and only once, protocol layer shouldn't encode URL again\n            this.url = escapeURLPath(url);\n            this.pipeline = pipeline;\n            this.storageClientContext = new StorageClientContext(this.url, pipeline.toServiceClientOptions());\n            this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n            this.credential = new AnonymousCredential();\n            for (var _i = 0, _a = this.pipeline.factories; _i < _a.length; _i++) {\n                var factory = _a[_i];\n                if (factory instanceof Credential) {\n                    this.credential = factory;\n                }\n            }\n            // Override protocol layer's default content-type\n            var storageClientContext = this.storageClientContext;\n            storageClientContext.requestContentType = undefined;\n        }\n        /**\n         * A static method used to create a new Pipeline object with Credential provided.\n         *\n         * @static\n         * @param {Credential} credential Such as AnonymousCredential, SharedKeyCredential or TokenCredential.\n         * @param {INewPipelineOptions} [pipelineOptions] Optional. Options.\n         * @returns {Pipeline} A new Pipeline object.\n         * @memberof Pipeline\n         */\n        StorageURL.newPipeline = function (credential, pipelineOptions) {\n            if (pipelineOptions === void 0) { pipelineOptions = {}; }\n            // Order is important. Closer to the API at the top & closer to the network at the bottom.\n            // The credential's policy factory must appear close to the wire so it can sign any\n            // changes made by other factories (like UniqueRequestIDPolicyFactory)\n            var factories = [\n                new KeepAlivePolicyFactory(pipelineOptions.keepAliveOptions),\n                new TelemetryPolicyFactory(pipelineOptions.telemetry),\n                new UniqueRequestIDPolicyFactory(),\n                new BrowserPolicyFactory(),\n                deserializationPolicy(),\n                new RetryPolicyFactory(pipelineOptions.retryOptions),\n                new LoggingPolicyFactory(),\n                credential\n            ];\n            return new Pipeline(factories, {\n                HTTPClient: pipelineOptions.httpClient,\n                logger: pipelineOptions.logger\n            });\n        };\n        return StorageURL;\n    }());\n\n    /**\n     * A BlobURL represents a URL to an Azure Storage blob; the blob may be a block blob,\n     * append blob, or page blob.\n     *\n     * @export\n     * @class BlobURL\n     * @extends {StorageURL}\n     */\n    var BlobURL = /** @class */ (function (_super) {\n        __extends(BlobURL, _super);\n        /**\n         * Creates an instance of BlobURL.\n         * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n         * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         * If a blob name includes ? or %, blob name must be encoded in the URL.\n         *\n         * @param {string} url A URL string pointing to Azure Storage blob, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n         *                     You can append a SAS if using AnonymousCredential, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n         *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n         *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n         *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n         * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n         *                            pipeline, or provide a customized pipeline.\n         * @memberof BlobURL\n         */\n        function BlobURL(url, pipeline) {\n            var _this = _super.call(this, url, pipeline) || this;\n            _this.blobContext = new Blob$1(_this.storageClientContext);\n            return _this;\n        }\n        /**\n         * Creates a BlobURL object from an ContainerURL object.\n         *\n         * @static\n         * @param {ContainerURL} containerURL A ContainerURL object\n         * @param {string} blobName A blob name\n         * @returns\n         * @memberof BlobURL\n         */\n        BlobURL.fromContainerURL = function (containerURL, blobName) {\n            return new BlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n        };\n        /**\n         * Creates a new BlobURL object identical to the source but with the\n         * specified request policy pipeline.\n         *\n         * @param {Pipeline} pipeline\n         * @returns {BlobURL}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.withPipeline = function (pipeline) {\n            return new BlobURL(this.url, pipeline);\n        };\n        /**\n         * Creates a new BlobURL object identical to the source but with the specified snapshot timestamp.\n         * Provide \"\" will remove the snapshot and return a URL to the base blob.\n         *\n         * @param {string} snapshot\n         * @returns {BlobURL} A new BlobURL object identical to the source but with the specified snapshot timestamp\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.withSnapshot = function (snapshot) {\n            return new BlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n        };\n        /**\n         * Reads or downloads a blob from the system, including its metadata and properties.\n         * You can also call Get Blob to read a snapshot.\n         *\n         * * In Node.js, data returns in a Readable stream readableStreamBody\n         * * In browsers, data returns in a promise blobBody\n         *\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} offset From which position of the blob to download, >= 0\n         * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n         * @param {IBlobDownloadOptions} [options]\n         * @returns {Promise<Models.BlobDownloadResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.download = function (aborter, offset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var res;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            options.blobAccessConditions = options.blobAccessConditions || {};\n                            options.blobAccessConditions.modifiedAccessConditions =\n                                options.blobAccessConditions.modifiedAccessConditions || {};\n                            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                            return [4 /*yield*/, this.blobContext.download({\n                                    abortSignal: aborter,\n                                    leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                                    modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                                    onDownloadProgress: isNode ? undefined : options.progress,\n                                    range: offset === 0 && !count ? undefined : rangeToString({ offset: offset, count: count }),\n                                    rangeGetContentMD5: options.rangeGetContentMD5,\n                                    rangeGetContentCRC64: options.rangeGetContentCrc64,\n                                    snapshot: options.snapshot,\n                                    cpkInfo: options.customerProvidedKey\n                                })];\n                        case 1:\n                            res = _a.sent();\n                            // Return browser response immediately\n                            if (!isNode) {\n                                return [2 /*return*/, res];\n                            }\n                            // We support retrying when download stream unexpected ends in Node.js runtime\n                            // Following code shouldn't be bundled into browser build, however some\n                            // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n                            // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n                            // The config is in package.json \"browser\" field\n                            if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n                                // TODO: Default value or make it a required parameter?\n                                options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n                            }\n                            if (res.contentLength === undefined) {\n                                throw new RangeError(\"File download response doesn't contain valid content length header\");\n                            }\n                            if (!res.eTag) {\n                                throw new RangeError(\"File download response doesn't contain valid etag header\");\n                            }\n                            return [2 /*return*/, new BlobDownloadResponse(aborter, res, function (start) { return __awaiter(_this, void 0, void 0, function () {\n                                    var updatedOptions;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                updatedOptions = {\n                                                    leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                                                    modifiedAccessConditions: {\n                                                        ifMatch: options.blobAccessConditions.modifiedAccessConditions.ifMatch || res.eTag,\n                                                        ifModifiedSince: options.blobAccessConditions.modifiedAccessConditions\n                                                            .ifModifiedSince,\n                                                        ifNoneMatch: options.blobAccessConditions.modifiedAccessConditions.ifNoneMatch,\n                                                        ifUnmodifiedSince: options.blobAccessConditions.modifiedAccessConditions\n                                                            .ifUnmodifiedSince\n                                                    },\n                                                    range: rangeToString({\n                                                        count: offset + res.contentLength - start,\n                                                        offset: start\n                                                    }),\n                                                    rangeGetContentMD5: options.rangeGetContentMD5,\n                                                    rangeGetContentCRC64: options.rangeGetContentCrc64,\n                                                    snapshot: options.snapshot,\n                                                    cpkInfo: options.customerProvidedKey\n                                                };\n                                                return [4 /*yield*/, this.blobContext.download(__assign({ abortSignal: aborter }, updatedOptions))];\n                                            case 1: \n                                            // Debug purpose only\n                                            // console.log(\n                                            //   `Read from internal stream, range: ${\n                                            //     updatedOptions.range\n                                            //   }, options: ${JSON.stringify(updatedOptions)}`\n                                            // );\n                                            return [2 /*return*/, (_a.sent()).readableStreamBody];\n                                        }\n                                    });\n                                }); }, offset, res.contentLength, {\n                                    maxRetryRequests: options.maxRetryRequests,\n                                    progress: options.progress\n                                })];\n                    }\n                });\n            });\n        };\n        /**\n         * Returns all user-defined metadata, standard HTTP properties, and system properties\n         * for the blob. It does not return the content of the blob.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IBlobGetPropertiesOptions} [options]\n         * @returns {Promise<Models.BlobGetPropertiesResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.getProperties = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blobContext.getProperties({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Marks the specified blob or snapshot for deletion. The blob is later deleted\n         * during garbage collection. Note that in order to delete a blob, you must delete\n         * all of its snapshots. You can delete both at the same time with the Delete\n         * Blob operation.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IBlobDeleteOptions} [options]\n         * @returns {Promise<Models.BlobDeleteResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.delete = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    return [2 /*return*/, this.blobContext.deleteMethod({\n                            abortSignal: aborter,\n                            deleteSnapshots: options.deleteSnapshots,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Restores the contents and metadata of soft deleted blob and any associated\n         * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n         * or later.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @returns {Promise<Models.BlobUndeleteResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.undelete = function (aborter) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.undelete({\n                            abortSignal: aborter\n                        })];\n                });\n            });\n        };\n        /**\n         * Sets system properties on the blob.\n         *\n         * If no value provided, or no value provided for the specificed blob HTTP headers,\n         * these blob HTTP headers without a value will be cleared.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {Models.BlobHTTPHeaders} [blobHTTPHeaders] If no value provided, or no value provided for\n         *                                                   the specificed blob HTTP headers, these blob HTTP\n         *                                                   headers without a value will be cleared.\n         * @param {IBlobSetHTTPHeadersOptions} [options]\n         * @returns {Promise<Models.BlobSetHTTPHeadersResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.setHTTPHeaders = function (aborter, blobHTTPHeaders, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blobContext.setHTTPHeaders({\n                            abortSignal: aborter,\n                            blobHTTPHeaders: blobHTTPHeaders,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n         *\n         * If no option provided, or no metadata defined in the parameter, the blob\n         * metadata will be removed.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IMetadata} [metadata] Replace existing metadata with this value.\n         *                               If no value provided the existing metadata will be removed.\n         * @param {IBlobSetMetadataOptions} [options]\n         * @returns {Promise<Models.BlobSetMetadataResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.setMetadata = function (aborter, metadata, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blobContext.setMetadata({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            metadata: metadata,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Establishes and manages a lock on a blob for write and delete operations.\n         * The lock duration can be 15 to 60 seconds, or can be infinite.\n         * In versions prior to 2012-02-12, the lock duration is 60 seconds.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n         * @param {number} duration The lock duration can be 15 to 60 seconds, or can be infinite\n         * @param {IBlobAcquireLeaseOptions} [options]\n         * @returns {Promise<Models.BlobAcquireLeaseResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.acquireLease = function (aborter, proposedLeaseId, duration, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.acquireLease({\n                            abortSignal: aborter,\n                            duration: duration,\n                            modifiedAccessConditions: options.modifiedAccessConditions,\n                            proposedLeaseId: proposedLeaseId\n                        })];\n                });\n            });\n        };\n        /**\n         * To free the lease if it is no longer needed so that another client may immediately\n         * acquire a lease against the blob.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} leaseId\n         * @param {IBlobReleaseLeaseOptions} [options]\n         * @returns {Promise<Models.BlobReleaseLeaseResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.releaseLease = function (aborter, leaseId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.releaseLease(leaseId, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * To renew an existing lease.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} leaseId\n         * @param {IBlobRenewLeaseOptions} [options]\n         * @returns {Promise<Models.BlobRenewLeaseResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.renewLease = function (aborter, leaseId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.renewLease(leaseId, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * To change the ID of an existing lease.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} leaseId\n         * @param {string} proposedLeaseId\n         * @param {IBlobChangeLeaseOptions} [options]\n         * @returns {Promise<Models.BlobChangeLeaseResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.changeLease = function (aborter, leaseId, proposedLeaseId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.changeLease(leaseId, proposedLeaseId, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * To end the lease but ensure that another client cannot acquire a new lease\n         * until the current lease period has expired.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} [breakPeriod]\n         * @param {IBlobBreakLeaseOptions} [options]\n         * @returns {Promise<Models.BlobBreakLeaseResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.breakLease = function (aborter, breakPeriod, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.breakLease({\n                            abortSignal: aborter,\n                            breakPeriod: breakPeriod,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Creates a read-only snapshot of a blob.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IBlobCreateSnapshotOptions} [options]\n         * @returns {Promise<Models.BlobCreateSnapshotResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.createSnapshot = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blobContext.createSnapshot({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            metadata: options.metadata,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Asynchronously copies a blob to a destination within the storage account.\n         * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n         * a committed blob in any Azure storage account.\n         * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n         * an Azure file in any Azure storage account.\n         * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n         * operation to copy from another storage account.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} copySource\n         * @param {IBlobStartCopyFromURLOptions} [options]\n         * @returns {Promise<Models.BlobStartCopyFromURLResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.startCopyFromURL = function (aborter, copySource, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n                    return [2 /*return*/, this.blobContext.startCopyFromURL(copySource, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            metadata: options.metadata,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                            sourceModifiedAccessConditions: {\n                                sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n                                sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n                                sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n                                sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n                            },\n                            rehydratePriority: options.rehydratePriority,\n                            tier: toAccessTier(options.tier)\n                        })];\n                });\n            });\n        };\n        /**\n         * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n         * length and full metadata. Version 2012-02-12 and newer.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} copyId\n         * @param {IBlobAbortCopyFromURLOptions} [options]\n         * @returns {Promise<Models.BlobAbortCopyFromURLResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.abortCopyFromURL = function (aborter, copyId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.blobContext.abortCopyFromURL(copyId, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n         * return a response until the copy is complete.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} copySource The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n         * @param {IBlobSyncCopyFromURLOptions} [options={}]\n         * @returns {Promise<Models.BlobCopyFromURLResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.syncCopyFromURL = function (aborter, copySource, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.blobAccessConditions = options.blobAccessConditions || {};\n                    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n                    return [2 /*return*/, this.blobContext.copyFromURL(copySource, {\n                            abortSignal: aborter,\n                            metadata: options.metadata,\n                            leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                            sourceModifiedAccessConditions: {\n                                sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n                                sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n                                sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n                                sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n                            }\n                        })];\n                });\n            });\n        };\n        /**\n         * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n         * storage account and on a block blob in a blob storage account (locally redundant\n         * storage only). A premium page blob's tier determines the allowed size, IOPS,\n         * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n         * storage type. This operation does not update the blob's ETag.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {BlockBlobTier | PremiumPageBlobTier | string} tier\n         * @param {IBlobSetTierOptions} [options]\n         * @returns {Promise<Models.BlobsSetTierResponse>}\n         * @memberof BlobURL\n         */\n        BlobURL.prototype.setTier = function (aborter, tier, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.blobContext.setTier(toAccessTier(tier), {\n                                abortSignal: aborter,\n                                leaseAccessConditions: options.leaseAccessConditions,\n                                rehydratePriority: options.rehydratePriority\n                            })];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        return BlobURL;\n    }(StorageURL));\n\n    /**\n     * AppendBlobURL defines a set of operations applicable to append blobs.\n     *\n     * @export\n     * @class AppendBlobURL\n     * @extends {StorageURL}\n     */\n    var AppendBlobURL = /** @class */ (function (_super) {\n        __extends(AppendBlobURL, _super);\n        /**\n         * Creates an instance of AppendBlobURL.\n         * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n         * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         * If a blob name includes ? or %, blob name must be encoded in the URL.\n         *\n         * @param {string} url A URL string pointing to Azure Storage append blob, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n         *                     append a SAS if using AnonymousCredential, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n         *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n         *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n         *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n         * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n         *                            pipeline, or provide a customized pipeline.\n         * @memberof AppendBlobURL\n         */\n        function AppendBlobURL(url, pipeline) {\n            var _this = _super.call(this, url, pipeline) || this;\n            _this.appendBlobContext = new AppendBlob(_this.storageClientContext);\n            return _this;\n        }\n        /**\n         * Creates a AppendBlobURL object from ContainerURL instance.\n         *\n         * @static\n         * @param {ContainerURL} containerURL A ContainerURL object\n         * @param {string} blobName An append blob name\n         * @returns {AppendBlobURL}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.fromContainerURL = function (containerURL, blobName) {\n            return new AppendBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n        };\n        /**\n         * Creates a AppendBlobURL object from BlobURL instance.\n         *\n         * @static\n         * @param {BlobURL} blobURL\n         * @returns {AppendBlobURL}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.fromBlobURL = function (blobURL) {\n            return new AppendBlobURL(blobURL.url, blobURL.pipeline);\n        };\n        /**\n         * Creates a new AppendBlobURL object identical to the source but with the\n         * specified request policy pipeline.\n         *\n         * @param {Pipeline} pipeline\n         * @returns {AppendBlobURL}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.prototype.withPipeline = function (pipeline) {\n            return new AppendBlobURL(this.url, pipeline);\n        };\n        /**\n         * Creates a new AppendBlobURL object identical to the source but with the\n         * specified snapshot timestamp.\n         * Provide \"\" will remove the snapshot and return a URL to the base blob.\n         *\n         * @param {string} snapshot\n         * @returns {AppendBlobURL}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.prototype.withSnapshot = function (snapshot) {\n            return new AppendBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n        };\n        /**\n         * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IAppendBlobCreateOptions} [options]\n         * @returns {Promise<Models.AppendBlobsCreateResponse>}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.prototype.create = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.appendBlobContext.create(0, {\n                            abortSignal: aborter,\n                            blobHTTPHeaders: options.blobHTTPHeaders,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            metadata: options.metadata,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Commits a new block of data to the end of the existing append blob.\n         * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {HttpRequestBody} body\n         * @param {number} contentLength Length of the body in bytes\n         * @param {IAppendBlobAppendBlockOptions} [options]\n         * @returns {Promise<Models.AppendBlobsAppendBlockResponse>}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.prototype.appendBlock = function (aborter, body, contentLength, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.appendBlobContext.appendBlock(body, contentLength, {\n                            abortSignal: aborter,\n                            appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            onUploadProgress: options.progress,\n                            transactionalContentMD5: options.transactionalContentMD5,\n                            transactionalContentCrc64: options.transactionalContentCrc64,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * The Append Block operation commits a new block of data to the end of an existing append blob\n         * where the contents are read from a source url.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} sourceURL\n         *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n         *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n         *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n         *                 public, no authentication is required to perform the operation.\n         * @param {number} sourceOffset Offset in source to be appended\n         * @param {number} count Number of bytes to be appended as a block\n         * @param {IAppendBlobAppendBlockFromURLOptions} [options={}]\n         * @returns {Promise<Models.AppendBlobAppendBlockFromUrlResponse>}\n         * @memberof AppendBlobURL\n         */\n        AppendBlobURL.prototype.appendBlockFromURL = function (aborter, sourceURL, sourceOffset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n                            abortSignal: aborter,\n                            sourceRange: rangeToString({ offset: sourceOffset, count: count }),\n                            sourceContentMD5: options.sourceContentMD5,\n                            sourceContentCrc64: options.sourceContentCrc64,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            sourceModifiedAccessConditions: {\n                                sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n                                sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n                                sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n                                sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n                            },\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        return AppendBlobURL;\n    }(BlobURL));\n\n    var MutexLockStatus;\n    (function (MutexLockStatus) {\n        MutexLockStatus[MutexLockStatus[\"LOCKED\"] = 0] = \"LOCKED\";\n        MutexLockStatus[MutexLockStatus[\"UNLOCKED\"] = 1] = \"UNLOCKED\";\n    })(MutexLockStatus || (MutexLockStatus = {}));\n    /**\n     * An async mutex lock.\n     *\n     * @export\n     * @class Mutex\n     */\n    var Mutex = /** @class */ (function () {\n        function Mutex() {\n        }\n        /**\n         * Lock for a specific key. If the lock has been acquired by another customer, then\n         * will wait until getting the lock.\n         *\n         * @static\n         * @param {string} key lock key\n         * @returns {Promise<void>}\n         * @memberof Mutex\n         */\n        Mutex.lock = function (key) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, new Promise(function (resolve) {\n                            if (_this.keys[key] === undefined || _this.keys[key] === MutexLockStatus.UNLOCKED) {\n                                _this.keys[key] = MutexLockStatus.LOCKED;\n                                resolve();\n                            }\n                            else {\n                                _this.onUnlockEvent(key, function () {\n                                    _this.keys[key] = MutexLockStatus.LOCKED;\n                                    resolve();\n                                });\n                            }\n                        })];\n                });\n            });\n        };\n        /**\n         * Unlock a key.\n         *\n         * @static\n         * @param {string} key\n         * @returns {Promise<void>}\n         * @memberof Mutex\n         */\n        Mutex.unlock = function (key) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, new Promise(function (resolve) {\n                            if (_this.keys[key] === MutexLockStatus.LOCKED) {\n                                _this.emitUnlockEvent(key);\n                            }\n                            delete _this.keys[key];\n                            resolve();\n                        })];\n                });\n            });\n        };\n        Mutex.onUnlockEvent = function (key, handler) {\n            if (this.listeners[key] === undefined) {\n                this.listeners[key] = [handler];\n            }\n            else {\n                this.listeners[key].push(handler);\n            }\n        };\n        Mutex.emitUnlockEvent = function (key) {\n            var _this = this;\n            if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n                var handler_1 = this.listeners[key].shift();\n                setImmediate(function () {\n                    handler_1.call(_this);\n                });\n            }\n        };\n        Mutex.keys = {};\n        Mutex.listeners = {};\n        return Mutex;\n    }());\n\n    /**\n     * A BatchRequest represents a based class for BatchDeleteRequest and BatchSetTierRequest.\n     *\n     * @export\n     * @class BatchRequest\n     */\n    var BatchRequest = /** @class */ (function () {\n        function BatchRequest() {\n            this.batch = \"batch\";\n            this.batchRequest = new InnerBatchRequest();\n        }\n        /**\n         * Get the value of Content-Type for a batch request.\n         * The value must be multipart/mixed with a batch boundary.\n         * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n         */\n        BatchRequest.prototype.getMultiPartContentType = function () {\n            return this.batchRequest.getMultipartContentType();\n        };\n        /**\n         * Get assembled HTTP request body for sub requests.\n         */\n        BatchRequest.prototype.getHttpRequestBody = function () {\n            return this.batchRequest.getHttpRequestBody();\n        };\n        /**\n         * Get sub requests that are added into the batch request.\n         */\n        BatchRequest.prototype.getSubRequests = function () {\n            return this.batchRequest.getSubRequests();\n        };\n        BatchRequest.prototype.addSubRequestInternal = function (subRequest, assembleSubRequestFunc) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, Mutex.lock(this.batch)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            _a.trys.push([2, , 4, 6]);\n                            this.batchRequest.preAddSubRequest(subRequest);\n                            return [4 /*yield*/, assembleSubRequestFunc()];\n                        case 3:\n                            _a.sent();\n                            this.batchRequest.postAddSubRequest(subRequest);\n                            return [3 /*break*/, 6];\n                        case 4: return [4 /*yield*/, Mutex.unlock(this.batch)];\n                        case 5:\n                            _a.sent();\n                            return [7 /*endfinally*/];\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        return BatchRequest;\n    }());\n    /**\n     * A BatchDeleteRequest represents a batch delete request, which consists of one or more delete operations.\n     *\n     * @export\n     * @class BatchDeleteRequest\n     * @extends {BatchRequest}\n     */\n    var BatchDeleteRequest = /** @class */ (function (_super) {\n        __extends(BatchDeleteRequest, _super);\n        function BatchDeleteRequest() {\n            return _super.call(this) || this;\n        }\n        BatchDeleteRequest.prototype.addSubRequest = function (urlOrBlobURL, credentialOrOptions, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var url, credential;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (typeof urlOrBlobURL === 'string' && credentialOrOptions instanceof Credential) {\n                                // First overload\n                                url = urlOrBlobURL;\n                                credential = credentialOrOptions;\n                            }\n                            else if (urlOrBlobURL instanceof BlobURL) {\n                                // Second overload\n                                url = urlOrBlobURL.url;\n                                credential = urlOrBlobURL.credential;\n                                options = credentialOrOptions;\n                            }\n                            else {\n                                throw new RangeError(\"Invalid arguments. Either url and credential, or BlobURL need be provided.\");\n                            }\n                            if (!options) {\n                                options = {};\n                            }\n                            return [4 /*yield*/, _super.prototype.addSubRequestInternal.call(this, {\n                                    url: url,\n                                    credential: credential\n                                }, function () { return __awaiter(_this, void 0, void 0, function () {\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0: return [4 /*yield*/, new BlobURL(url, this.batchRequest.createPipeline(credential)).delete(Aborter.none, options)];\n                                            case 1:\n                                                _a.sent();\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); })];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        return BatchDeleteRequest;\n    }(BatchRequest));\n    /**\n     * A BatchSetTierRequest represents a batch set tier request, which consists of one or more set tier operations.\n     *\n     * @export\n     * @class BatchSetTierRequest\n     * @extends {BatchRequest}\n     */\n    var BatchSetTierRequest = /** @class */ (function (_super) {\n        __extends(BatchSetTierRequest, _super);\n        function BatchSetTierRequest() {\n            return _super.call(this) || this;\n        }\n        BatchSetTierRequest.prototype.addSubRequest = function (urlOrBlobURL, credentialOrTier, tierOrOptions, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var url, credential, tier;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (typeof urlOrBlobURL === 'string' && credentialOrTier instanceof Credential) {\n                                // First overload\n                                url = urlOrBlobURL;\n                                credential = credentialOrTier;\n                                tier = tierOrOptions;\n                            }\n                            else if (urlOrBlobURL instanceof BlobURL) {\n                                // Second overload\n                                url = urlOrBlobURL.url;\n                                credential = urlOrBlobURL.credential;\n                                tier = credentialOrTier;\n                                options = tierOrOptions;\n                            }\n                            else {\n                                throw new RangeError(\"Invalid arguments. Either url and credential, or BlobURL need be provided.\");\n                            }\n                            if (!options) {\n                                options = {};\n                            }\n                            return [4 /*yield*/, _super.prototype.addSubRequestInternal.call(this, {\n                                    url: url,\n                                    credential: credential\n                                }, function () { return __awaiter(_this, void 0, void 0, function () {\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0: return [4 /*yield*/, new BlobURL(url, this.batchRequest.createPipeline(credential)).setTier(Aborter.none, tier, options)];\n                                            case 1:\n                                                _a.sent();\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); })];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        return BatchSetTierRequest;\n    }(BatchRequest));\n    /**\n     * Inner batch request class which is responsible for assembling and serializing sub requests.\n     * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how request get assembled.\n     */\n    var InnerBatchRequest = /** @class */ (function () {\n        function InnerBatchRequest() {\n            this.operationCount = 0;\n            this.body = \"\";\n            var tempGuid = generateUuid();\n            // batch_{batchid}\n            this.boundary = \"batch_\" + tempGuid;\n            // --batch_{batchid}\n            // Content-Type: application/http\n            // Content-Transfer-Encoding: binary\n            this.subRequestPrefix = \"--\" + this.boundary + HTTP_LINE_ENDING + HeaderConstants.CONTENT_TYPE + \": application/http\" + HTTP_LINE_ENDING + HeaderConstants.CONTENT_TRANSFER_ENCODING + \": binary\";\n            // multipart/mixed; boundary=batch_{batchid}\n            this.multipartContentType = \"multipart/mixed; boundary=\" + this.boundary;\n            // --batch_{batchid}--\n            this.batchRequestEnding = \"--\" + this.boundary + \"--\";\n            this.subRequests = new Map();\n        }\n        /**\n         * Create pipeline to assemble sub requests. The idea here is to use exising\n         * credential and serialization/deserialization components, with additional policies to\n         * filter unnecessary headers, assemble sub requests into request's body\n         * and intercept request from going to wire.\n         * @param credential\n         */\n        InnerBatchRequest.prototype.createPipeline = function (credential) {\n            var isAnonymousCreds = credential instanceof AnonymousCredential;\n            var policyFactoryLength = 3 + (isAnonymousCreds ? 0 : 1); // [deserilizationPolicy, BatchHeaderFilterPolicyFactory, (Optional)Credential, BatchRequestAssemblePolicyFactory]\n            var factories = new Array(policyFactoryLength);\n            factories[0] = deserializationPolicy(); // Default deserializationPolicy is provided by protocol layer\n            factories[1] = new BatchHeaderFilterPolicyFactory(); // Use batch header filter policy to exclude unnecessary headers\n            if (!isAnonymousCreds) {\n                factories[2] = credential;\n            }\n            factories[policyFactoryLength - 1] = new BatchRequestAssemblePolicyFactory(this); // Use batch assemble policy to assemble request and intercept request from going to wire\n            return new Pipeline(factories, {});\n        };\n        InnerBatchRequest.prototype.appendSubRequestToBody = function (request) {\n            // Start to assemble sub request\n            this.body +=\n                [\n                    this.subRequestPrefix,\n                    HeaderConstants.CONTENT_ID + \": \" + this.operationCount,\n                    \"\",\n                    request.method.toString() + \" \" + getURLPathAndQuery(request.url) + \" \" + HTTP_VERSION_1_1 + HTTP_LINE_ENDING // sub request start line with method\n                ].join(HTTP_LINE_ENDING);\n            for (var _i = 0, _a = request.headers.headersArray(); _i < _a.length; _i++) {\n                var header = _a[_i];\n                this.body += header.name + \": \" + header.value + HTTP_LINE_ENDING;\n            }\n            this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n            // No body to assemble for current batch request support\n            // End to assemble sub request\n        };\n        InnerBatchRequest.prototype.preAddSubRequest = function (subRequest) {\n            if (this.operationCount >= BATCH_MAX_REQUEST) {\n                throw new RangeError(\"Cannot exceed \" + BATCH_MAX_REQUEST + \" sub requests in a single batch\");\n            }\n            // Fast fail if url for sub request is invalid\n            var path = getURLPath(subRequest.url);\n            if (!path || path == \"\") {\n                throw new RangeError(\"Invalid url for sub request: '\" + subRequest.url + \"'\");\n            }\n        };\n        InnerBatchRequest.prototype.postAddSubRequest = function (subRequest) {\n            this.subRequests.set(this.operationCount, subRequest);\n            this.operationCount++;\n        };\n        // Return the http request body with assembling the ending line to the sub request body.\n        InnerBatchRequest.prototype.getHttpRequestBody = function () {\n            return \"\" + this.body + this.batchRequestEnding + HTTP_LINE_ENDING;\n        };\n        InnerBatchRequest.prototype.getMultipartContentType = function () {\n            return this.multipartContentType;\n        };\n        InnerBatchRequest.prototype.getSubRequests = function () {\n            return this.subRequests;\n        };\n        return InnerBatchRequest;\n    }());\n    var BatchRequestAssemblePolicy = /** @class */ (function (_super) {\n        __extends(BatchRequestAssemblePolicy, _super);\n        function BatchRequestAssemblePolicy(batchRequest, nextPolicy, options) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.dummyResponse = {\n                request: new WebResource(),\n                status: 200,\n                headers: new HttpHeaders()\n            };\n            _this.batchRequest = batchRequest;\n            return _this;\n        }\n        BatchRequestAssemblePolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.batchRequest.appendSubRequestToBody(request)];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.dummyResponse]; // Intercept request from going to wire\n                    }\n                });\n            });\n        };\n        return BatchRequestAssemblePolicy;\n    }(BaseRequestPolicy));\n    var BatchRequestAssemblePolicyFactory = /** @class */ (function () {\n        function BatchRequestAssemblePolicyFactory(batchRequest) {\n            this.batchRequest = batchRequest;\n        }\n        BatchRequestAssemblePolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new BatchRequestAssemblePolicy(this.batchRequest, nextPolicy, options);\n        };\n        return BatchRequestAssemblePolicyFactory;\n    }());\n    var BatchHeaderFilterPolicy = /** @class */ (function (_super) {\n        __extends(BatchHeaderFilterPolicy, _super);\n        function BatchHeaderFilterPolicy(nextPolicy, options) {\n            return _super.call(this, nextPolicy, options) || this;\n        }\n        BatchHeaderFilterPolicy.prototype.sendRequest = function (request) {\n            return __awaiter(this, void 0, void 0, function () {\n                var xMsHeaderName, _i, _a, header;\n                return __generator(this, function (_b) {\n                    xMsHeaderName = \"\";\n                    for (_i = 0, _a = request.headers.headersArray(); _i < _a.length; _i++) {\n                        header = _a[_i];\n                        if (iEqual(header.name, HeaderConstants.X_MS_VERSION)) {\n                            xMsHeaderName = header.name;\n                        }\n                    }\n                    if (xMsHeaderName !== \"\") {\n                        request.headers.remove(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n                    }\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                });\n            });\n        };\n        return BatchHeaderFilterPolicy;\n    }(BaseRequestPolicy));\n    var BatchHeaderFilterPolicyFactory = /** @class */ (function () {\n        function BatchHeaderFilterPolicyFactory() {\n        }\n        BatchHeaderFilterPolicyFactory.prototype.create = function (nextPolicy, options) {\n            return new BatchHeaderFilterPolicy(nextPolicy, options);\n        };\n        return BatchHeaderFilterPolicyFactory;\n    }());\n\n    /**\n     * BlockBlobURL defines a set of operations applicable to block blobs.\n     *\n     * @export\n     * @class BlockBlobURL\n     * @extends {StorageURL}\n     */\n    var BlockBlobURL = /** @class */ (function (_super) {\n        __extends(BlockBlobURL, _super);\n        /**\n         * Creates an instance of BlockBlobURL.\n         * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n         * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         * If a blob name includes ? or %, blob name must be encoded in the URL.\n         *\n         * @param {string} url A URL string pointing to Azure Storage block blob, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n         *                     append a SAS if using AnonymousCredential, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n         *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n         *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n         *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n         * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n         *                            pipeline, or provide a customized pipeline.\n         * @memberof BlockBlobURL\n         */\n        function BlockBlobURL(url, pipeline) {\n            var _this = _super.call(this, url, pipeline) || this;\n            _this.blockBlobContext = new BlockBlob(_this.storageClientContext);\n            return _this;\n        }\n        /**\n         * Creates a BlockBlobURL object from ContainerURL instance.\n         *\n         * @static\n         * @param {ContainerURL} containerURL A ContainerURL object\n         * @param {string} blobName A block blob name\n         * @returns {BlockBlobURL}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.fromContainerURL = function (containerURL, blobName) {\n            return new BlockBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n        };\n        /**\n         * Creates a BlockBlobURL object from BlobURL instance.\n         *\n         * @static\n         * @param {BlobURL} blobURL\n         * @returns {BlockBlobURL}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.fromBlobURL = function (blobURL) {\n            return new BlockBlobURL(blobURL.url, blobURL.pipeline);\n        };\n        /**\n         * Creates a new BlockBlobURL object identical to the source but with the\n         * specified request policy pipeline.\n         *\n         * @param {Pipeline} pipeline\n         * @returns {BlockBlobURL}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.withPipeline = function (pipeline) {\n            return new BlockBlobURL(this.url, pipeline);\n        };\n        /**\n         * Creates a new BlockBlobURL object identical to the source but with the\n         * specified snapshot timestamp.\n         * Provide \"\" will remove the snapshot and return a URL to the base blob.\n         *\n         * @param {string} snapshot\n         * @returns {BlockBlobURL}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.withSnapshot = function (snapshot) {\n            return new BlockBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n        };\n        /**\n         * Creates a new block blob, or updates the content of an existing block blob.\n         * Updating an existing block blob overwrites any existing metadata on the blob.\n         * Partial updates are not supported; the content of the existing blob is\n         * overwritten with the new content. To perform a partial update of a block blob's,\n         * use stageBlock and commitBlockList.\n         *\n         * This is a non-parallel uploading method, please use uploadFileToBlockBlob(),\n         * uploadStreamToBlockBlob() or uploadBrowserDataToBlockBlob() for better performance\n         * with concurrency uploading.\n         *\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n         *                               which returns a new Readable stream whose offset is from data source beginning.\n         * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n         *                               string including non non-Base64/Hex-encoded characters.\n         * @param {IBlockBlobUploadOptions} [options]\n         * @returns {Promise<Models.BlockBlobUploadResponse>}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.upload = function (aborter, body, contentLength, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blockBlobContext.upload(body, contentLength, {\n                            abortSignal: aborter,\n                            blobHTTPHeaders: options.blobHTTPHeaders,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            metadata: options.metadata,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            onUploadProgress: options.progress,\n                            cpkInfo: options.customerProvidedKey,\n                            tier: toAccessTier(options.tier)\n                        })];\n                });\n            });\n        };\n        /**\n         * Uploads the specified block to the block blob's \"staging area\" to be later\n         * committed by a call to commitBlockList.\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} blockId A 64-byte value that is base64-encoded\n         * @param {HttpRequestBody} body\n         * @param {number} contentLength\n         * @param {IBlockBlobStageBlockOptions} [options]\n         * @returns {Promise<Models.BlockBlobStageBlockResponse>}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.stageBlock = function (aborter, blockId, body, contentLength, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions,\n                            onUploadProgress: options.progress,\n                            transactionalContentMD5: options.transactionalContentMD5,\n                            transactionalContentCrc64: options.transactionalContentCrc64,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * The Stage Block From URL operation creates a new block to be committed as part\n         * of a blob where the contents are read from a URL.\n         * This API is available starting in version 2018-03-28.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} blockId A 64-byte value that is base64-encoded\n         * @param {string} sourceURL Specifies the URL of the blob. The value\n         *                           may be a URL of up to 2 KB in length that specifies a blob.\n         *                           The value should be URL-encoded as it would appear\n         *                           in a request URI. The source blob must either be public\n         *                           or must be authenticated via a shared access signature.\n         *                           If the source blob is public, no authentication is required\n         *                           to perform the operation. Here are some examples of source object URLs:\n         *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n         *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n         * @param {number} offset From which position of the blob to download, >= 0\n         * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n         * @param {IBlockBlobStageBlockFromURLOptions} [options={}]\n         * @returns {Promise<Models.BlockBlobStageBlockFromURLResponse>}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.stageBlockFromURL = function (aborter, blockId, sourceURL, offset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions,\n                            sourceContentMD5: options.sourceContentMD5,\n                            sourceContentCrc64: options.sourceContentCrc64,\n                            sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset: offset, count: count }),\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Writes a blob by specifying the list of block IDs that make up the blob.\n         * In order to be written as part of a blob, a block must have been successfully written\n         * to the server in a prior stageBlock operation. You can call commitBlockList to update a blob\n         * by uploading only those blocks that have changed, then committing the new and existing\n         * blocks together. Any blocks not specified in the block list and permanently deleted.\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string[]} blocks  Array of 64-byte value that is base64-encoded\n         * @param {IBlockBlobCommitBlockListOptions} [options]\n         * @returns {Promise<Models.BlockBlobCommitBlockListResponse>}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.commitBlockList = function (aborter, blocks, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.blockBlobContext.commitBlockList({ latest: blocks }, {\n                            abortSignal: aborter,\n                            blobHTTPHeaders: options.blobHTTPHeaders,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            metadata: options.metadata,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey,\n                            tier: toAccessTier(options.tier)\n                        })];\n                });\n            });\n        };\n        /**\n         * Returns the list of blocks that have been uploaded as part of a block blob\n         * using the specified block list filter.\n         * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {Models.BlockListType} listType\n         * @param {IBlockBlobGetBlockListOptions} [options]\n         * @returns {Promise<Models.BlockBlobGetBlockListResponse>}\n         * @memberof BlockBlobURL\n         */\n        BlockBlobURL.prototype.getBlockList = function (aborter, listType, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var res;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.blockBlobContext.getBlockList(listType, {\n                                abortSignal: aborter,\n                                leaseAccessConditions: options.leaseAccessConditions\n                            })];\n                        case 1:\n                            res = _a.sent();\n                            if (!res.committedBlocks) {\n                                res.committedBlocks = [];\n                            }\n                            if (!res.uncommittedBlocks) {\n                                res.uncommittedBlocks = [];\n                            }\n                            return [2 /*return*/, res];\n                    }\n                });\n            });\n        };\n        return BlockBlobURL;\n    }(BlobURL));\n\n    /**\n     * A ContainerURL represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n     *\n     * @export\n     * @class ContainerURL\n     * @extends {StorageURL}\n     */\n    var ContainerURL = /** @class */ (function (_super) {\n        __extends(ContainerURL, _super);\n        /**\n         * Creates an instance of ContainerURL.\n         * @param {string} url A URL string pointing to Azure Storage blob container, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n         *                     append a SAS if using AnonymousCredential, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n         * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n         *                            pipeline, or provide a customized pipeline.\n         * @memberof ContainerURL\n         */\n        function ContainerURL(url, pipeline) {\n            var _this = _super.call(this, url, pipeline) || this;\n            _this.containerContext = new Container(_this.storageClientContext);\n            return _this;\n        }\n        /**\n         * Creates a ContainerURL object from ServiceURL\n         *\n         * @param serviceURL A ServiceURL object\n         * @param containerName A container name\n         */\n        ContainerURL.fromServiceURL = function (serviceURL, containerName) {\n            return new ContainerURL(appendToURLPath(serviceURL.url, encodeURIComponent(containerName)), serviceURL.pipeline);\n        };\n        /**\n         * Creates a new ContainerURL object identical to the source but with the\n         * specified request policy pipeline.\n         *\n         * @param {Pipeline} pipeline\n         * @returns {ContainerURL}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.withPipeline = function (pipeline) {\n            return new ContainerURL(this.url, pipeline);\n        };\n        /**\n         * Creates a new container under the specified account. If the container with\n         * the same name already exists, the operation fails.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IContainerCreateOptions} [options]\n         * @returns {Promise<Models.ContainerCreateResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.create = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    // Spread operator in destructuring assignments,\n                    // this will filter out unwanted properties from the response object into result object\n                    return [2 /*return*/, this.containerContext.create(__assign({}, options, { abortSignal: aborter }))];\n                });\n            });\n        };\n        /**\n         * Returns all user-defined metadata and system properties for the specified\n         * container. The data returned does not include the container's list of blobs.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IContainersGetPropertiesOptions} [options]\n         * @returns {Promise<Models.ContainerGetPropertiesResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.getProperties = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    if (!options.leaseAccessConditions) {\n                        options.leaseAccessConditions = {};\n                    }\n                    return [2 /*return*/, this.containerContext.getProperties(__assign({ abortSignal: aborter }, options.leaseAccessConditions))];\n                });\n            });\n        };\n        /**\n         * Marks the specified container for deletion. The container and any blobs\n         * contained within it are later deleted during garbage collection.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {Models.ContainersDeleteMethodOptionalParams} [options]\n         * @returns {Promise<Models.ContainerDeleteResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.delete = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    if (!options.containerAccessConditions) {\n                        options.containerAccessConditions = {};\n                    }\n                    if (!options.containerAccessConditions.modifiedAccessConditions) {\n                        options.containerAccessConditions.modifiedAccessConditions = {};\n                    }\n                    if (!options.containerAccessConditions.leaseAccessConditions) {\n                        options.containerAccessConditions.leaseAccessConditions = {};\n                    }\n                    if ((options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions.ifMatch !== ETagNone) ||\n                        (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n                            options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch !== ETagNone)) {\n                        throw new RangeError(\"the IfMatch and IfNoneMatch access conditions must have their default\\\n        values because they are ignored by the service\");\n                    }\n                    return [2 /*return*/, this.containerContext.deleteMethod({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Sets one or more user-defined name-value pairs for the specified container.\n         *\n         * If no option provided, or no metadata defined in the parameter, the container\n         * metadata will be removed.\n         *\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IMetadata} [metadata] Replace existing metadata with this value.\n         *                               If no value provided the existing metadata will be removed.\n         * @param {IContainerSetMetadataOptions} [options]\n         * @returns {Promise<Models.ContainerSetMetadataResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.setMetadata = function (aborter, metadata, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    if (!options.containerAccessConditions) {\n                        options.containerAccessConditions = {};\n                    }\n                    if (!options.containerAccessConditions.modifiedAccessConditions) {\n                        options.containerAccessConditions.modifiedAccessConditions = {};\n                    }\n                    if (!options.containerAccessConditions.leaseAccessConditions) {\n                        options.containerAccessConditions.leaseAccessConditions = {};\n                    }\n                    if (options.containerAccessConditions.modifiedAccessConditions.ifUnmodifiedSince ||\n                        (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n                            options.containerAccessConditions.modifiedAccessConditions.ifMatch !== ETagNone) ||\n                        (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n                            options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch !== ETagNone)) {\n                        throw new RangeError(\"the IfUnmodifiedSince, IfMatch, and IfNoneMatch must have their default values\\\n        because they are ignored by the blob service\");\n                    }\n                    return [2 /*return*/, this.containerContext.setMetadata({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                            metadata: metadata,\n                            modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Gets the permissions for the specified container. The permissions indicate\n         * whether container data may be accessed publicly.\n         *\n         * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n         * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n         *\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {IContainerGetAccessPolicyOptions} [options]\n         * @returns {Promise<ContainerGetAccessPolicyResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.getAccessPolicy = function (aborter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var response, res, _i, response_1, identifier, accessPolicy;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!options.leaseAccessConditions) {\n                                options.leaseAccessConditions = {};\n                            }\n                            return [4 /*yield*/, this.containerContext.getAccessPolicy({\n                                    abortSignal: aborter,\n                                    leaseAccessConditions: options.leaseAccessConditions\n                                })];\n                        case 1:\n                            response = _a.sent();\n                            res = {\n                                _response: response._response,\n                                blobPublicAccess: response.blobPublicAccess,\n                                date: response.date,\n                                eTag: response.eTag,\n                                errorCode: response.errorCode,\n                                lastModified: response.lastModified,\n                                requestId: response.requestId,\n                                clientRequestId: response.clientRequestId,\n                                signedIdentifiers: [],\n                                version: response.version\n                            };\n                            for (_i = 0, response_1 = response; _i < response_1.length; _i++) {\n                                identifier = response_1[_i];\n                                accessPolicy = {\n                                    permission: identifier.accessPolicy.permission,\n                                };\n                                if (identifier.accessPolicy.expiry) {\n                                    accessPolicy.expiry = new Date(identifier.accessPolicy.expiry);\n                                }\n                                if (identifier.accessPolicy.start) {\n                                    accessPolicy.start = new Date(identifier.accessPolicy.start);\n                                }\n                                res.signedIdentifiers.push({\n                                    accessPolicy: accessPolicy,\n                                    id: identifier.id\n                                });\n                            }\n                            return [2 /*return*/, res];\n                    }\n                });\n            });\n        };\n        /**\n         * Sets the permissions for the specified container. The permissions indicate\n         * whether blobs in a container may be accessed publicly.\n         *\n         * When you set permissions for a container, the existing permissions are replaced.\n         * If no access or containerAcl provided, the existing container ACL will be\n         * removed.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {PublicAccessType} [access]\n         * @param {ISignedIdentifier[]} [containerAcl]\n         * @param {IContainerSetAccessPolicyOptions} [options]\n         * @returns {Promise<Models.ContainerSetAccessPolicyResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.setAccessPolicy = function (aborter, access, containerAcl, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var acl, _i, _a, identifier;\n                return __generator(this, function (_b) {\n                    options.containerAccessConditions = options.containerAccessConditions || {};\n                    acl = [];\n                    for (_i = 0, _a = containerAcl || []; _i < _a.length; _i++) {\n                        identifier = _a[_i];\n                        acl.push({\n                            accessPolicy: {\n                                expiry: identifier.accessPolicy.expiry ? truncatedISO8061Date(identifier.accessPolicy.expiry) : \"\",\n                                permission: identifier.accessPolicy.permission,\n                                start: identifier.accessPolicy.start ? truncatedISO8061Date(identifier.accessPolicy.start) : \"\"\n                            },\n                            id: identifier.id\n                        });\n                    }\n                    return [2 /*return*/, this.containerContext.setAccessPolicy({\n                            abortSignal: aborter,\n                            access: access,\n                            containerAcl: acl,\n                            leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Establishes and manages a lock on a container for delete operations.\n         * The lock duration can be 15 to 60 seconds, or can be infinite.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n         * @param {number} duration Must be between 15 to 60 seconds, or infinite (-1)\n         * @param {IContainerAcquireLeaseOptions} [options]\n         * @returns {Promise<Models.ContainerAcquireLeaseResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.acquireLease = function (aborter, proposedLeaseId, duration, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.acquireLease({\n                            abortSignal: aborter,\n                            duration: duration,\n                            modifiedAccessConditions: options.modifiedAccessConditions,\n                            proposedLeaseId: proposedLeaseId\n                        })];\n                });\n            });\n        };\n        /**\n         * To free the lease if it is no longer needed so that another client may\n         * immediately acquire a lease against the container.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} leaseId\n         * @param {IContainerReleaseLeaseOptions} [options]\n         * @returns {Promise<Models.ContainerReleaseLeaseResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.releaseLease = function (aborter, leaseId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.releaseLease(leaseId, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * To renew an existing lease.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} leaseId\n         * @param {IContainerRenewLeaseOptions} [options]\n         * @returns {Promise<Models.ContainerRenewLeaseResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.renewLease = function (aborter, leaseId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.renewLease(leaseId, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * To end the lease but ensure that another client cannot acquire a new lease\n         * until the current lease period has expired.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} period break period\n         * @param {IContainerBreakLeaseOptions} [options]\n         * @returns {Promise<Models.ContainerBreakLeaseResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.breakLease = function (aborter, period, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.breakLease({\n                            abortSignal: aborter,\n                            breakPeriod: period,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * To change the ID of an existing lease.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} leaseId\n         * @param {string} proposedLeaseId\n         * @param {IContainerChangeLeaseOptions} [options]\n         * @returns {Promise<Models.ContainerChangeLeaseResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.changeLease = function (aborter, leaseId, proposedLeaseId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.changeLease(leaseId, proposedLeaseId, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * listBlobFlatSegment returns a single segment of blobs starting from the\n         * specified Marker. Use an empty Marker to start enumeration from the beginning.\n         * After getting a segment, process it, and then call ListBlobsFlatSegment again\n         * (passing the the previously-returned Marker) to get the next segment.\n         * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} [marker]\n         * @param {IContainerListBlobsSegmentOptions} [options]\n         * @returns {Promise<Models.ContainerListBlobFlatSegmentResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.listBlobFlatSegment = function (aborter, marker, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.listBlobFlatSegment(__assign({ abortSignal: aborter, marker: marker }, options))];\n                });\n            });\n        };\n        /**\n         * listBlobHierarchySegment returns a single segment of blobs starting from\n         * the specified Marker. Use an empty Marker to start enumeration from the\n         * beginning. After getting a segment, process it, and then call ListBlobsHierarchicalSegment\n         * again (passing the the previously-returned Marker) to get the next segment.\n         * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} delimiter\n         * @param {IContainerListBlobsSegmentOptions} [options]\n         * @returns {Promise<Models.ContainerListBlobHierarchySegmentResponse>}\n         * @memberof ContainerURL\n         */\n        ContainerURL.prototype.listBlobHierarchySegment = function (aborter, delimiter, marker, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.containerContext.listBlobHierarchySegment(delimiter, __assign({ abortSignal: aborter, marker: marker }, options))];\n                });\n            });\n        };\n        return ContainerURL;\n    }(StorageURL));\n\n    /**\n     * TokenCredentialPolicy is a policy used to sign HTTP request with a token.\n     * Such as an OAuth bearer token.\n     *\n     * @export\n     * @class TokenCredentialPolicy\n     * @extends {CredentialPolicy}\n     */\n    var TokenCredentialPolicy = /** @class */ (function (_super) {\n        __extends(TokenCredentialPolicy, _super);\n        /**\n         * Creates an instance of TokenCredentialPolicy.\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @param {TokenCredential} tokenCredential\n         * @memberof TokenCredentialPolicy\n         */\n        function TokenCredentialPolicy(nextPolicy, options, tokenCredential) {\n            var _this = _super.call(this, nextPolicy, options) || this;\n            _this.tokenCredential = tokenCredential;\n            _this.authorizationScheme = HeaderConstants.AUTHORIZATION_SCHEME;\n            return _this;\n        }\n        /**\n         * Sign request with token.\n         *\n         * @protected\n         * @param {WebResource} request\n         * @returns {WebResource}\n         * @memberof TokenCredentialPolicy\n         */\n        TokenCredentialPolicy.prototype.signRequest = function (request) {\n            if (!request.headers) {\n                request.headers = new HttpHeaders();\n            }\n            request.headers.set(HeaderConstants.AUTHORIZATION, this.authorizationScheme + \" \" + this.tokenCredential.token);\n            return request;\n        };\n        return TokenCredentialPolicy;\n    }(CredentialPolicy));\n\n    /**\n     * TokenCredential is a Credential used to generate a TokenCredentialPolicy.\n     * Renew token by setting a new token string value to token property.\n     *\n     * @example\n     *  const tokenCredential = new TokenCredential(\"token\");\n     *  const pipeline = StorageURL.newPipeline(tokenCredential);\n     *\n     *  // List containers\n     *  const serviceURL = new ServiceURL(\"https://mystorageaccount.blob.core.windows.net\", pipeline);\n     *\n     *  // Set up a timer to refresh the token\n     *  const timerID = setInterval(() => {\n     *    // Update token by accessing to public tokenCredential.token\n     *    tokenCredential.token = \"updatedToken\";\n     *    // WARNING: Timer must be manually stopped! It will forbid GC of tokenCredential\n     *    if (shouldStop()) {\n     *      clearInterval(timerID);\n     *    }\n     *  }, 60 * 60 * 1000); // Set an interval time before your token expired\n     * @export\n     * @class TokenCredential\n     * @extends {Credential}\n     *\n     */\n    var TokenCredential = /** @class */ (function (_super) {\n        __extends(TokenCredential, _super);\n        /**\n         * Creates an instance of TokenCredential.\n         * @param {string} token\n         * @memberof TokenCredential\n         */\n        function TokenCredential(token) {\n            var _this = _super.call(this) || this;\n            _this.token = token;\n            return _this;\n        }\n        /**\n         * Creates a TokenCredentialPolicy object.\n         *\n         * @param {RequestPolicy} nextPolicy\n         * @param {RequestPolicyOptions} options\n         * @returns {TokenCredentialPolicy}\n         * @memberof TokenCredential\n         */\n        TokenCredential.prototype.create = function (nextPolicy, options) {\n            return new TokenCredentialPolicy(nextPolicy, options, this);\n        };\n        return TokenCredential;\n    }(Credential));\n\n    // Copyright Joyent, Inc. and other Node contributors.\n\n    var R = typeof Reflect === 'object' ? Reflect : null;\n    var ReflectApply = R && typeof R.apply === 'function'\n      ? R.apply\n      : function ReflectApply(target, receiver, args) {\n        return Function.prototype.apply.call(target, receiver, args);\n      };\n\n    var ReflectOwnKeys;\n    if (R && typeof R.ownKeys === 'function') {\n      ReflectOwnKeys = R.ownKeys;\n    } else if (Object.getOwnPropertySymbols) {\n      ReflectOwnKeys = function ReflectOwnKeys(target) {\n        return Object.getOwnPropertyNames(target)\n          .concat(Object.getOwnPropertySymbols(target));\n      };\n    } else {\n      ReflectOwnKeys = function ReflectOwnKeys(target) {\n        return Object.getOwnPropertyNames(target);\n      };\n    }\n\n    function ProcessEmitWarning(warning) {\n      if (console && console.warn) console.warn(warning);\n    }\n\n    var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n      return value !== value;\n    };\n\n    function EventEmitter() {\n      EventEmitter.init.call(this);\n    }\n    var events = EventEmitter;\n\n    // Backwards-compat with node 0.10.x\n    EventEmitter.EventEmitter = EventEmitter;\n\n    EventEmitter.prototype._events = undefined;\n    EventEmitter.prototype._eventsCount = 0;\n    EventEmitter.prototype._maxListeners = undefined;\n\n    // By default EventEmitters will print a warning if more than 10 listeners are\n    // added to it. This is a useful default which helps finding memory leaks.\n    var defaultMaxListeners = 10;\n\n    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n      enumerable: true,\n      get: function() {\n        return defaultMaxListeners;\n      },\n      set: function(arg) {\n        if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n          throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n        }\n        defaultMaxListeners = arg;\n      }\n    });\n\n    EventEmitter.init = function() {\n\n      if (this._events === undefined ||\n          this._events === Object.getPrototypeOf(this)._events) {\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n      }\n\n      this._maxListeners = this._maxListeners || undefined;\n    };\n\n    // Obviously not all Emitters should be limited to 10. This function allows\n    // that to be increased. Set to zero for unlimited.\n    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n      if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n        throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n      }\n      this._maxListeners = n;\n      return this;\n    };\n\n    function $getMaxListeners(that) {\n      if (that._maxListeners === undefined)\n        return EventEmitter.defaultMaxListeners;\n      return that._maxListeners;\n    }\n\n    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n      return $getMaxListeners(this);\n    };\n\n    EventEmitter.prototype.emit = function emit(type) {\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n      var doError = (type === 'error');\n\n      var events = this._events;\n      if (events !== undefined)\n        doError = (doError && events.error === undefined);\n      else if (!doError)\n        return false;\n\n      // If there is no 'error' event listener then throw.\n      if (doError) {\n        var er;\n        if (args.length > 0)\n          er = args[0];\n        if (er instanceof Error) {\n          // Note: The comments on the `throw` lines are intentional, they show\n          // up in Node's output if this results in an unhandled exception.\n          throw er; // Unhandled 'error' event\n        }\n        // At least give some kind of context to the user\n        var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n      }\n\n      var handler = events[type];\n\n      if (handler === undefined)\n        return false;\n\n      if (typeof handler === 'function') {\n        ReflectApply(handler, this, args);\n      } else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i)\n          ReflectApply(listeners[i], this, args);\n      }\n\n      return true;\n    };\n\n    function _addListener(target, type, listener, prepend) {\n      var m;\n      var events;\n      var existing;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = target._events;\n      if (events === undefined) {\n        events = target._events = Object.create(null);\n        target._eventsCount = 0;\n      } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener !== undefined) {\n          target.emit('newListener', type,\n                      listener.listener ? listener.listener : listener);\n\n          // Re-assign `events` because a newListener handler could have caused the\n          // this._events to be assigned to a new object\n          events = target._events;\n        }\n        existing = events[type];\n      }\n\n      if (existing === undefined) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n      } else {\n        if (typeof existing === 'function') {\n          // Adding the second element, need to change to array.\n          existing = events[type] =\n            prepend ? [listener, existing] : [existing, listener];\n          // If we've already got an array, just append.\n        } else if (prepend) {\n          existing.unshift(listener);\n        } else {\n          existing.push(listener);\n        }\n\n        // Check for listener leak\n        m = $getMaxListeners(target);\n        if (m > 0 && existing.length > m && !existing.warned) {\n          existing.warned = true;\n          // No error code for this since it is a Warning\n          // eslint-disable-next-line no-restricted-syntax\n          var w = new Error('Possible EventEmitter memory leak detected. ' +\n                              existing.length + ' ' + String(type) + ' listeners ' +\n                              'added. Use emitter.setMaxListeners() to ' +\n                              'increase limit');\n          w.name = 'MaxListenersExceededWarning';\n          w.emitter = target;\n          w.type = type;\n          w.count = existing.length;\n          ProcessEmitWarning(w);\n        }\n      }\n\n      return target;\n    }\n\n    EventEmitter.prototype.addListener = function addListener(type, listener) {\n      return _addListener(this, type, listener, false);\n    };\n\n    EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n    EventEmitter.prototype.prependListener =\n        function prependListener(type, listener) {\n          return _addListener(this, type, listener, true);\n        };\n\n    function onceWrapper() {\n      var args = [];\n      for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n      if (!this.fired) {\n        this.target.removeListener(this.type, this.wrapFn);\n        this.fired = true;\n        ReflectApply(this.listener, this.target, args);\n      }\n    }\n\n    function _onceWrap(target, type, listener) {\n      var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n      var wrapped = onceWrapper.bind(state);\n      wrapped.listener = listener;\n      state.wrapFn = wrapped;\n      return wrapped;\n    }\n\n    EventEmitter.prototype.once = function once(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.on(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n    EventEmitter.prototype.prependOnceListener =\n        function prependOnceListener(type, listener) {\n          if (typeof listener !== 'function') {\n            throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n          }\n          this.prependListener(type, _onceWrap(this, type, listener));\n          return this;\n        };\n\n    // Emits a 'removeListener' event if and only if the listener was removed.\n    EventEmitter.prototype.removeListener =\n        function removeListener(type, listener) {\n          var list, events, position, i, originalListener;\n\n          if (typeof listener !== 'function') {\n            throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n          }\n\n          events = this._events;\n          if (events === undefined)\n            return this;\n\n          list = events[type];\n          if (list === undefined)\n            return this;\n\n          if (list === listener || list.listener === listener) {\n            if (--this._eventsCount === 0)\n              this._events = Object.create(null);\n            else {\n              delete events[type];\n              if (events.removeListener)\n                this.emit('removeListener', type, list.listener || listener);\n            }\n          } else if (typeof list !== 'function') {\n            position = -1;\n\n            for (i = list.length - 1; i >= 0; i--) {\n              if (list[i] === listener || list[i].listener === listener) {\n                originalListener = list[i].listener;\n                position = i;\n                break;\n              }\n            }\n\n            if (position < 0)\n              return this;\n\n            if (position === 0)\n              list.shift();\n            else {\n              spliceOne(list, position);\n            }\n\n            if (list.length === 1)\n              events[type] = list[0];\n\n            if (events.removeListener !== undefined)\n              this.emit('removeListener', type, originalListener || listener);\n          }\n\n          return this;\n        };\n\n    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n    EventEmitter.prototype.removeAllListeners =\n        function removeAllListeners(type) {\n          var listeners, events, i;\n\n          events = this._events;\n          if (events === undefined)\n            return this;\n\n          // not listening for removeListener, no need to emit\n          if (events.removeListener === undefined) {\n            if (arguments.length === 0) {\n              this._events = Object.create(null);\n              this._eventsCount = 0;\n            } else if (events[type] !== undefined) {\n              if (--this._eventsCount === 0)\n                this._events = Object.create(null);\n              else\n                delete events[type];\n            }\n            return this;\n          }\n\n          // emit removeListener for all listeners on all events\n          if (arguments.length === 0) {\n            var keys = Object.keys(events);\n            var key;\n            for (i = 0; i < keys.length; ++i) {\n              key = keys[i];\n              if (key === 'removeListener') continue;\n              this.removeAllListeners(key);\n            }\n            this.removeAllListeners('removeListener');\n            this._events = Object.create(null);\n            this._eventsCount = 0;\n            return this;\n          }\n\n          listeners = events[type];\n\n          if (typeof listeners === 'function') {\n            this.removeListener(type, listeners);\n          } else if (listeners !== undefined) {\n            // LIFO order\n            for (i = listeners.length - 1; i >= 0; i--) {\n              this.removeListener(type, listeners[i]);\n            }\n          }\n\n          return this;\n        };\n\n    function _listeners(target, type, unwrap) {\n      var events = target._events;\n\n      if (events === undefined)\n        return [];\n\n      var evlistener = events[type];\n      if (evlistener === undefined)\n        return [];\n\n      if (typeof evlistener === 'function')\n        return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n      return unwrap ?\n        unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n    }\n\n    EventEmitter.prototype.listeners = function listeners(type) {\n      return _listeners(this, type, true);\n    };\n\n    EventEmitter.prototype.rawListeners = function rawListeners(type) {\n      return _listeners(this, type, false);\n    };\n\n    EventEmitter.listenerCount = function(emitter, type) {\n      if (typeof emitter.listenerCount === 'function') {\n        return emitter.listenerCount(type);\n      } else {\n        return listenerCount.call(emitter, type);\n      }\n    };\n\n    EventEmitter.prototype.listenerCount = listenerCount;\n    function listenerCount(type) {\n      var events = this._events;\n\n      if (events !== undefined) {\n        var evlistener = events[type];\n\n        if (typeof evlistener === 'function') {\n          return 1;\n        } else if (evlistener !== undefined) {\n          return evlistener.length;\n        }\n      }\n\n      return 0;\n    }\n\n    EventEmitter.prototype.eventNames = function eventNames() {\n      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n    };\n\n    function arrayClone(arr, n) {\n      var copy = new Array(n);\n      for (var i = 0; i < n; ++i)\n        copy[i] = arr[i];\n      return copy;\n    }\n\n    function spliceOne(list, index) {\n      for (; index + 1 < list.length; index++)\n        list[index] = list[index + 1];\n      list.pop();\n    }\n\n    function unwrapListeners(arr) {\n      var ret = new Array(arr.length);\n      for (var i = 0; i < ret.length; ++i) {\n        ret[i] = arr[i].listener || arr[i];\n      }\n      return ret;\n    }\n    var events_1 = events.EventEmitter;\n\n    /**\n     * States for Batch.\n     *\n     * @enum {number}\n     */\n    var BatchStates;\n    (function (BatchStates) {\n        BatchStates[BatchStates[\"Good\"] = 0] = \"Good\";\n        BatchStates[BatchStates[\"Error\"] = 1] = \"Error\";\n    })(BatchStates || (BatchStates = {}));\n    /**\n     * Batch provides basic parallel execution with concurrency limits.\n     * Will stop execute left operations when one of the executed operation throws an error.\n     * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n     *\n     * @export\n     * @class Batch\n     */\n    var Batch = /** @class */ (function () {\n        /**\n         * Creates an instance of Batch.\n         * @param {number} [concurrency=5]\n         * @memberof Batch\n         */\n        function Batch(concurrency) {\n            if (concurrency === void 0) { concurrency = 5; }\n            /**\n             * Number of active operations under execution.\n             *\n             * @private\n             * @type {number}\n             * @memberof Batch\n             */\n            this.actives = 0;\n            /**\n             * Number of completed operations under execution.\n             *\n             * @private\n             * @type {number}\n             * @memberof Batch\n             */\n            this.completed = 0;\n            /**\n             * Offset of next operation to be executed.\n             *\n             * @private\n             * @type {number}\n             * @memberof Batch\n             */\n            this.offset = 0;\n            /**\n             * Operation array to be executed.\n             *\n             * @private\n             * @type {Operation[]}\n             * @memberof Batch\n             */\n            this.operations = [];\n            /**\n             * States of Batch. When an error happens, state will turn into error.\n             * Batch will stop execute left operations.\n             *\n             * @private\n             * @type {BatchStates}\n             * @memberof Batch\n             */\n            this.state = BatchStates.Good;\n            if (concurrency < 1) {\n                throw new RangeError(\"concurrency must be larger than 0\");\n            }\n            this.concurrency = concurrency;\n            this.emitter = new events_1();\n        }\n        /**\n         * Add a operation into queue.\n         *\n         * @param {Operation} operation\n         * @memberof Batch\n         */\n        Batch.prototype.addOperation = function (operation) {\n            var _this = this;\n            this.operations.push(function () { return __awaiter(_this, void 0, void 0, function () {\n                var error_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            this.actives++;\n                            return [4 /*yield*/, operation()];\n                        case 1:\n                            _a.sent();\n                            this.actives--;\n                            this.completed++;\n                            this.parallelExecute();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            error_1 = _a.sent();\n                            this.emitter.emit(\"error\", error_1);\n                            return [3 /*break*/, 3];\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            }); });\n        };\n        /**\n         * Start execute operations in the queue.\n         *\n         * @returns {Promise<void>}\n         * @memberof Batch\n         */\n        Batch.prototype.do = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return __generator(this, function (_a) {\n                    this.parallelExecute();\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\n                            _this.emitter.on(\"finish\", resolve);\n                            _this.emitter.on(\"error\", function (error) {\n                                _this.state = BatchStates.Error;\n                                reject(error);\n                            });\n                        })];\n                });\n            });\n        };\n        /**\n         * Get next operation to be executed. Return null when reaching ends.\n         *\n         * @private\n         * @returns {(Operation | null)}\n         * @memberof Batch\n         */\n        Batch.prototype.nextOperation = function () {\n            if (this.offset < this.operations.length) {\n                return this.operations[this.offset++];\n            }\n            return null;\n        };\n        /**\n         * Start execute operations. One one the most important difference between\n         * this method with do() is that do() wraps as an sync method.\n         *\n         * @private\n         * @returns {void}\n         * @memberof Batch\n         */\n        Batch.prototype.parallelExecute = function () {\n            if (this.state === BatchStates.Error) {\n                return;\n            }\n            if (this.completed >= this.operations.length) {\n                this.emitter.emit(\"finish\");\n                return;\n            }\n            while (this.actives < this.concurrency) {\n                var operation = this.nextOperation();\n                if (operation) {\n                    operation();\n                }\n                else {\n                    return;\n                }\n            }\n        };\n        return Batch;\n    }());\n\n    /**\n     * ONLY AVAILABLE IN BROWSERS.\n     *\n     * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n     *\n     * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n     * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n     * to commit the block list.\n     *\n     * @export\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Blob | ArrayBuffer | ArrayBufferView} browserData Blob, File, ArrayBuffer or ArrayBufferView\n     * @param {BlockBlobURL} blockBlobURL\n     * @param {IUploadToBlockBlobOptions} [options]\n     * @returns {Promise<BlobUploadCommonResponse>}\n     */\n    function uploadBrowserDataToBlockBlob(aborter, browserData, blockBlobURL, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var browserBlob;\n            return __generator(this, function (_a) {\n                browserBlob = new Blob([browserData]);\n                return [2 /*return*/, UploadSeekableBlobToBlockBlob(aborter, function (offset, size) {\n                        return browserBlob.slice(offset, offset + size);\n                    }, browserBlob.size, blockBlobURL, options)];\n            });\n        });\n    }\n    /**\n     * ONLY AVAILABLE IN BROWSERS.\n     *\n     * Uploads a browser Blob object to block blob. Requires a blobFactory as the data source,\n     * which need to return a Blob object with the offset and size provided.\n     *\n     * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n     * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n     * to commit the block list.\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {(offset: number, size: number) => Blob} blobFactory\n     * @param {number} size\n     * @param {BlockBlobURL} blockBlobURL\n     * @param {IUploadToBlockBlobOptions} [options]\n     * @returns {Promise<BlobUploadCommonResponse>}\n     */\n    function UploadSeekableBlobToBlockBlob(aborter, blobFactory, size, blockBlobURL, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var numBlocks, blockList, blockIDPrefix, transferProgress, batch, _loop_1, i;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!options.blockSize) {\n                            options.blockSize = 0;\n                        }\n                        if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n                            throw new RangeError(\"blockSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES);\n                        }\n                        if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n                            options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n                        }\n                        if (options.maxSingleShotSize < 0 ||\n                            options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n                            throw new RangeError(\"maxSingleShotSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES);\n                        }\n                        if (options.blockSize === 0) {\n                            if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n                                throw new RangeError(size + \" is too larger to upload to a block blob.\");\n                            }\n                            if (size > options.maxSingleShotSize) {\n                                options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n                                if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n                                    options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n                                }\n                            }\n                        }\n                        if (!options.blobHTTPHeaders) {\n                            options.blobHTTPHeaders = {};\n                        }\n                        if (!options.blobAccessConditions) {\n                            options.blobAccessConditions = {};\n                        }\n                        if (size <= options.maxSingleShotSize) {\n                            return [2 /*return*/, blockBlobURL.upload(aborter, blobFactory(0, size), size, options)];\n                        }\n                        numBlocks = Math.floor((size - 1) / options.blockSize) + 1;\n                        if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n                            throw new RangeError(\"The buffer's size is too big or the BlockSize is too small;\" +\n                                (\"the number of blocks must be <= \" + BLOCK_BLOB_MAX_BLOCKS));\n                        }\n                        blockList = [];\n                        blockIDPrefix = generateUuid();\n                        transferProgress = 0;\n                        batch = new Batch(options.parallelism);\n                        _loop_1 = function (i) {\n                            batch.addOperation(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var blockID, start, end, contentLength;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            blockID = generateBlockID(blockIDPrefix, i);\n                                            start = options.blockSize * i;\n                                            end = i === numBlocks - 1 ? size : start + options.blockSize;\n                                            contentLength = end - start;\n                                            blockList.push(blockID);\n                                            return [4 /*yield*/, blockBlobURL.stageBlock(aborter, blockID, blobFactory(start, contentLength), contentLength, {\n                                                    leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions\n                                                })];\n                                        case 1:\n                                            _a.sent();\n                                            // Update progress after block is successfully uploaded to server, in case of block trying\n                                            // TODO: Hook with convenience layer progress event in finer level\n                                            transferProgress += contentLength;\n                                            if (options.progress) {\n                                                options.progress({\n                                                    loadedBytes: transferProgress\n                                                });\n                                            }\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); });\n                        };\n                        for (i = 0; i < numBlocks; i++) {\n                            _loop_1(i);\n                        }\n                        return [4 /*yield*/, batch.do()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, blockBlobURL.commitBlockList(aborter, blockList, options)];\n                }\n            });\n        });\n    }\n\n    /**\n     * PageBlobURL defines a set of operations applicable to page blobs.\n     *\n     * @export\n     * @class PageBlobURL\n     * @extends {StorageURL}\n     */\n    var PageBlobURL = /** @class */ (function (_super) {\n        __extends(PageBlobURL, _super);\n        /**\n         * Creates an instance of PageBlobURL.\n         * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n         * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         * If a blob name includes ? or %, blob name must be encoded in the URL.\n         *\n         * @param {string} url A URL string pointing to Azure Storage page blob, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n         *                     append a SAS if using AnonymousCredential, such as\n         *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n         *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n         *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n         *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n         *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n         * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n         *                            pipeline, or provide a customized pipeline.\n         * @memberof PageBlobURL\n         */\n        function PageBlobURL(url, pipeline) {\n            var _this = _super.call(this, url, pipeline) || this;\n            _this.pageBlobContext = new PageBlob(_this.storageClientContext);\n            return _this;\n        }\n        /**\n         * Creates a PageBlobURL object from ContainerURL instance.\n         *\n         * @static\n         * @param {ContainerURL} containerURL A ContainerURL object\n         * @param {string} blobName A page blob name\n         * @returns {PageBlobURL}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.fromContainerURL = function (containerURL, blobName) {\n            return new PageBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n        };\n        /**\n         * Creates a PageBlobURL object from BlobURL instance.\n         *\n         * @static\n         * @param {BlobURL} blobURL\n         * @returns {PageBlobURL}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.fromBlobURL = function (blobURL) {\n            return new PageBlobURL(blobURL.url, blobURL.pipeline);\n        };\n        /**\n         * Creates a new PageBlobURL object identical to the source but with the\n         * specified request policy pipeline.\n         *\n         * @param {Pipeline} pipeline\n         * @returns {PageBlobURL}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.withPipeline = function (pipeline) {\n            return new PageBlobURL(this.url, pipeline);\n        };\n        /**\n         * Creates a new PageBlobURL object identical to the source but with the\n         * specified snapshot timestamp.\n         * Provide \"\" will remove the snapshot and return a URL to the base blob.\n         *\n         * @param {string} snapshot\n         * @returns {PageBlobURL}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.withSnapshot = function (snapshot) {\n            return new PageBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n        };\n        /**\n         * Creates a page blob of the specified length. Call uploadPages to upload data\n         * data to a page blob.\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} size\n         * @param {IPageBlobCreateOptions} [options]\n         * @returns {Promise<Models.PageBlobCreateResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.create = function (aborter, size, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.pageBlobContext.create(0, size, {\n                            abortSignal: aborter,\n                            blobHTTPHeaders: options.blobHTTPHeaders,\n                            blobSequenceNumber: options.blobSequenceNumber,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            metadata: options.metadata,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            cpkInfo: options.customerProvidedKey,\n                            tier: toAccessTier(options.tier)\n                        })];\n                });\n            });\n        };\n        /**\n         * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {HttpRequestBody} body\n         * @param {number} offset Offset of destination page blob\n         * @param {number} count Content length of the body, also number of bytes to be uploaded\n         * @param {IPageBlobUploadPagesOptions} [options]\n         * @returns {Promise<Models.PageBlobsUploadPagesResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.uploadPages = function (aborter, body, offset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.pageBlobContext.uploadPages(body, count, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            onUploadProgress: options.progress,\n                            range: rangeToString({ offset: offset, count: count }),\n                            sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n                            transactionalContentMD5: options.transactionalContentMD5,\n                            transactionalContentCrc64: options.transactionalContentCrc64,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * The Upload Pages operation writes a range of pages to a page blob where the\n         * contents are read from a URL.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} sourceURL Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n         * @param {number} sourceOffset The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n         * @param {number} destOffset Offset of destination page blob\n         * @param {number} count Number of bytes to be uploaded from source page blob\n         * @param {IPageBlobUploadPagesFromURLOptions} [options={}]\n         * @returns {Promise<Models.PageBlobUploadPagesFromURLResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.uploadPagesFromURL = function (aborter, sourceURL, sourceOffset, destOffset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n                    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n                    return [2 /*return*/, this.pageBlobContext.uploadPagesFromURL(sourceURL, rangeToString({ offset: sourceOffset, count: count }), 0, rangeToString({ offset: destOffset, count: count }), {\n                            abortSignal: aborter,\n                            sourceContentMD5: options.sourceContentMD5,\n                            sourceContentCrc64: options.sourceContentCrc64,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            sourceModifiedAccessConditions: {\n                                sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n                                sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n                                sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n                                sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n                            },\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Frees the specified pages from the page blob.\n         * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} offset\n         * @param {number} count\n         * @param {IPageBlobClearPagesOptions} [options]\n         * @returns {Promise<Models.PageBlobClearPagesResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.clearPages = function (aborter, offset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    return [2 /*return*/, this.pageBlobContext.clearPages(0, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            range: rangeToString({ offset: offset, count: count }),\n                            sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n                            cpkInfo: options.customerProvidedKey\n                        })];\n                });\n            });\n        };\n        /**\n         * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n         * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} offset\n         * @param {number} count\n         * @param {IPageBlobGetPageRangesOptions} [options]\n         * @returns {Promise<Models.PageBlobGetPageRangesResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.getPageRanges = function (aborter, offset, count, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    return [2 /*return*/, this.pageBlobContext.getPageRanges({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            range: rangeToString({ offset: offset, count: count })\n                        })];\n                });\n            });\n        };\n        /**\n         * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n         * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} offset\n         * @param {number} count\n         * @param {string} prevSnapshot\n         * @param {IPageBlobGetPageRangesDiffOptions} [options]\n         * @returns {Promise<Models.PageBlobGetPageRangesDiffResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.getPageRangesDiff = function (aborter, offset, count, prevSnapshot, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    return [2 /*return*/, this.pageBlobContext.getPageRangesDiff({\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                            prevsnapshot: prevSnapshot,\n                            range: rangeToString({ offset: offset, count: count })\n                        })];\n                });\n            });\n        };\n        /**\n         * Resizes the page blob to the specified size (which must be a multiple of 512).\n         * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {number} size\n         * @param {IPageBlobResizeOptions} [options]\n         * @returns {Promise<Models.PageBlobResizeResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.resize = function (aborter, size, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    return [2 /*return*/, this.pageBlobContext.resize(size, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Sets a page blob's sequence number.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {Models.SequenceNumberActionType} sequenceNumberAction\n         * @param {number} [sequenceNumber] Required if sequenceNumberAction is max or update\n         * @param {IPageBlobUpdateSequenceNumberOptions} [options]\n         * @returns {Promise<Models.PageBlobUpdateSequenceNumberResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.updateSequenceNumber = function (aborter, sequenceNumberAction, sequenceNumber, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    options.accessConditions = options.accessConditions || {};\n                    return [2 /*return*/, this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n                            abortSignal: aborter,\n                            blobSequenceNumber: sequenceNumber,\n                            leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                            modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        /**\n         * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n         * The snapshot is copied such that only the differential changes between the previously\n         * copied snapshot are transferred to the destination.\n         * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n         * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n         * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} copySource Specifies the name of the source page blob snapshot. For example,\n         *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n         * @param {IPageBlobStartCopyIncrementalOptions} [options]\n         * @returns {Promise<Models.PageBlobCopyIncrementalResponse>}\n         * @memberof PageBlobURL\n         */\n        PageBlobURL.prototype.startCopyIncremental = function (aborter, copySource, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.pageBlobContext.copyIncremental(copySource, {\n                            abortSignal: aborter,\n                            modifiedAccessConditions: options.modifiedAccessConditions\n                        })];\n                });\n            });\n        };\n        return PageBlobURL;\n    }(BlobURL));\n\n    /**\n     * Convert a Browser Blob object into string.\n     *\n     * @export\n     * @param {Blob} blob\n     * @returns {Promise<ArrayBuffer>}\n     */\n    function blobToString(blob) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fileReader;\n            return __generator(this, function (_a) {\n                fileReader = new FileReader();\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        fileReader.onloadend = function (ev) {\n                            resolve(ev.target.result);\n                        };\n                        fileReader.onerror = reject;\n                        fileReader.readAsText(blob);\n                    })];\n            });\n        });\n    }\n\n    function getBodyAsText(batchResponse) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blob;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, batchResponse.blobBody];\n                    case 1:\n                        blob = (_a.sent());\n                        return [4 /*yield*/, blobToString(blob)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    }\n    function utf8ByteLength(str) {\n        return new Blob([str]).size;\n    }\n\n    var HTTP_HEADER_DELIMITER = \": \";\n    var SPACE_DELIMITER = \" \";\n    var NOT_FOUND = -1;\n    /**\n     * Util class for parsing batch response.\n     */\n    var BatchResponseParser = /** @class */ (function () {\n        function BatchResponseParser(batchResponse, subRequests) {\n            if (!batchResponse || !batchResponse.contentType) {\n                // In special case(reported), server may return invalid content-type which could not be parsed.\n                throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n            }\n            if (!subRequests || subRequests.size === 0) {\n                // This should be prevent during coding.\n                throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n            }\n            this.batchResponse = batchResponse;\n            this.subRequests = subRequests;\n            this.responseBatchBoundary = this.batchResponse.contentType.split(\"=\")[1];\n            this.perResponsePrefix = \"--\" + this.responseBatchBoundary + HTTP_LINE_ENDING;\n            this.batchResponseEnding = \"--\" + this.responseBatchBoundary + \"--\";\n        }\n        // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n        BatchResponseParser.prototype.parseBatchResponse = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var responseBodyAsText, subResponses, subResponseCount, deserializedSubResponses, subResponsesSucceededCount, subResponsesFailedCount, index, subResponse, deserializedSubResponse, responseLines, subRespHeaderStartFound, subRespHeaderEndFound, subRespFailed, contentId, _i, responseLines_1, responseLine, tokens, tokens;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n                            // sub request's response.\n                            if (this.batchResponse._response.status != HTTPURLConnection.HTTP_ACCEPTED) {\n                                throw new Error(\"Invalid state: batch request failed with status: '\" + this.batchResponse._response.status + \"'.\");\n                            }\n                            return [4 /*yield*/, getBodyAsText(this.batchResponse)];\n                        case 1:\n                            responseBodyAsText = _a.sent();\n                            subResponses = responseBodyAsText\n                                .split(this.batchResponseEnding)[0] // string after ending is useless\n                                .split(this.perResponsePrefix)\n                                .slice(1);\n                            subResponseCount = subResponses.length;\n                            // Defensive coding in case of potential error parsing.\n                            // Note: subResponseCount == 1 is special case where sub request is invalid.\n                            // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n                            // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n                            if (subResponseCount != this.subRequests.size && subResponseCount != 1) {\n                                throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n                            }\n                            deserializedSubResponses = new Array(subResponseCount);\n                            subResponsesSucceededCount = 0;\n                            subResponsesFailedCount = 0;\n                            // Parse sub subResponses.\n                            for (index = 0; index < subResponseCount; index++) {\n                                subResponse = subResponses[index];\n                                deserializedSubResponses[index] = {};\n                                deserializedSubResponse = deserializedSubResponses[index];\n                                deserializedSubResponse.headers = new HttpHeaders();\n                                responseLines = subResponse.split(\"\" + HTTP_LINE_ENDING);\n                                subRespHeaderStartFound = false;\n                                subRespHeaderEndFound = false;\n                                subRespFailed = false;\n                                contentId = NOT_FOUND;\n                                for (_i = 0, responseLines_1 = responseLines; _i < responseLines_1.length; _i++) {\n                                    responseLine = responseLines_1[_i];\n                                    if (!subRespHeaderStartFound) {\n                                        // Convention line to indicate content ID\n                                        if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n                                            contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n                                        }\n                                        // Http version line with status code indicates the start of sub request's response.\n                                        // Example: HTTP/1.1 202 Accepted \n                                        if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n                                            subRespHeaderStartFound = true;\n                                            tokens = responseLine.split(SPACE_DELIMITER);\n                                            deserializedSubResponse.status = parseInt(tokens[1]);\n                                            deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n                                        }\n                                        continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n                                    }\n                                    if (responseLine.trim() === \"\") {\n                                        // Sub response's header start line already found, and the first empty line indicates header end line found. \n                                        if (!subRespHeaderEndFound) {\n                                            subRespHeaderEndFound = true;\n                                        }\n                                        continue; // Skip empty line\n                                    }\n                                    // Note: when code reach here, it indicates subRespHeaderStartFound == true\n                                    if (!subRespHeaderEndFound) {\n                                        if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n                                            // Defensive coding to prevent from missing valuable lines.\n                                            throw new Error(\"Invalid state: find non-empty line '\" + responseLine + \"' without HTTP header delimiter '\" + HTTP_HEADER_DELIMITER + \"'.\");\n                                        }\n                                        tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n                                        deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n                                        if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n                                            deserializedSubResponse.errorCode = tokens[1];\n                                            subRespFailed = true;\n                                        }\n                                    }\n                                    else {\n                                        // Assemble body of sub response.\n                                        if (!deserializedSubResponse.bodyAsText) {\n                                            deserializedSubResponse.bodyAsText = \"\";\n                                        }\n                                        deserializedSubResponse.bodyAsText += responseLine;\n                                    }\n                                } // Inner for end\n                                if (contentId != NOT_FOUND) {\n                                    deserializedSubResponse._request = this.subRequests.get(contentId);\n                                }\n                                if (subRespFailed) {\n                                    subResponsesFailedCount++;\n                                }\n                                else {\n                                    subResponsesSucceededCount++;\n                                }\n                            }\n                            return [2 /*return*/, {\n                                    subResponses: deserializedSubResponses,\n                                    subResponsesSucceededCount: subResponsesSucceededCount,\n                                    subResponsesFailedCount: subResponsesFailedCount\n                                }];\n                    }\n                });\n            });\n        };\n        return BatchResponseParser;\n    }());\n\n    /**\n     * A ServiceURL represents a URL to the Azure Storage Blob service allowing you\n     * to manipulate blob containers.\n     *\n     * @export\n     * @class ServiceURL\n     * @extends {StorageURL}\n     */\n    var ServiceURL = /** @class */ (function (_super) {\n        __extends(ServiceURL, _super);\n        /**\n         * Creates an instance of ServiceURL.\n         *\n         * @param {string} url A URL string pointing to Azure Storage blob service, such as\n         *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n         *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n         * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n         *                            pipeline, or provide a customized pipeline.\n         * @memberof ServiceURL\n         */\n        function ServiceURL(url, pipeline) {\n            var _this = _super.call(this, url, pipeline) || this;\n            _this.serviceContext = new Service(_this.storageClientContext);\n            return _this;\n        }\n        /**\n         * Creates a new ServiceURL object identical to the source but with the\n         * specified request policy pipeline.\n         *\n         * @param {Pipeline} pipeline\n         * @returns {ServiceURL}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.withPipeline = function (pipeline) {\n            return new ServiceURL(this.url, pipeline);\n        };\n        /**\n         * Gets the properties of a storage account’s Blob service, including properties\n         * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties}\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @returns {Promise<Models.ServiceGetPropertiesResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.getProperties = function (aborter) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.serviceContext.getProperties({\n                            abortSignal: aborter\n                        })];\n                });\n            });\n        };\n        /**\n         * Sets properties for a storage account’s Blob service endpoint, including properties\n         * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties}\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {Models.StorageServiceProperties} properties\n         * @returns {Promise<Models.ServiceSetPropertiesResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.setProperties = function (aborter, properties) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.serviceContext.setProperties(properties, {\n                            abortSignal: aborter\n                        })];\n                });\n            });\n        };\n        /**\n         * Retrieves statistics related to replication for the Blob service. It is only\n         * available on the secondary location endpoint when read-access geo-redundant\n         * replication is enabled for the storage account.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats}\n         *\n         *  @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @returns {Promise<Models.ServiceGetStatisticsResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.getStatistics = function (aborter) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.serviceContext.getStatistics({\n                            abortSignal: aborter\n                        })];\n                });\n            });\n        };\n        /**\n         * The Get Account Information operation returns the sku name and account kind\n         * for the specified account.\n         * The Get Account Information operation is available on service versions beginning\n         * with version 2018-03-28.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @returns {Promise<Models.ServiceGetAccountInfoResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.getAccountInfo = function (aborter) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.serviceContext.getAccountInfo({\n                            abortSignal: aborter\n                        })];\n                });\n            });\n        };\n        /**\n         * Returns a list of the containers under the specified account.\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {string} [marker] A string value that identifies the portion of\n         *                          the list of containers to be returned with the next listing operation. The\n         *                          operation returns the NextMarker value within the response body if the\n         *                          listing operation did not return all containers remaining to be listed\n         *                          with the current page. The NextMarker value can be used as the value for\n         *                          the marker parameter in a subsequent call to request the next page of list\n         *                          items. The marker value is opaque to the client.\n         * @param {IServiceListContainersSegmentOptions} [options]\n         * @returns {Promise<Models.ServiceListContainersSegmentResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.listContainersSegment = function (aborter, marker, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.serviceContext.listContainersSegment(__assign({ abortSignal: aborter, marker: marker }, options))];\n                });\n            });\n        };\n        /**\n         * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n         *\n         * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n         * bearer token authentication.\n         *\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation\n         * @param {Date} start      The start time for the user delegation SAS. Must be within 7 days of the current time\n         * @param {Date} expiry     The end time for the user delegation SAS. Must be within 7 days of the current time\n         * @returns {Promise<ServiceGetUserDelegationKeyResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.getUserDelegationKey = function (aborter, start, expiry) {\n            return __awaiter(this, void 0, void 0, function () {\n                var response, userDelegationKey, res;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.serviceContext.getUserDelegationKey({\n                                start: truncatedISO8061Date(start, false),\n                                expiry: truncatedISO8061Date(expiry, false)\n                            }, {\n                                abortSignal: aborter\n                            })];\n                        case 1:\n                            response = _a.sent();\n                            userDelegationKey = {\n                                signedOid: response.signedOid,\n                                signedTid: response.signedTid,\n                                signedStart: new Date(response.signedStart),\n                                signedExpiry: new Date(response.signedExpiry),\n                                signedService: response.signedService,\n                                signedVersion: response.signedVersion,\n                                value: response.value\n                            };\n                            res = __assign({ _response: response._response, requestId: response.requestId, clientRequestId: response.clientRequestId, version: response.version, date: response.date, errorCode: response.errorCode }, userDelegationKey);\n                            return [2 /*return*/, res];\n                    }\n                });\n            });\n        };\n        /**\n         * Submit batch request which consists of multiple subrequests.\n         *\n         * @example\n         * let batchDeleteRequest = new BatchDeleteRequest();\n         * await batchDeleteRequest.addSubRequest(urlInString0, credential0);\n         * await batchDeleteRequest.addSubRequest(urlInString1, credential1, {\n         *  deleteSnapshots: \"include\"\n         * });\n         * const deleteBatchResp = await serviceURL.submitBatch(Aborter.none, batchDeleteRequest);\n         * console.log(deleteBatchResp.subResponsesSucceededCount);\n         *\n         * @example\n         * let batchSetTierRequest = new BatchSetTierRequest();\n         * await batchSetTierRequest.addSubRequest(blockBlobURL0, \"Cool\");\n         * await batchSetTierRequest.addSubRequest(blockBlobURL1, \"Cool\", {\n         *  leaseAccessConditions: { leaseId: leaseId }\n         * });\n         * const setTierBatchResp = await serviceURL.submitBatch(Aborter.none, batchSetTierRequest);\n         * console.log(setTierBatchResp.subResponsesSucceededCount);\n         *\n         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n         *\n         * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n         *                          goto documents of Aborter for more examples about request cancellation.\n         * @param {BatchRequest} batchRequest Supported batch request: BatchDeleteRequest or BatchSetTierRequest.\n         * @param {Models.ServiceSubmitBatchOptionalParams} [options]\n         * @returns {Promise<ServiceSubmitBatchResponse>}\n         * @memberof ServiceURL\n         */\n        ServiceURL.prototype.submitBatch = function (aborter, batchRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var batchRequestBody, rawBatchResponse, batchResponseParser, responseSummary, res;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!batchRequest || batchRequest.getSubRequests().size == 0) {\n                                throw new RangeError(\"Batch request should contain one or more sub requests.\");\n                            }\n                            batchRequestBody = batchRequest.getHttpRequestBody();\n                            return [4 /*yield*/, this.serviceContext.submitBatch(batchRequestBody, utf8ByteLength(batchRequestBody), batchRequest.getMultiPartContentType(), __assign({ abortSignal: aborter }, options))];\n                        case 1:\n                            rawBatchResponse = _a.sent();\n                            batchResponseParser = new BatchResponseParser(rawBatchResponse, batchRequest.getSubRequests());\n                            return [4 /*yield*/, batchResponseParser.parseBatchResponse()];\n                        case 2:\n                            responseSummary = _a.sent();\n                            res = {\n                                _response: rawBatchResponse._response,\n                                contentType: rawBatchResponse.contentType,\n                                errorCode: rawBatchResponse.errorCode,\n                                requestId: rawBatchResponse.requestId,\n                                clientRequestId: rawBatchResponse.clientRequestId,\n                                version: rawBatchResponse.version,\n                                subResponses: responseSummary.subResponses,\n                                subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n                                subResponsesFailedCount: responseSummary.subResponsesFailedCount\n                            };\n                            return [2 /*return*/, res];\n                    }\n                });\n            });\n        };\n        return ServiceURL;\n    }(StorageURL));\n\n    exports.Aborter = Aborter;\n    exports.AnonymousCredential = AnonymousCredential;\n    exports.AnonymousCredentialPolicy = AnonymousCredentialPolicy;\n    exports.AppendBlobURL = AppendBlobURL;\n    exports.BaseRequestPolicy = BaseRequestPolicy;\n    exports.BatchDeleteRequest = BatchDeleteRequest;\n    exports.BatchRequest = BatchRequest;\n    exports.BatchSetTierRequest = BatchSetTierRequest;\n    exports.BlobURL = BlobURL;\n    exports.BlockBlobURL = BlockBlobURL;\n    exports.BrowserPolicyFactory = BrowserPolicyFactory;\n    exports.ContainerURL = ContainerURL;\n    exports.Credential = Credential;\n    exports.CredentialPolicy = CredentialPolicy;\n    exports.HttpHeaders = HttpHeaders;\n    exports.LoggingPolicyFactory = LoggingPolicyFactory;\n    exports.Models = index;\n    exports.PageBlobURL = PageBlobURL;\n    exports.Pipeline = Pipeline;\n    exports.RequestPolicyOptions = RequestPolicyOptions;\n    exports.RestError = RestError;\n    exports.RetryPolicyFactory = RetryPolicyFactory;\n    exports.ServiceURL = ServiceURL;\n    exports.StorageURL = StorageURL;\n    exports.TelemetryPolicyFactory = TelemetryPolicyFactory;\n    exports.TokenCredential = TokenCredential;\n    exports.TokenCredentialPolicy = TokenCredentialPolicy;\n    exports.UniqueRequestIDPolicyFactory = UniqueRequestIDPolicyFactory;\n    exports.WebResource = WebResource;\n    exports.deserializationPolicy = deserializationPolicy;\n    exports.uploadBrowserDataToBlockBlob = uploadBrowserDataToBlockBlob;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n"]}